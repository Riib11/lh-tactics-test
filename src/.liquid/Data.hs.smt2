(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.TreeN 0)) ((par () ((Data.Node (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$2 Data.TreeN) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$1 Data.TreeN)) Data.Leaf))))
(declare-datatypes ((Data.ListN2 0)) ((par () (Data.Nil2 (Data.Cons2 (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 Data.ListN2))))))
(declare-datatypes ((Data.ListN 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.ListN))))))
(declare-fun lq_anf$36$$35$$35$7205759403792804500$35$$35$d2PO () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804386$35$$35$d2NY () Data.N)
(declare-fun GHC.List.replicate () Int)
(declare-fun h$35$$35$a1Gx () Data.N)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN () Str)
(declare-fun Data.Either.Right () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Str)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804489$35$$35$d2PD () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1P3 () Int)
(declare-fun lq_tmp$36$x$35$$35$1417 () Data.N)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun n$35$$35$a1Ge () Data.N)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804469$35$$35$d2Pj () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1OV () Int)
(declare-fun m$35$$35$a1Gf () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804439$35$$35$d2OP () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804484$35$$35$d2Py () Int)
(declare-fun fix$36$$36$krep_a1QJ () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804528$35$$35$d2Qg () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun n$35$$35$a1Gh () Data.N)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$3603 () Data.ListN)
(declare-fun fst () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Data.$36$tc$39$Cons2 () Int)
(declare-fun snd () Int)
(declare-fun m$35$$35$a1Gk () Data.N)
(declare-fun GHC.List.repeat () Int)
(declare-fun fix$36$$36$krep_a1QG () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1Ql () Int)
(declare-fun GHC.List.break () Int)
(declare-fun Data.leN () Int)
(declare-fun l1$35$$35$a1Gs () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804398$35$$35$d2Oa () Str)
(declare-fun Data.addN () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM () Data.N)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_karg$36$VV$35$$35$2841$35$$35$k_$35$$35$2842 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun x$35$$35$a1GY () Data.N)
(declare-fun ds_d2JR () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI () Data.N)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804376$35$$35$d2NO () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 () Str)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun Data.lengthListN () Int)
(declare-fun h$35$$35$a1GI () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804481$35$$35$d2Pv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804444$35$$35$d2OU () Str)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS () Data.ListN)
(declare-fun lit$36$N () Str)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804440$35$$35$d2OQ () Data.ListN)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804446$35$$35$d2OW () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 () Int)
(declare-fun lit$36$$39$Nil2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804448$35$$35$d2OY () Data.N)
(declare-fun VV$35$$35$F$35$$35$27 () Str)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun ds_d2Jo () Data.ListN)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Data.initListN () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun x$35$$35$a1H8 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Str)
(declare-fun lq_tmp$36$x$35$$35$2050 () Data.ListN)
(declare-fun papp1 () Int)
(declare-fun ds_d2Lr () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804415$35$$35$d2Or () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804373$35$$35$d2NL () Str)
(declare-fun l$35$$35$a1Hl () Data.TreeN)
(declare-fun ds_d2IJ () Data.N)
(declare-fun fix$36$$36$cshowList$35$$35$a1Qr () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun ds_d2K8 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI () Int)
(declare-fun ds_d2L7 () Data.TreeN)
(declare-fun VV$35$$35$F$35$$35$30 () Str)
(declare-fun VV$35$$35$F$35$$35$29 () Str)
(declare-fun lq_tmp$36$x$35$$35$3089 () Int)
(declare-fun lq_tmp$36$x$35$$35$1245 () Data.N)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Q1 () Int)
(declare-fun papp4 () Int)
(declare-fun lq_karg$36$VV$35$$35$3169$35$$35$k_$35$$35$3170 () Int)
(declare-fun lq_tmp$36$x$35$$35$3265 () Int)
(declare-fun l$35$$35$a1Hi () Data.TreeN)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun t$35$$35$a1H1 () Data.ListN)
(declare-fun Data.insertListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK () Str)
(declare-fun Data.$36$tc$39$Node () Int)
(declare-fun Data.reverseListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804488$35$$35$d2PC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804511$35$$35$d2PZ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804512$35$$35$d2Q0 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px () Int)
(declare-fun fix$36$$36$krep_a1QL () Int)
(declare-fun n$35$$35$a1GC () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$2747$35$$35$k_$35$$35$2748 () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1PU () Int)
(declare-fun h$35$$35$a1GE () Data.N)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lit$36$Z () Str)
(declare-fun fix$36$$36$krep_a1QI () Int)
(declare-fun r$35$$35$a1Hm () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun n$35$$35$a1Gm () Data.N)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804451$35$$35$d2P1 () Data.ListN)
(declare-fun cast_as_int () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804482$35$$35$d2Pw () Int)
(declare-fun Data.$36$fEqListN () Int)
(declare-fun x2$35$$35$a1Hf () Data.N)
(declare-fun fix$36$$36$krep_a1QB () Int)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun x1$35$$35$a1He () Data.N)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804480$35$$35$d2Pu () Str)
(declare-fun xs$35$$35$a1Hg () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc () Int)
(declare-fun lit$36$$39$Leaf () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804450$35$$35$d2P0 () Data.N)
(declare-fun h$35$$35$a1Gv () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804424$35$$35$d2OA () Data.ListN)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun lit$36$$39$Nil () Str)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun ds_d2KT () Data.N)
(declare-fun lit$36$$39$Cons2 () Str)
(declare-fun ds_d2JM () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804449$35$$35$d2OZ () Data.ListN)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun Data.implies () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR () Data.ListN)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2501 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1799 () Data.ListN)
(declare-fun n$35$$35$a1Gp () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804509$35$$35$d2PX () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun ds_d2IA () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792804460$35$$35$d2Pa () Str)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804462$35$$35$d2Pc () Int)
(declare-fun Data.concatListN () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Pm () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804466$35$$35$d2Pg () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804464$35$$35$d2Pe () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun n$35$$35$a1G7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH () Int)
(declare-fun ds_d2LQ () Data.N)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Str)
(declare-fun Data.$36$tc$39$Nil2 () Int)
(declare-fun Data.$36$tc$39$Cons () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1PG () Int)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun t$35$$35$a1GP () Data.ListN)
(declare-fun lit$36$ListN2 () Str)
(declare-fun Data.$36$tcN () Int)
(declare-fun q$35$$35$a1G5 () Bool)
(declare-fun p$35$$35$a1G4 () Bool)
(declare-fun n$35$$35$a1Gz () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804475$35$$35$d2Pp () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804477$35$$35$d2Pr () Int)
(declare-fun t$35$$35$a1H7 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun ys$35$$35$a1Hb () Data.ListN)
(declare-fun n$35$$35$a1Ga () Data.N)
(declare-fun ds_d2M3 () Data.N)
(declare-fun Data.lastListN () Int)
(declare-fun h$35$$35$a1H0 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2739 () Int)
(declare-fun y$35$$35$a1Ha () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1907 () Data.ListN)
(declare-fun ds_d2IW () Data.ListN)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804377$35$$35$d2NP () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804510$35$$35$d2PY () Int)
(declare-fun ds_d2LJ () Data.N)
(declare-fun r$35$$35$a1Hj () Data.TreeN)
(declare-fun charX () Int)
(declare-fun h$35$$35$a1GG () Data.N)
(declare-fun Data.sortListN () Int)
(declare-fun Data.n_to_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On () Data.N)
(declare-fun Data.leqN () Int)
(declare-fun n$35$$35$a1Gd () Data.N)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804478$35$$35$d2Ps () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$Dsa0AfFBvEyFFsh6n4qVmd () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804474$35$$35$d2Po () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1685 () Data.N)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun fix$36$$36$krep_a1QK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804383$35$$35$d2NV () Str)
(declare-fun l$35$$35$a1GF () Data.ListN)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804400$35$$35$d2Oc () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT () Data.N)
(declare-fun t$35$$35$a1GN () Data.ListN)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lq_tmp$36$x$35$$35$2725 () Int)
(declare-fun y$35$$35$a1GS () Data.N)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804470$35$$35$d2Pk () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_tmp$36$x$35$$35$2582 () Data.ListN2)
(declare-fun ds_d2KO () Data.ListN)
(declare-fun fix$36$$36$krep_a1QD () Int)
(declare-fun n$35$$35$a1GK () Data.N)
(declare-fun GHC.Types.False () Bool)
(declare-fun isJust () Int)
(declare-fun h$35$$35$a1GM () Data.N)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun ds_d2Ko () Data.ListN)
(declare-fun lit$36$$39$Node () Str)
(declare-fun lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun ds_d2Jv () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1518 () Data.ListN)
(declare-fun Data.lengthListN_int () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun ds_d2IX () Data.ListN)
(declare-fun ds_d2KJ () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3359$35$$35$k_$35$$35$3360 () Int)
(declare-fun fix$36$$36$krep_a1QA () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun ds_d2LE () Data.ListN)
(declare-fun ds_d2Le () Data.N)
(declare-fun len () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804422$35$$35$d2Oy () Str)
(declare-fun ds_d2JH () Data.ListN)
(declare-fun Data.$36$tc$39$Leaf () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804461$35$$35$d2Pb () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804431$35$$35$d2OH () Data.ListN)
(declare-fun l$35$$35$a1Gw () Data.ListN)
(declare-fun n$35$$35$a1Gu () Data.N)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804465$35$$35$d2Pf () Int)
(declare-fun lq_tmp$36$x$35$$35$2895 () Int)
(declare-fun xs$35$$35$a1H2 () Data.ListN)
(declare-fun Data.takeListN () Int)
(declare-fun Data.zipListN () Int)
(declare-fun Data.heightTreeN () Int)
(declare-fun Data.$36$tc$39$Nil () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2316 () Data.ListN)
(declare-fun lit$36$ListN () Str)
(declare-fun Data.$36$tc$39$S () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804476$35$$35$d2Pq () Int)
(declare-fun Data.countListN () Int)
(declare-fun Data.dropListN2 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun n$35$$35$a1GX () Data.N)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn () Int)
(declare-fun lit$36$Nil () Str)
(declare-fun VV$35$$35$F$35$$35$33 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3021$35$$35$k_$35$$35$3022 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$2210 () Data.ListN)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$VV$35$$35$2671$35$$35$k_$35$$35$2672 () Int)
(declare-fun lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804486$35$$35$d2PA () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8 () Data.N)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804403$35$$35$d2Of () Data.N)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804471$35$$35$d2Pl () Int)
(declare-fun fix$36$$36$krep_a1QM () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun Data.$36$tcListN2 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN () Str)
(declare-fun lit$36$$39$Cons () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804479$35$$35$d2Pt () Int)
(declare-fun t$35$$35$a1GH () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$2979$35$$35$k_$35$$35$2980 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804473$35$$35$d2Pn () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9 () Int)
(declare-fun lq_tmp$36$x$35$$35$1085 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792804420$35$$35$d2Ow () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe () Data.ListN)
(declare-fun lit$36$$39$Z () Str)
(declare-fun fix$36$$36$krep_a1QF () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun Data.$36$fEqTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804522$35$$35$d2Qa () Int)
(declare-fun head () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN () Str)
(declare-fun lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN () Str)
(declare-fun l2$35$$35$a1Gq () Data.ListN)
(declare-fun h$35$$35$a1GO () Data.N)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3279 () Int)
(declare-fun cast_as () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun n$35$$35$a1Gi () Data.N)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun x$35$$35$a1Hh () Data.N)
(declare-fun fix$36$$36$krep_a1QC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804423$35$$35$d2Oz () Data.N)
(declare-fun Data.singletonListN () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lit$36$TreeN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804387$35$$35$d2NZ () Data.N)
(declare-fun lit$36$Data () Str)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun n$35$$35$a1Gl () Data.N)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun m$35$$35$a1Go () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804385$35$$35$d2NX () Str)
(declare-fun lq_tmp$36$x$35$$35$1300 () Data.N)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox () Data.ListN)
(declare-fun xs$35$$35$a1H9 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804513$35$$35$d2Q1 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun h$35$$35$a1GU () Data.N)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Str)
(declare-fun lq_karg$36$VV$35$$35$3287$35$$35$k_$35$$35$3288 () Int)
(declare-fun lq_karg$36$VV$35$$35$2917$35$$35$k_$35$$35$2918 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3097$35$$35$k_$35$$35$3098 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun ys$35$$35$a1H5 () Data.ListN)
(declare-fun x_Tuple33 () Int)
(declare-fun n$35$$35$a1G6 () Data.N)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun Data.mirrorTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU () Data.N)
(declare-fun ds_d2K2 () Data.ListN)
(declare-fun GHC.List.drop () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1OG () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun papp5 () Int)
(declare-fun Data.subN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804375$35$$35$d2NN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804487$35$$35$d2PB () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun Data.initConcatListN () Int)
(declare-fun ds_d2IK () Data.ListN2)
(declare-fun lit$36$Cons$32$ () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804459$35$$35$d2P9 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804413$35$$35$d2Op () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804458$35$$35$d2P8 () Str)
(declare-fun ds_d2K9 () Data.ListN)
(declare-fun Data.maxN () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Str)
(declare-fun VV$35$$35$F$35$$35$28 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot () Data.ListN)
(declare-fun lit$36$$39$S () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP () Int)
(declare-fun ys$35$$35$a1GT () Data.ListN)
(declare-fun Data.$36$tcListN () Int)
(declare-fun l$35$$35$a1GB () Data.ListN)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT () Int)
(declare-fun Data.nullListN () Int)
(declare-fun t$35$$35$a1GJ () Data.ListN)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804472$35$$35$d2Pm () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV () Str)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun m$35$$35$a1Gc () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804402$35$$35$d2Oe () Data.N)
(declare-fun Data.$36$fShowN () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun Data.$36$fEqN () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804468$35$$35$d2Pi () Int)
(declare-fun h$35$$35$a1GA () Data.N)
(declare-fun GHC.List.head () Int)
(declare-fun Data.$36$fEqListN2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804485$35$$35$d2Pz () Int)
(declare-fun Data.$36$trModule () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_tmp$36$x$35$$35$3075 () Int)
(declare-fun h$35$$35$a1H6 () Data.N)
(declare-fun ds_d2KC () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804514$35$$35$d2Q2 () Int)
(declare-fun x$35$$35$a1GQ () Data.N)
(declare-fun lit$36$S$32$ () Str)
(declare-fun fix$36$$36$krep_a1QH () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1PM () Int)
(declare-fun Data.$36$fShowListN () Int)
(declare-fun Data.dropListN () Int)
(declare-fun ds_d2Kn () Data.N)
(declare-fun GHC.Classes.compare () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Q9 () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Oy () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun ds_d2M8 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk () Int)
(declare-fun Data.elemListN () Int)
(declare-fun x$35$$35$a1Hk () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun ds_d2JW () Data.ListN)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun fix$36$$36$krep_a1QE () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804463$35$$35$d2Pd () Int)
(declare-fun Data.$36$tc$39$Z () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun autolen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov () Data.ListN)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN () Str)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Pe () Int)
(declare-fun lq_tmp$36$x$35$$35$3712 () Data.ListN)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804490$35$$35$d2PE () Int)
(declare-fun h$35$$35$a1Gr () Data.N)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun n$35$$35$a1Hc () Data.N)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun y$35$$35$a1H4 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT () Data.ListN)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_tmp$36$x$35$$35$1128 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2909 () Int)
(declare-fun Data.$36$tcTreeN () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun l$35$$35$a1Gy () Data.ListN)
(declare-fun m$35$$35$a1G8 () Data.N)
(declare-fun lq_karg$36$VV$35$$35$2643$35$$35$k_$35$$35$2644 () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Oj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804527$35$$35$d2Qf () Int)
(declare-fun lq_karg$36$VV$35$$35$2799$35$$35$k_$35$$35$2800 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804430$35$$35$d2OG () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804416$35$$35$d2Os () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804529$35$$35$d2Qh () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804525$35$$35$d2Qd () Int)
(declare-fun lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 () Int)
(declare-fun lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 () Int)
(declare-fun lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 () Int)
(declare-fun ds_d2Jf () Data.ListN)
(declare-fun papp3 () Int)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$39 (Int Data.ListN) Data.TreeN)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Data.ListN)
(declare-fun apply$35$$35$35 (Int Data.ListN) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int Bool) Data.N)
(declare-fun apply$35$$35$23 (Int Str) Data.TreeN)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$56 (Int Data.TreeN) Int)
(declare-fun apply$35$$35$7 (Int Int) Data.TreeN)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int Str) Data.ListN2)
(declare-fun apply$35$$35$54 (Int Data.N) Data.N)
(declare-fun apply$35$$35$46 (Int Data.ListN2) Data.N)
(declare-fun apply$35$$35$53 (Int Data.N) Data.ListN2)
(declare-fun apply$35$$35$45 (Int Data.ListN2) Data.ListN2)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Data.ListN) Data.ListN)
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) Data.TreeN)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.ListN)
(declare-fun apply$35$$35$32 (Int Data.ListN) Int)
(declare-fun apply$35$$35$12 (Int Bool) Data.ListN)
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$13 (Int Bool) Data.ListN2)
(declare-fun apply$35$$35$62 (Int Data.TreeN) Data.N)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Data.ListN2)
(declare-fun apply$35$$35$47 (Int Data.ListN2) Data.TreeN)
(declare-fun apply$35$$35$55 (Int Data.N) Data.TreeN)
(declare-fun apply$35$$35$22 (Int Str) Data.N)
(declare-fun apply$35$$35$40 (Int Data.ListN2) Int)
(declare-fun apply$35$$35$48 (Int Data.N) Int)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int Data.ListN2) Data.ListN)
(declare-fun apply$35$$35$52 (Int Data.N) Data.ListN)
(declare-fun apply$35$$35$37 (Int Data.ListN) Data.ListN2)
(declare-fun apply$35$$35$57 (Int Data.TreeN) Bool)
(declare-fun apply$35$$35$60 (Int Data.TreeN) Data.ListN)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$33 (Int Data.ListN) Bool)
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$42 (Int Data.ListN2) Str)
(declare-fun apply$35$$35$50 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$59 (Int Data.TreeN) (_ BitVec 32))
(declare-fun apply$35$$35$63 (Int Data.TreeN) Data.TreeN)
(declare-fun apply$35$$35$20 (Int Str) Data.ListN)
(declare-fun apply$35$$35$58 (Int Data.TreeN) Str)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$41 (Int Data.ListN2) Bool)
(declare-fun apply$35$$35$49 (Int Data.N) Bool)
(declare-fun apply$35$$35$34 (Int Data.ListN) Str)
(declare-fun apply$35$$35$61 (Int Data.TreeN) Data.ListN2)
(declare-fun apply$35$$35$43 (Int Data.ListN2) (_ BitVec 32))
(declare-fun apply$35$$35$51 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$15 (Int Bool) Data.TreeN)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$6 (Int Int) Data.N)
(declare-fun apply$35$$35$5 (Int Int) Data.ListN2)
(declare-fun apply$35$$35$38 (Int Data.ListN) Data.N)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$39 (Data.ListN) Data.TreeN)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Data.ListN)
(declare-fun coerce$35$$35$35 (Data.ListN) (_ BitVec 32))
(declare-fun coerce$35$$35$14 (Bool) Data.N)
(declare-fun coerce$35$$35$23 (Str) Data.TreeN)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$56 (Data.TreeN) Int)
(declare-fun coerce$35$$35$7 (Int) Data.TreeN)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$21 (Str) Data.ListN2)
(declare-fun coerce$35$$35$54 (Data.N) Data.N)
(declare-fun coerce$35$$35$46 (Data.ListN2) Data.N)
(declare-fun coerce$35$$35$53 (Data.N) Data.ListN2)
(declare-fun coerce$35$$35$45 (Data.ListN2) Data.ListN2)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Data.ListN) Data.ListN)
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) Data.TreeN)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.ListN)
(declare-fun coerce$35$$35$32 (Data.ListN) Int)
(declare-fun coerce$35$$35$12 (Bool) Data.ListN)
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$13 (Bool) Data.ListN2)
(declare-fun coerce$35$$35$62 (Data.TreeN) Data.N)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Data.ListN2)
(declare-fun coerce$35$$35$47 (Data.ListN2) Data.TreeN)
(declare-fun coerce$35$$35$55 (Data.N) Data.TreeN)
(declare-fun coerce$35$$35$22 (Str) Data.N)
(declare-fun coerce$35$$35$40 (Data.ListN2) Int)
(declare-fun coerce$35$$35$48 (Data.N) Int)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 (Data.ListN2) Data.ListN)
(declare-fun coerce$35$$35$52 (Data.N) Data.ListN)
(declare-fun coerce$35$$35$37 (Data.ListN) Data.ListN2)
(declare-fun coerce$35$$35$57 (Data.TreeN) Bool)
(declare-fun coerce$35$$35$60 (Data.TreeN) Data.ListN)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$33 (Data.ListN) Bool)
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$42 (Data.ListN2) Str)
(declare-fun coerce$35$$35$50 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$59 (Data.TreeN) (_ BitVec 32))
(declare-fun coerce$35$$35$63 (Data.TreeN) Data.TreeN)
(declare-fun coerce$35$$35$20 (Str) Data.ListN)
(declare-fun coerce$35$$35$58 (Data.TreeN) Str)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$41 (Data.ListN2) Bool)
(declare-fun coerce$35$$35$49 (Data.N) Bool)
(declare-fun coerce$35$$35$34 (Data.ListN) Str)
(declare-fun coerce$35$$35$61 (Data.TreeN) Data.ListN2)
(declare-fun coerce$35$$35$43 (Data.ListN2) (_ BitVec 32))
(declare-fun coerce$35$$35$51 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$15 (Bool) Data.TreeN)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$6 (Int) Data.N)
(declare-fun coerce$35$$35$5 (Int) Data.ListN2)
(declare-fun coerce$35$$35$38 (Data.ListN) Data.N)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$39 (Data.ListN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Data.ListN) Int)
(declare-fun smt_lambda$35$$35$35 (Data.ListN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$23 (Str Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$56 (Data.TreeN Int) Int)
(declare-fun smt_lambda$35$$35$7 (Int Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 (Str Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$54 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$46 (Data.ListN2 Data.N) Int)
(declare-fun smt_lambda$35$$35$53 (Data.N Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$45 (Data.ListN2 Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Data.ListN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.ListN) Int)
(declare-fun smt_lambda$35$$35$32 (Data.ListN Int) Int)
(declare-fun smt_lambda$35$$35$12 (Bool Data.ListN) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$13 (Bool Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$62 (Data.TreeN Data.N) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$47 (Data.ListN2 Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$55 (Data.N Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$22 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$40 (Data.ListN2 Int) Int)
(declare-fun smt_lambda$35$$35$48 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 (Data.ListN2 Data.ListN) Int)
(declare-fun smt_lambda$35$$35$52 (Data.N Data.ListN) Int)
(declare-fun smt_lambda$35$$35$37 (Data.ListN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$57 (Data.TreeN Bool) Int)
(declare-fun smt_lambda$35$$35$60 (Data.TreeN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$33 (Data.ListN Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$42 (Data.ListN2 Str) Int)
(declare-fun smt_lambda$35$$35$50 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$59 (Data.TreeN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$63 (Data.TreeN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$20 (Str Data.ListN) Int)
(declare-fun smt_lambda$35$$35$58 (Data.TreeN Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$41 (Data.ListN2 Bool) Int)
(declare-fun smt_lambda$35$$35$49 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.ListN Str) Int)
(declare-fun smt_lambda$35$$35$61 (Data.TreeN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$43 (Data.ListN2 (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$51 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$38 (Data.ListN Data.N) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$2$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$3$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$4$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$5$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$6$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$7$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$1$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$2$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$3$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$4$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$5$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$6$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$7$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$2$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$3$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$4$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$5$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$6$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$7$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$1$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN lit$36$S$32$ lit$36$$39$S lit$36$Cons$32$ lit$36$Data lit$36$TreeN lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN lit$36$$39$Z lit$36$$39$Cons lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN lit$36$Nil lit$36$ListN lit$36$$39$Node lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$Dsa0AfFBvEyFFsh6n4qVmd lit$36$ListN2 lit$36$$39$Cons2 lit$36$$39$Nil lit$36$$39$Leaf lit$36$Z lit$36$$39$Nil2 lit$36$N lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN))



(assert (distinct GHC.Types.False GHC.Types.True))





(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))



(assert (= (strLen lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN) 46))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) 40))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$N) 1))
(assert (= (strLen lit$36$$39$Nil2) 5))
(assert (= (strLen lit$36$Z) 1))
(assert (= (strLen lit$36$$39$Leaf) 5))
(assert (= (strLen lit$36$$39$Nil) 4))
(assert (= (strLen lit$36$$39$Cons2) 6))
(assert (= (strLen lit$36$ListN2) 6))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$Dsa0AfFBvEyFFsh6n4qVmd) 46))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$ListN) 5))
(assert (= (strLen lit$36$Nil) 3))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) 39))
(assert (= (strLen lit$36$$39$Cons) 5))
(assert (= (strLen lit$36$$39$Z) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) 40))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) 45))
(assert (= (strLen lit$36$TreeN) 5))
(assert (= (strLen lit$36$Data) 4))
(assert (= (strLen lit$36$Cons$32$) 5))
(assert (= (strLen lit$36$$39$S) 2))
(assert (= (strLen lit$36$S$32$) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN) 45))
(push 1)
(define-fun b$36$$35$$35$224 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK)) (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK ds_d2LQ) (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK (Data.S m$35$$35$a1Gc)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK) m$35$$35$a1Gc)))
(define-fun b$36$$35$$35$256 () Bool (= lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT n$35$$35$a1Gi))
(define-fun b$36$$35$$35$320 () Bool (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 ds_d2KT))
(define-fun b$36$$35$$35$512 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV)) (= lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV Data.Nil) (= lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV ds_d2IX)))
(define-fun b$36$$35$$35$576 () Bool (= lq_anf$36$$35$$35$7205759403792804478$35$$35$d2Ps 7895508399019979807))
(define-fun b$36$$35$$35$608 () Bool (= lq_anf$36$$35$$35$7205759403792804500$35$$35$d2PO 6344880682537752861))
(define-fun b$36$$35$$35$640 () Bool (= fix$36$$36$krep_a1QB (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QC) fix$36$$36$krep_a1QD)))
(define-fun b$36$$35$$35$800 () Bool (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804473$35$$35$d2Pn) lq_anf$36$$35$$35$7205759403792804474$35$$35$d2Po) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804476$35$$35$d2Pq) lq_anf$36$$35$$35$7205759403792804477$35$$35$d2Pr) fix$36$$36$krep_a1QM)))
(define-fun b$36$$35$$35$225 () Bool (= lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM n$35$$35$a1Ga))
(define-fun b$36$$35$$35$321 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9)) (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 Data.Z) (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 ds_d2KT)))
(define-fun b$36$$35$$35$513 () Bool (= lq_anf$36$$35$$35$7205759403792804446$35$$35$d2OW lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$577 () Bool (= lq_anf$36$$35$$35$7205759403792804479$35$$35$d2Pt 16510478767152788809))
(define-fun b$36$$35$$35$609 () Bool (= lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP 13130492971624889864))
(define-fun b$36$$35$$35$641 () Bool (= lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9 7393887473190957234))
(define-fun b$36$$35$$35$801 () Bool (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804468$35$$35$d2Pi) lq_anf$36$$35$$35$7205759403792804469$35$$35$d2Pj) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804471$35$$35$d2Pl) lq_anf$36$$35$$35$7205759403792804472$35$$35$d2Pm) fix$36$$36$krep_a1QC)))
(define-fun b$36$$35$$35$226 () Bool (= lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM n$35$$35$a1Ga))
(define-fun b$36$$35$$35$322 () Bool (= lq_anf$36$$35$$35$7205759403792804398$35$$35$d2Oa lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$386 () Bool (= lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot ds_d2K9))
(define-fun b$36$$35$$35$578 () Bool (= lq_anf$36$$35$$35$7205759403792804480$35$$35$d2Pu lit$36$ListN))
(define-fun b$36$$35$$35$610 () Bool (= lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ lit$36$$39$Nil2))
(define-fun b$36$$35$$35$642 () Bool (= lq_anf$36$$35$$35$7205759403792804522$35$$35$d2Qa 11971902620800867536))
(define-fun b$36$$35$$35$802 () Bool (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)))
(define-fun b$36$$35$$35$227 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM)) (= lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM Data.Z) (= lq_anf$36$$35$$35$7205759403792804374$35$$35$d2NM n$35$$35$a1Ga)))
(define-fun b$36$$35$$35$259 () Bool (= lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT n$35$$35$a1Gi))
(define-fun b$36$$35$$35$323 () Bool (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 ds_d2KT))
(define-fun b$36$$35$$35$579 () Bool (= lq_anf$36$$35$$35$7205759403792804481$35$$35$d2Pv (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804480$35$$35$d2Pu)))
(define-fun b$36$$35$$35$611 () Bool (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ)))
(define-fun b$36$$35$$35$643 () Bool (= lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb lit$36$$39$Node))
(define-fun b$36$$35$$35$803 () Bool (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804462$35$$35$d2Pc) lq_anf$36$$35$$35$7205759403792804463$35$$35$d2Pd) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804465$35$$35$d2Pf) lq_anf$36$$35$$35$7205759403792804466$35$$35$d2Pg) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$68 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$132 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$228 () Bool (= lq_anf$36$$35$$35$7205759403792804375$35$$35$d2NN lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$580 () Bool (= lq_anf$36$$35$$35$7205759403792804482$35$$35$d2Pw 0))
(define-fun b$36$$35$$35$612 () Bool (= lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS 0))
(define-fun b$36$$35$$35$644 () Bool (= lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb)))
(define-fun b$36$$35$$35$804 () Bool (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792804459$35$$35$d2P9) lq_anf$36$$35$$35$7205759403792804461$35$$35$d2Pb)))
(define-fun b$36$$35$$35$261 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT)) (= lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT n$35$$35$a1Gi) (= lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT (Data.S lq_anf$36$$35$$35$7205759403792804386$35$$35$d2NY)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804381$35$$35$d2NT) lq_anf$36$$35$$35$7205759403792804386$35$$35$d2NY)))
(define-fun b$36$$35$$35$325 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9)) (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 ds_d2KT) (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 (Data.S m$35$$35$a1Go)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9) m$35$$35$a1Go)))
(define-fun b$36$$35$$35$389 () Bool (= lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot ds_d2K9))
(define-fun b$36$$35$$35$549 () Bool (= lq_anf$36$$35$$35$7205759403792804458$35$$35$d2P8 lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$Dsa0AfFBvEyFFsh6n4qVmd))
(define-fun b$36$$35$$35$645 () Bool (= lq_anf$36$$35$$35$7205759403792804525$35$$35$d2Qd 0))
(define-fun b$36$$35$$35$805 () Bool (and (= VV$35$$35$F$35$$35$26 lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$7205759403792804446$35$$35$d2OW)))
(define-fun b$36$$35$$35$262 () Bool (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU ds_d2Le))
(define-fun b$36$$35$$35$326 () Bool (= lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob n$35$$35$a1Gm))
(define-fun b$36$$35$$35$550 () Bool (= lq_anf$36$$35$$35$7205759403792804459$35$$35$d2P9 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804458$35$$35$d2P8)))
(define-fun b$36$$35$$35$614 () Bool (= fix$36$$36$krep_a1QI (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QF) fix$36$$36$krep_a1QF)))
(define-fun b$36$$35$$35$806 () Bool (and (= VV$35$$35$F$35$$35$27 lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$27 lq_anf$36$$35$$35$7205759403792804444$35$$35$d2OU)))
(define-fun b$36$$35$$35$71 () Bool (= Data.Leaf Data.Leaf))
(define-fun b$36$$35$$35$263 () Bool (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU ds_d2Le))
(define-fun b$36$$35$$35$327 () Bool (= lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob n$35$$35$a1Gm))
(define-fun b$36$$35$$35$551 () Bool (= lq_anf$36$$35$$35$7205759403792804460$35$$35$d2Pa lit$36$Data))
(define-fun b$36$$35$$35$583 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0)))
(define-fun b$36$$35$$35$615 () Bool (= fix$36$$36$krep_a1QH (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QC) fix$36$$36$krep_a1QI)))
(define-fun b$36$$35$$35$807 () Bool (and (= VV$35$$35$F$35$$35$28 lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$28 lq_anf$36$$35$$35$7205759403792804422$35$$35$d2Oy)))
(define-fun b$36$$35$$35$72 () Bool (= Data.Nil2 Data.Nil2))
(define-fun b$36$$35$$35$264 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU)) (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU Data.Z) (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU ds_d2Le)))
(define-fun b$36$$35$$35$328 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob)) (= lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob Data.Z) (= lq_anf$36$$35$$35$7205759403792804399$35$$35$d2Ob n$35$$35$a1Gm)))
(define-fun b$36$$35$$35$392 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot)) (= lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot ds_d2K9) (= lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot (Data.Cons lq_anf$36$$35$$35$7205759403792804423$35$$35$d2Oz lq_anf$36$$35$$35$7205759403792804424$35$$35$d2OA)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot) lq_anf$36$$35$$35$7205759403792804424$35$$35$d2OA) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804417$35$$35$d2Ot) lq_anf$36$$35$$35$7205759403792804423$35$$35$d2Oz)))
(define-fun b$36$$35$$35$488 () Bool (= lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR ds_d2IW))
(define-fun b$36$$35$$35$552 () Bool (= lq_anf$36$$35$$35$7205759403792804461$35$$35$d2Pb (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804460$35$$35$d2Pa)))
(define-fun b$36$$35$$35$616 () Bool (= fix$36$$36$krep_a1QG (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QC) fix$36$$36$krep_a1QH)))
(define-fun b$36$$35$$35$808 () Bool (and (= VV$35$$35$F$35$$35$29 lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$29 lq_anf$36$$35$$35$7205759403792804420$35$$35$d2Ow)))
(define-fun b$36$$35$$35$73 () Bool (= Data.$36$fEqListN Data.$36$fEqListN))
(define-fun b$36$$35$$35$169 () Bool (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(define-fun b$36$$35$$35$265 () Bool (= lq_anf$36$$35$$35$7205759403792804383$35$$35$d2NV lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$329 () Bool (= lq_anf$36$$35$$35$7205759403792804400$35$$35$d2Oc lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$361 () Bool (= lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om ds_d2Ko))
(define-fun b$36$$35$$35$393 () Bool (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou ds_d2K8))
(define-fun b$36$$35$$35$585 () Bool (= lq_anf$36$$35$$35$7205759403792804484$35$$35$d2Py 2532314010042112278))
(define-fun b$36$$35$$35$617 () Bool (= lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT 5155969573149892118))
(define-fun b$36$$35$$35$649 () Bool (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe ds_d2JR))
(define-fun b$36$$35$$35$809 () Bool (and (= VV$35$$35$F$35$$35$30 lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN) (= VV$35$$35$F$35$$35$30 lq_anf$36$$35$$35$7205759403792804413$35$$35$d2Op)))
(define-fun b$36$$35$$35$266 () Bool (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU ds_d2Le))
(define-fun b$36$$35$$35$394 () Bool (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou ds_d2K8))
(define-fun b$36$$35$$35$554 () Bool (= lq_anf$36$$35$$35$7205759403792804462$35$$35$d2Pc 17590680342403836043))
(define-fun b$36$$35$$35$586 () Bool (= lq_anf$36$$35$$35$7205759403792804485$35$$35$d2Pz 10780002767876742904))
(define-fun b$36$$35$$35$618 () Bool (= lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU 16694272559847404710))
(define-fun b$36$$35$$35$650 () Bool (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe ds_d2JR))
(define-fun b$36$$35$$35$810 () Bool (and (= VV$35$$35$F$35$$35$31 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$31 lq_anf$36$$35$$35$7205759403792804400$35$$35$d2Oc)))
(define-fun b$36$$35$$35$171 () Bool (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(define-fun b$36$$35$$35$395 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou)) (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou Data.Z) (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou ds_d2K8)))
(define-fun b$36$$35$$35$491 () Bool (= lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR ds_d2IW))
(define-fun b$36$$35$$35$555 () Bool (= lq_anf$36$$35$$35$7205759403792804463$35$$35$d2Pd 16114006209548355236))
(define-fun b$36$$35$$35$587 () Bool (= lq_anf$36$$35$$35$7205759403792804486$35$$35$d2PA lit$36$$39$Nil))
(define-fun b$36$$35$$35$619 () Bool (= lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV lit$36$$39$Cons2))
(define-fun b$36$$35$$35$651 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe)) (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe Data.Nil) (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe ds_d2JR)))
(define-fun b$36$$35$$35$779 () Bool (and (= VV$35$$35$F$35$$35$32 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$32 lq_anf$36$$35$$35$7205759403792804398$35$$35$d2Oa)))
(define-fun b$36$$35$$35$268 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU)) (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU ds_d2Le) (= lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU (Data.S m$35$$35$a1Gk)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804382$35$$35$d2NU) m$35$$35$a1Gk)))
(define-fun b$36$$35$$35$364 () Bool (= lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om ds_d2Ko))
(define-fun b$36$$35$$35$396 () Bool (= lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov ds_d2K9))
(define-fun b$36$$35$$35$556 () Bool (= lq_anf$36$$35$$35$7205759403792804464$35$$35$d2Pe lit$36$N))
(define-fun b$36$$35$$35$588 () Bool (= lq_anf$36$$35$$35$7205759403792804487$35$$35$d2PB (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804486$35$$35$d2PA)))
(define-fun b$36$$35$$35$620 () Bool (= lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV)))
(define-fun b$36$$35$$35$652 () Bool (= lq_anf$36$$35$$35$7205759403792804527$35$$35$d2Qf 0))
(define-fun b$36$$35$$35$780 () Bool (and (= VV$35$$35$F$35$$35$33 lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$33 lq_anf$36$$35$$35$7205759403792804385$35$$35$d2NX)))
(define-fun b$36$$35$$35$173 () Bool (and (is-Data.Nil2 Data.Nil2) (not (is-Data.Cons2 Data.Nil2)) (= Data.Nil2 Data.Nil2)))
(define-fun b$36$$35$$35$269 () Bool (= lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW n$35$$35$a1Gi))
(define-fun b$36$$35$$35$397 () Bool (= lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov ds_d2K9))
(define-fun b$36$$35$$35$557 () Bool (= lq_anf$36$$35$$35$7205759403792804465$35$$35$d2Pf (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804464$35$$35$d2Pe)))
(define-fun b$36$$35$$35$589 () Bool (= lq_anf$36$$35$$35$7205759403792804488$35$$35$d2PC 0))
(define-fun b$36$$35$$35$621 () Bool (= lq_anf$36$$35$$35$7205759403792804509$35$$35$d2PX 0))
(define-fun b$36$$35$$35$653 () Bool (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe ds_d2JR))
(define-fun b$36$$35$$35$781 () Bool (and (= VV$35$$35$F$35$$35$34 lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$34 lq_anf$36$$35$$35$7205759403792804383$35$$35$d2NV)))
(define-fun b$36$$35$$35$206 () Bool (= lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI ds_d2LQ))
(define-fun b$36$$35$$35$270 () Bool (= lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW n$35$$35$a1Gi))
(define-fun b$36$$35$$35$398 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov)) (= lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov Data.Nil) (= lq_anf$36$$35$$35$7205759403792804419$35$$35$d2Ov ds_d2K9)))
(define-fun b$36$$35$$35$494 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR)) (= lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR ds_d2IW) (= lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR (Data.Cons lq_anf$36$$35$$35$7205759403792804450$35$$35$d2P0 lq_anf$36$$35$$35$7205759403792804451$35$$35$d2P1)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR) lq_anf$36$$35$$35$7205759403792804451$35$$35$d2P1) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804441$35$$35$d2OR) lq_anf$36$$35$$35$7205759403792804450$35$$35$d2P0)))
(define-fun b$36$$35$$35$558 () Bool (= lq_anf$36$$35$$35$7205759403792804466$35$$35$d2Pg 0))
(define-fun b$36$$35$$35$782 () Bool (and (= VV$35$$35$F$35$$35$35 lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$7205759403792804375$35$$35$d2NN)))
(define-fun b$36$$35$$35$79 () Bool (= Data.Nil Data.Nil))
(define-fun b$36$$35$$35$175 () Bool (and (is-Data.Leaf Data.Leaf) (not (is-Data.Node Data.Leaf)) (= Data.Leaf Data.Leaf)))
(define-fun b$36$$35$$35$271 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW)) (= lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW Data.Z) (= lq_anf$36$$35$$35$7205759403792804384$35$$35$d2NW n$35$$35$a1Gi)))
(define-fun b$36$$35$$35$367 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om)) (= lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om ds_d2Ko) (= lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om (Data.Cons lq_anf$36$$35$$35$7205759403792804415$35$$35$d2Or lq_anf$36$$35$$35$7205759403792804416$35$$35$d2Os)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om) lq_anf$36$$35$$35$7205759403792804416$35$$35$d2Os) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804410$35$$35$d2Om) lq_anf$36$$35$$35$7205759403792804415$35$$35$d2Or)))
(define-fun b$36$$35$$35$399 () Bool (= lq_anf$36$$35$$35$7205759403792804420$35$$35$d2Ow lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$495 () Bool (= lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS ds_d2IX))
(define-fun b$36$$35$$35$591 () Bool (= fix$36$$36$krep_a1QL (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QJ) fix$36$$36$krep_a1QJ)))
(define-fun b$36$$35$$35$623 () Bool (= lq_anf$36$$35$$35$7205759403792804510$35$$35$d2PY 10264225903496305138))
(define-fun b$36$$35$$35$783 () Bool (and (= VV$35$$35$F$35$$35$36 lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792804373$35$$35$d2NL)))
(define-fun b$36$$35$$35$80 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$272 () Bool (= lq_anf$36$$35$$35$7205759403792804385$35$$35$d2NX lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$368 () Bool (= lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On ds_d2Kn))
(define-fun b$36$$35$$35$592 () Bool (= fix$36$$36$krep_a1QK (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QC) fix$36$$36$krep_a1QL)))
(define-fun b$36$$35$$35$624 () Bool (= lq_anf$36$$35$$35$7205759403792804511$35$$35$d2PZ 16273216106773420885))
(define-fun b$36$$35$$35$656 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe)) (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe ds_d2JR) (= lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe (Data.Cons h$35$$35$a1GI t$35$$35$a1GJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe) t$35$$35$a1GJ) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804526$35$$35$d2Qe) h$35$$35$a1GI)))
(define-fun b$36$$35$$35$784 () Bool (and (= VV$35$$35$F$35$$35$5 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm) lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn)) (= VV$35$$35$F$35$$35$5 (+ lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn))))
(define-fun b$36$$35$$35$209 () Bool (= lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI ds_d2LQ))
(define-fun b$36$$35$$35$561 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (= lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0)))
(define-fun b$36$$35$$35$593 () Bool (= lq_anf$36$$35$$35$7205759403792804489$35$$35$d2PD 8078959066948195515))
(define-fun b$36$$35$$35$625 () Bool (= lq_anf$36$$35$$35$7205759403792804512$35$$35$d2Q0 lit$36$TreeN))
(define-fun b$36$$35$$35$657 () Bool (= lq_anf$36$$35$$35$7205759403792804528$35$$35$d2Qg 1))
(define-fun b$36$$35$$35$785 () Bool (and (= VV$35$$35$F$35$$35$6 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk)) (= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk)))
(define-fun b$36$$35$$35$498 () Bool (= lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS ds_d2IX))
(define-fun b$36$$35$$35$594 () Bool (= lq_anf$36$$35$$35$7205759403792804490$35$$35$d2PE 1786089563291563000))
(define-fun b$36$$35$$35$626 () Bool (= lq_anf$36$$35$$35$7205759403792804513$35$$35$d2Q1 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804512$35$$35$d2Q0)))
(define-fun b$36$$35$$35$658 () Bool (and (= lq_anf$36$$35$$35$7205759403792804529$35$$35$d2Qh (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804528$35$$35$d2Qg)) (= lq_anf$36$$35$$35$7205759403792804529$35$$35$d2Qh lq_anf$36$$35$$35$7205759403792804528$35$$35$d2Qg)))
(define-fun b$36$$35$$35$786 () Bool (and (= VV$35$$35$F$35$$35$7 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792804529$35$$35$d2Qh) lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi)) (= VV$35$$35$F$35$$35$7 (+ lq_anf$36$$35$$35$7205759403792804529$35$$35$d2Qh lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi))))
(define-fun b$36$$35$$35$83 () Bool (= Data.$36$fEqTreeN Data.$36$fEqTreeN))
(define-fun b$36$$35$$35$211 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI)) (= lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI ds_d2LQ) (= lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI (Data.S lq_anf$36$$35$$35$7205759403792804377$35$$35$d2NP)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804370$35$$35$d2NI) lq_anf$36$$35$$35$7205759403792804377$35$$35$d2NP)))
(define-fun b$36$$35$$35$307 () Bool (= lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7 ds_d2KT))
(define-fun b$36$$35$$35$371 () Bool (= lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On ds_d2Kn))
(define-fun b$36$$35$$35$563 () Bool (= lq_anf$36$$35$$35$7205759403792804468$35$$35$d2Pi 5539572069108390594))
(define-fun b$36$$35$$35$595 () Bool (= lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF lit$36$$39$Cons))
(define-fun b$36$$35$$35$627 () Bool (= lq_anf$36$$35$$35$7205759403792804514$35$$35$d2Q2 0))
(define-fun b$36$$35$$35$659 () Bool (and (= lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi (apply$35$$35$32 Data.lengthListN_int t$35$$35$a1GJ)) (= lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi (ite (is-Data.Nil t$35$$35$a1GJ) 0 (+ 1 (apply$35$$35$32 Data.lengthListN_int (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 t$35$$35$a1GJ))))) (<= 0 lq_anf$36$$35$$35$7205759403792804530$35$$35$d2Qi)))
(define-fun b$36$$35$$35$787 () Bool (and (= VV$35$$35$F$35$$35$8 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804527$35$$35$d2Qf)) (= VV$35$$35$F$35$$35$8 lq_anf$36$$35$$35$7205759403792804527$35$$35$d2Qf)))
(define-fun b$36$$35$$35$212 () Bool (= lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ n$35$$35$a1Ga))
(define-fun b$36$$35$$35$404 () Bool (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou ds_d2K8))
(define-fun b$36$$35$$35$564 () Bool (= lq_anf$36$$35$$35$7205759403792804469$35$$35$d2Pj 8779938901699048365))
(define-fun b$36$$35$$35$596 () Bool (= lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF)))
(define-fun b$36$$35$$35$788 () Bool (= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9) lq_anf$36$$35$$35$7205759403792804522$35$$35$d2Qa) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc) lq_anf$36$$35$$35$7205759403792804525$35$$35$d2Qd) fix$36$$36$krep_a1QB)))
(define-fun b$36$$35$$35$85 () Bool (= Data.Z Data.Z))
(define-fun b$36$$35$$35$373 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On)) (= lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On ds_d2Kn) (= lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On (Data.S n$35$$35$a1Gu)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804411$35$$35$d2On) n$35$$35$a1Gu)))
(define-fun b$36$$35$$35$501 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS)) (= lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS ds_d2IX) (= lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS (Data.Cons lq_anf$36$$35$$35$7205759403792804448$35$$35$d2OY lq_anf$36$$35$$35$7205759403792804449$35$$35$d2OZ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS) lq_anf$36$$35$$35$7205759403792804449$35$$35$d2OZ) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804442$35$$35$d2OS) lq_anf$36$$35$$35$7205759403792804448$35$$35$d2OY)))
(define-fun b$36$$35$$35$565 () Bool (= lq_anf$36$$35$$35$7205759403792804470$35$$35$d2Pk lit$36$$39$Z))
(define-fun b$36$$35$$35$597 () Bool (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH 0))
(define-fun b$36$$35$$35$789 () Bool (= VV$35$$35$F$35$$35$10 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4) lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7) lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8) fix$36$$36$krep_a1QA)))
(define-fun b$36$$35$$35$86 () Bool (= Data.$36$fShowN Data.$36$fShowN))
(define-fun b$36$$35$$35$310 () Bool (= lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7 ds_d2KT))
(define-fun b$36$$35$$35$374 () Bool (= lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo ds_d2Ko))
(define-fun b$36$$35$$35$406 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou)) (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou ds_d2K8) (= lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou (Data.S n$35$$35$a1Gz)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804418$35$$35$d2Ou) n$35$$35$a1Gz)))
(define-fun b$36$$35$$35$502 () Bool (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT ds_d2IW))
(define-fun b$36$$35$$35$566 () Bool (= lq_anf$36$$35$$35$7205759403792804471$35$$35$d2Pl (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804470$35$$35$d2Pk)))
(define-fun b$36$$35$$35$630 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0)))
(define-fun b$36$$35$$35$662 () Bool (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2M8))
(define-fun b$36$$35$$35$790 () Bool (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)))
(define-fun b$36$$35$$35$87 () Bool (= Data.$36$fEqN Data.$36$fEqN))
(define-fun b$36$$35$$35$215 () Bool (= lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ n$35$$35$a1Ga))
(define-fun b$36$$35$$35$375 () Bool (= lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo ds_d2Ko))
(define-fun b$36$$35$$35$407 () Bool (= lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox ds_d2K9))
(define-fun b$36$$35$$35$503 () Bool (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT ds_d2IW))
(define-fun b$36$$35$$35$567 () Bool (= lq_anf$36$$35$$35$7205759403792804472$35$$35$d2Pm 0))
(define-fun b$36$$35$$35$599 () Bool (= lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI 8478037806364640219))
(define-fun b$36$$35$$35$663 () Bool (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2M8))
(define-fun b$36$$35$$35$791 () Bool (= VV$35$$35$F$35$$35$12 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804510$35$$35$d2PY) lq_anf$36$$35$$35$7205759403792804511$35$$35$d2PZ) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804513$35$$35$d2Q1) lq_anf$36$$35$$35$7205759403792804514$35$$35$d2Q2) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$88 () Bool (= Data.$36$fEqListN2 Data.$36$fEqListN2))
(define-fun b$36$$35$$35$312 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7)) (= lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7 ds_d2KT) (= lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7 (Data.S lq_anf$36$$35$$35$7205759403792804403$35$$35$d2Of)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804395$35$$35$d2O7) lq_anf$36$$35$$35$7205759403792804403$35$$35$d2Of)))
(define-fun b$36$$35$$35$376 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo)) (= lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo Data.Nil) (= lq_anf$36$$35$$35$7205759403792804412$35$$35$d2Oo ds_d2Ko)))
(define-fun b$36$$35$$35$408 () Bool (= lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox ds_d2K9))
(define-fun b$36$$35$$35$504 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT)) (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT Data.Nil) (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT ds_d2IW)))
(define-fun b$36$$35$$35$600 () Bool (= lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ 16141963933796337754))
(define-fun b$36$$35$$35$632 () Bool (= lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 15667882790171153571))
(define-fun b$36$$35$$35$664 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj)) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj Data.Z) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2M8)))
(define-fun b$36$$35$$35$792 () Bool (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT) lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW) lq_anf$36$$35$$35$7205759403792804509$35$$35$d2PX) fix$36$$36$krep_a1QG)))
(define-fun b$36$$35$$35$89 () Bool (= Data.$36$fShowListN Data.$36$fShowListN))
(define-fun b$36$$35$$35$217 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ)) (= lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ n$35$$35$a1Ga) (= lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ (Data.S lq_anf$36$$35$$35$7205759403792804376$35$$35$d2NO)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804371$35$$35$d2NJ) lq_anf$36$$35$$35$7205759403792804376$35$$35$d2NO)))
(define-fun b$36$$35$$35$313 () Bool (= lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8 n$35$$35$a1Gm))
(define-fun b$36$$35$$35$377 () Bool (= lq_anf$36$$35$$35$7205759403792804413$35$$35$d2Op lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN))
(define-fun b$36$$35$$35$409 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox)) (= lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox Data.Nil) (= lq_anf$36$$35$$35$7205759403792804421$35$$35$d2Ox ds_d2K9)))
(define-fun b$36$$35$$35$505 () Bool (= lq_anf$36$$35$$35$7205759403792804444$35$$35$d2OU lit$36$src$47$Data.hs$58$$40$150$44$1$41$$45$$40$152$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$569 () Bool (= fix$36$$36$krep_a1QM (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QC) fix$36$$36$krep_a1QC)))
(define-fun b$36$$35$$35$601 () Bool (= lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK lit$36$ListN2))
(define-fun b$36$$35$$35$633 () Bool (= lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 16714914520996034446))
(define-fun b$36$$35$$35$665 () Bool (= lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk 0))
(define-fun b$36$$35$$35$793 () Bool (= VV$35$$35$F$35$$35$14 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804500$35$$35$d2PO) lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR) lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS) fix$36$$36$krep_a1QF)))
(define-fun b$36$$35$$35$218 () Bool (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK ds_d2LQ))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS ds_d2Le))
(define-fun b$36$$35$$35$410 () Bool (= lq_anf$36$$35$$35$7205759403792804422$35$$35$d2Oy lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$506 () Bool (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT ds_d2IW))
(define-fun b$36$$35$$35$570 () Bool (= lq_anf$36$$35$$35$7205759403792804473$35$$35$d2Pn 15128510902492416701))
(define-fun b$36$$35$$35$602 () Bool (= lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK)))
(define-fun b$36$$35$$35$634 () Bool (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 lit$36$$39$Leaf))
(define-fun b$36$$35$$35$666 () Bool (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2M8))
(define-fun b$36$$35$$35$794 () Bool (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)))
(define-fun b$36$$35$$35$219 () Bool (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK ds_d2LQ))
(define-fun b$36$$35$$35$571 () Bool (= lq_anf$36$$35$$35$7205759403792804474$35$$35$d2Po 3257352581537344015))
(define-fun b$36$$35$$35$603 () Bool (= lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM 0))
(define-fun b$36$$35$$35$635 () Bool (= lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6)))
(define-fun b$36$$35$$35$795 () Bool (= VV$35$$35$F$35$$35$16 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI) lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL) lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$220 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK)) (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK Data.Z) (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK ds_d2LQ)))
(define-fun b$36$$35$$35$316 () Bool (= lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8 n$35$$35$a1Gm))
(define-fun b$36$$35$$35$572 () Bool (= lq_anf$36$$35$$35$7205759403792804475$35$$35$d2Pp lit$36$$39$S))
(define-fun b$36$$35$$35$636 () Bool (= lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 0))
(define-fun b$36$$35$$35$668 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj)) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2M8) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj (Data.S n$35$$35$a1G6)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) n$35$$35$a1G6)))
(define-fun b$36$$35$$35$796 () Bool (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804489$35$$35$d2PD) lq_anf$36$$35$$35$7205759403792804490$35$$35$d2PE) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG) lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH) fix$36$$36$krep_a1QK)))
(define-fun b$36$$35$$35$221 () Bool (= lq_anf$36$$35$$35$7205759403792804373$35$$35$d2NL lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS ds_d2Le))
(define-fun b$36$$35$$35$509 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT)) (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT ds_d2IW) (= lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT (Data.Cons x$35$$35$a1H8 xs$35$$35$a1H9)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT) xs$35$$35$a1H9) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804443$35$$35$d2OT) x$35$$35$a1H8)))
(define-fun b$36$$35$$35$573 () Bool (= lq_anf$36$$35$$35$7205759403792804476$35$$35$d2Pq (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804475$35$$35$d2Pp)))
(define-fun b$36$$35$$35$669 () Bool (= lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql 1))
(define-fun b$36$$35$$35$797 () Bool (= VV$35$$35$F$35$$35$18 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804484$35$$35$d2Py) lq_anf$36$$35$$35$7205759403792804485$35$$35$d2Pz) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804487$35$$35$d2PB) lq_anf$36$$35$$35$7205759403792804488$35$$35$d2PC) fix$36$$36$krep_a1QJ)))
(define-fun b$36$$35$$35$222 () Bool (= lq_anf$36$$35$$35$7205759403792804372$35$$35$d2NK ds_d2LQ))
(define-fun b$36$$35$$35$318 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8)) (= lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8 n$35$$35$a1Gm) (= lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8 (Data.S lq_anf$36$$35$$35$7205759403792804402$35$$35$d2Oe)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804396$35$$35$d2O8) lq_anf$36$$35$$35$7205759403792804402$35$$35$d2Oe)))
(define-fun b$36$$35$$35$510 () Bool (= lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV ds_d2IX))
(define-fun b$36$$35$$35$574 () Bool (= lq_anf$36$$35$$35$7205759403792804477$35$$35$d2Pr 0))
(define-fun b$36$$35$$35$606 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (= lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0)))
(define-fun b$36$$35$$35$638 () Bool (= fix$36$$36$krep_a1QE (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QA) fix$36$$36$krep_a1QA)))
(define-fun b$36$$35$$35$670 () Bool (and (= lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql)) (= lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql)))
(define-fun b$36$$35$$35$798 () Bool (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)))
(define-fun b$36$$35$$35$127 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$255 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS)) (= lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS ds_d2Le) (= lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS (Data.S lq_anf$36$$35$$35$7205759403792804387$35$$35$d2NZ)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804380$35$$35$d2NS) lq_anf$36$$35$$35$7205759403792804387$35$$35$d2NZ)))
(define-fun b$36$$35$$35$319 () Bool (= lq_anf$36$$35$$35$7205759403792804397$35$$35$d2O9 ds_d2KT))
(define-fun b$36$$35$$35$511 () Bool (= lq_anf$36$$35$$35$7205759403792804445$35$$35$d2OV ds_d2IX))
(define-fun b$36$$35$$35$639 () Bool (= fix$36$$36$krep_a1QD (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1QA) fix$36$$36$krep_a1QE)))
(define-fun b$36$$35$$35$671 () Bool (and (= lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn (apply$35$$35$48 Data.n_to_int n$35$$35$a1G6)) (= lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn (ite (is-Data.Z n$35$$35$a1G6) 0 (+ 1 (apply$35$$35$48 Data.n_to_int (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a1G6))))) (<= 0 lq_anf$36$$35$$35$7205759403792804535$35$$35$d2Qn)))
(define-fun b$36$$35$$35$799 () Bool (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804478$35$$35$d2Ps) lq_anf$36$$35$$35$7205759403792804479$35$$35$d2Pt) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804481$35$$35$d2Pv) lq_anf$36$$35$$35$7205759403792804482$35$$35$d2Pw) GHC.Types.krep$36$$42$)))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$321 b$36$$35$$35$322 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$779 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$80 b$36$$35$$35$83 b$36$$35$$35$307 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$310 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$312 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$316 b$36$$35$$35$318 b$36$$35$$35$127 b$36$$35$$35$319))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$259 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$266 b$36$$35$$35$171 b$36$$35$$35$268 b$36$$35$$35$780 b$36$$35$$35$173 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$271 b$36$$35$$35$80 b$36$$35$$35$272 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$250 b$36$$35$$35$253 b$36$$35$$35$127 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$259 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$71 b$36$$35$$35$263 b$36$$35$$35$72 b$36$$35$$35$264 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$265 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$781 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$80 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$250 b$36$$35$$35$253 b$36$$35$$35$127 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$228 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$206 b$36$$35$$35$782 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$80 b$36$$35$$35$209 b$36$$35$$35$83 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$215 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$222 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$206 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$783 b$36$$35$$35$80 b$36$$35$$35$209 b$36$$35$$35$83 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$215 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$220 b$36$$35$$35$221 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 Int) (VV$35$$35$2883 Int)) (and (= VV$35$$35$2883 fix$36$$36$krep_a1QJ) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 fix$36$$36$krep_a1QJ) (exists ((lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px Int) (VV$35$$35$F$35$$35$19 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 VV$35$$35$F$35$$35$19))))) (exists ((VV$35$$35$2713 Int) (lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 Int)) (and (= VV$35$$35$2713 fix$36$$36$krep_a1QC) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 fix$36$$36$krep_a1QC) (exists ((VV$35$$35$F$35$$35$23 Int) (lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph Int)) (and (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (= lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 VV$35$$35$F$35$$35$23))))) (exists ((VV$35$$35$3253 Int) (lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 Int)) (and (= VV$35$$35$3253 fix$36$$36$krep_a1QA) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 fix$36$$36$krep_a1QA) (exists ((lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 Int) (VV$35$$35$F$35$$35$11 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 VV$35$$35$F$35$$35$11))))) (exists ((VV$35$$35$3063 Int) (lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 Int)) (and (= VV$35$$35$3063 fix$36$$36$krep_a1QF) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 fix$36$$36$krep_a1QF) (exists ((VV$35$$35$F$35$$35$15 Int) (lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN Int)) (and (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (= lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 VV$35$$35$F$35$$35$15)))))) b$36$$35$$35$640 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$614 b$36$$35$$35$71 b$36$$35$$35$615 b$36$$35$$35$72 b$36$$35$$35$616 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$591 b$36$$35$$35$80 b$36$$35$$35$592 b$36$$35$$35$784 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$662 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$569 b$36$$35$$35$666 b$36$$35$$35$668 b$36$$35$$35$669 b$36$$35$$35$638 b$36$$35$$35$670 b$36$$35$$35$127 b$36$$35$$35$639 b$36$$35$$35$671))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$5)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 Int) (VV$35$$35$2883 Int)) (and (= VV$35$$35$2883 fix$36$$36$krep_a1QJ) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 fix$36$$36$krep_a1QJ) (exists ((lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px Int) (VV$35$$35$F$35$$35$19 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 VV$35$$35$F$35$$35$19))))) (exists ((VV$35$$35$2713 Int) (lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 Int)) (and (= VV$35$$35$2713 fix$36$$36$krep_a1QC) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 fix$36$$36$krep_a1QC) (exists ((VV$35$$35$F$35$$35$23 Int) (lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph Int)) (and (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (= lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 VV$35$$35$F$35$$35$23))))) (exists ((VV$35$$35$3253 Int) (lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 Int)) (and (= VV$35$$35$3253 fix$36$$36$krep_a1QA) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 fix$36$$36$krep_a1QA) (exists ((lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 Int) (VV$35$$35$F$35$$35$11 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 VV$35$$35$F$35$$35$11))))) (exists ((VV$35$$35$3063 Int) (lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 Int)) (and (= VV$35$$35$3063 fix$36$$36$krep_a1QF) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 fix$36$$36$krep_a1QF) (exists ((VV$35$$35$F$35$$35$15 Int) (lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN Int)) (and (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (= lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 VV$35$$35$F$35$$35$15)))))) b$36$$35$$35$640 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$614 b$36$$35$$35$71 b$36$$35$$35$615 b$36$$35$$35$72 b$36$$35$$35$616 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$591 b$36$$35$$35$80 b$36$$35$$35$592 b$36$$35$$35$785 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$662 b$36$$35$$35$87 b$36$$35$$35$663 b$36$$35$$35$88 b$36$$35$$35$664 b$36$$35$$35$89 b$36$$35$$35$569 b$36$$35$$35$665 b$36$$35$$35$638 b$36$$35$$35$127 b$36$$35$$35$639))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$6)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 Int) (VV$35$$35$2883 Int)) (and (= VV$35$$35$2883 fix$36$$36$krep_a1QJ) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 fix$36$$36$krep_a1QJ) (exists ((lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px Int) (VV$35$$35$F$35$$35$19 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 VV$35$$35$F$35$$35$19))))) (exists ((VV$35$$35$2713 Int) (lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 Int)) (and (= VV$35$$35$2713 fix$36$$36$krep_a1QC) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 fix$36$$36$krep_a1QC) (exists ((VV$35$$35$F$35$$35$23 Int) (lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph Int)) (and (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (= lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 VV$35$$35$F$35$$35$23))))) (exists ((VV$35$$35$3253 Int) (lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 Int)) (and (= VV$35$$35$3253 fix$36$$36$krep_a1QA) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 fix$36$$36$krep_a1QA) (exists ((lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 Int) (VV$35$$35$F$35$$35$11 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 VV$35$$35$F$35$$35$11))))) (exists ((VV$35$$35$3063 Int) (lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 Int)) (and (= VV$35$$35$3063 fix$36$$36$krep_a1QF) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 fix$36$$36$krep_a1QF) (exists ((VV$35$$35$F$35$$35$15 Int) (lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN Int)) (and (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (= lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 VV$35$$35$F$35$$35$15)))))) b$36$$35$$35$640 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$614 b$36$$35$$35$71 b$36$$35$$35$615 b$36$$35$$35$72 b$36$$35$$35$616 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$649 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$653 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$591 b$36$$35$$35$80 b$36$$35$$35$592 b$36$$35$$35$656 b$36$$35$$35$657 b$36$$35$$35$658 b$36$$35$$35$786 b$36$$35$$35$83 b$36$$35$$35$659 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$569 b$36$$35$$35$638 b$36$$35$$35$127 b$36$$35$$35$639))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$7)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 Int) (VV$35$$35$2883 Int)) (and (= VV$35$$35$2883 fix$36$$36$krep_a1QJ) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 fix$36$$36$krep_a1QJ) (exists ((lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px Int) (VV$35$$35$F$35$$35$19 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px) 0) (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804483$35$$35$d2Px)) (= lq_karg$36$VV$35$$35$2883$35$$35$k_$35$$35$2884 VV$35$$35$F$35$$35$19))))) (exists ((VV$35$$35$2713 Int) (lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 Int)) (and (= VV$35$$35$2713 fix$36$$36$krep_a1QC) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 fix$36$$36$krep_a1QC) (exists ((VV$35$$35$F$35$$35$23 Int) (lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph Int)) (and (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph)) (= lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804467$35$$35$d2Ph) 0) (= lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 VV$35$$35$F$35$$35$23))))) (exists ((VV$35$$35$3253 Int) (lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 Int)) (and (= VV$35$$35$3253 fix$36$$36$krep_a1QA) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 fix$36$$36$krep_a1QA) (exists ((lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 Int) (VV$35$$35$F$35$$35$11 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3) 0) (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804515$35$$35$d2Q3)) (= lq_karg$36$VV$35$$35$3253$35$$35$k_$35$$35$3254 VV$35$$35$F$35$$35$11))))) (exists ((VV$35$$35$3063 Int) (lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 Int)) (and (= VV$35$$35$3063 fix$36$$36$krep_a1QF) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 fix$36$$36$krep_a1QF) (exists ((VV$35$$35$F$35$$35$15 Int) (lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN Int)) (and (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN)) (= lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804499$35$$35$d2PN) 0) (= lq_karg$36$VV$35$$35$3063$35$$35$k_$35$$35$3064 VV$35$$35$F$35$$35$15)))))) b$36$$35$$35$640 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$614 b$36$$35$$35$71 b$36$$35$$35$615 b$36$$35$$35$72 b$36$$35$$35$616 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$649 b$36$$35$$35$650 b$36$$35$$35$171 b$36$$35$$35$651 b$36$$35$$35$652 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$591 b$36$$35$$35$80 b$36$$35$$35$592 b$36$$35$$35$83 b$36$$35$$35$787 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$569 b$36$$35$$35$638 b$36$$35$$35$127 b$36$$35$$35$639))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$8)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$512 b$36$$35$$35$513 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$805 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$488 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$491 b$36$$35$$35$173 b$36$$35$$35$494 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$495 b$36$$35$$35$80 b$36$$35$$35$498 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$501 b$36$$35$$35$86 b$36$$35$$35$502 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$506 b$36$$35$$35$509 b$36$$35$$35$510 b$36$$35$$35$127 b$36$$35$$35$511))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$806 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$488 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$171 b$36$$35$$35$491 b$36$$35$$35$173 b$36$$35$$35$494 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$495 b$36$$35$$35$80 b$36$$35$$35$498 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$501 b$36$$35$$35$86 b$36$$35$$35$502 b$36$$35$$35$87 b$36$$35$$35$503 b$36$$35$$35$88 b$36$$35$$35$504 b$36$$35$$35$89 b$36$$35$$35$505 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$386 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$389 b$36$$35$$35$71 b$36$$35$$35$807 b$36$$35$$35$72 b$36$$35$$35$392 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$393 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$80 b$36$$35$$35$83 b$36$$35$$35$404 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$406 b$36$$35$$35$87 b$36$$35$$35$407 b$36$$35$$35$88 b$36$$35$$35$408 b$36$$35$$35$89 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$386 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$389 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$392 b$36$$35$$35$808 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$171 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$173 b$36$$35$$35$397 b$36$$35$$35$398 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$399 b$36$$35$$35$80 b$36$$35$$35$83 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$71 b$36$$35$$35$72 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$361 b$36$$35$$35$809 b$36$$35$$35$171 b$36$$35$$35$364 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$367 b$36$$35$$35$80 b$36$$35$$35$368 b$36$$35$$35$83 b$36$$35$$35$371 b$36$$35$$35$85 b$36$$35$$35$373 b$36$$35$$35$86 b$36$$35$$35$374 b$36$$35$$35$87 b$36$$35$$35$375 b$36$$35$$35$88 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$127))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$323 b$36$$35$$35$68 b$36$$35$$35$132 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$71 b$36$$35$$35$327 b$36$$35$$35$72 b$36$$35$$35$328 b$36$$35$$35$73 b$36$$35$$35$169 b$36$$35$$35$329 b$36$$35$$35$810 b$36$$35$$35$171 b$36$$35$$35$173 b$36$$35$$35$79 b$36$$35$$35$175 b$36$$35$$35$80 b$36$$35$$35$83 b$36$$35$$35$307 b$36$$35$$35$85 b$36$$35$$35$86 b$36$$35$$35$310 b$36$$35$$35$87 b$36$$35$$35$88 b$36$$35$$35$312 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$316 b$36$$35$$35$318 b$36$$35$$35$127 b$36$$35$$35$319))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
