(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.TreeN 0)) ((par () ((Data.Node (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$2 Data.TreeN) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$1 Data.TreeN)) Data.Leaf))))
(declare-datatypes ((Data.ListN2 0)) ((par () (Data.Nil2 (Data.Cons2 (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 Data.ListN2))))))
(declare-datatypes ((Data.ListN 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.ListN))))))
(declare-fun t$35$$35$a1MN () Data.ListN)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun n$35$$35$a1Md () Data.N)
(declare-fun lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN () Str)
(declare-fun m$35$$35$a1M7 () Data.N)
(declare-fun Data.Either.Right () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1YI () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun fix$36$$36$cshow$35$$35$a200 () Int)
(declare-fun ds_d2Ut () Data.ListN)
(declare-fun papp6 () Int)
(declare-fun ds_d2U4 () Data.ListN)
(declare-fun y$35$$35$a1N3 () Data.N)
(declare-fun xs$35$$35$a1Ny () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$4546 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun a$35$$35$a1M0 () Int)
(declare-fun lq_tmp$36$x$35$$35$5086 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$46 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun b$35$$35$a1LZ () Bool)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3769 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m () Str)
(declare-fun h$35$$35$a1My () Data.N)
(declare-fun ds_d2VT () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805289$35$$35$d32x () Str)
(declare-fun ds_d2Sy () Data.N)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h () Str)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l () Int)
(declare-fun x1$35$$35$a1NV () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w () Data.ListN)
(declare-fun ds_d2Vy () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$4309 () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d () Data.N)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$1421 () Data.N)
(declare-fun fst () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Data.$36$tc$39$Cons2 () Int)
(declare-fun h$35$$35$a1No () Data.N)
(declare-fun snd () Int)
(declare-fun lq_tmp$36$x$35$$35$1304 () Data.N)
(declare-fun m$35$$35$a1Ma () Data.N)
(declare-fun ds_d2VY () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2480 () Data.ListN)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f () Str)
(declare-fun GHC.List.break () Int)
(declare-fun Data.leN () Int)
(declare-fun n$35$$35$a1M2 () Data.N)
(declare-fun Data.addN () Int)
(declare-fun fix$36$$36$krep_a20m () Int)
(declare-fun x2$35$$35$a1NU () Data.N)
(declare-fun x$35$$35$a1O1 () Data.N)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun x$35$$35$a1MC () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3871$35$$35$k_$35$$35$3872 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun xs$35$$35$a1MH () Data.ListN)
(declare-fun GHC.List.tail () Int)
(declare-fun m$35$$35$a1Mf () Data.N)
(declare-fun x$35$$35$a1Nx () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B () Data.N)
(declare-fun ds_d2Ss () Data.ListN2)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun n$35$$35$a1M5 () Data.N)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun Data.lengthListN () Int)
(declare-fun fix$36$$36$krep_a20j () Int)
(declare-fun h$35$$35$a1MS () Data.N)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1ZO () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c () Data.ListN)
(declare-fun h$35$$35$a1N5 () Data.N)
(declare-fun y$35$$35$a1ND () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1959 () Data.N)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun xs$35$$35$a1NN () Data.ListN2)
(declare-fun lit$36$N () Str)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun n$35$$35$a1Mh () Data.N)
(declare-fun ds_d2Tq () Data.ListN)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lit$36$$39$Nil2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_tmp$36$x$35$$35$2196 () Data.ListN)
(declare-fun l2$35$$35$a1Mp () Data.ListN)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G () Int)
(declare-fun lq_tmp$36$x$35$$35$1476 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3755 () Int)
(declare-fun lq_tmp$36$x$35$$35$1577 () Data.ListN)
(declare-fun x1$35$$35$a1NL () Data.N)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Data.initListN () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun n$35$$35$a1Mc () Data.N)
(declare-fun ds_d2Tz () Data.ListN)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 () Data.ListN)
(declare-fun l$35$$35$a1NZ () Data.TreeN)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun papp1 () Int)
(declare-fun n$35$$35$a1N8 () Data.N)
(declare-fun ds_d2TZ () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805330$35$$35$d33c () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M () Str)
(declare-fun ds_d2VM () Data.ListN)
(declare-fun Data.zipConcatListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805334$35$$35$d33g () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun t$35$$35$a1Ng () Data.ListN)
(declare-fun ds_d2WD () Data.N)
(declare-fun papp4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$VV$35$$35$3829$35$$35$k_$35$$35$3830 () Int)
(declare-fun Data.insertListN () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Str)
(declare-fun Data.$36$tc$39$Node () Int)
(declare-fun Data.reverseListN () Int)
(declare-fun xs$35$$35$a1MD () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$4119 () Int)
(declare-fun m$35$$35$a1Mj () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3925 () Int)
(declare-fun l1$35$$35$a1Mr () Data.ListN)
(declare-fun x$35$$35$a1Nt () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$VV$35$$35$4127$35$$35$k_$35$$35$4128 () Int)
(declare-fun f$35$$35$a1MA () Int)
(declare-fun n$35$$35$a1M9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3170 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805264$35$$35$d328 () Int)
(declare-fun lq_tmp$36$x$35$$35$4105 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g () Int)
(declare-fun t$35$$35$a1MV () Data.ListN)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ () Data.N)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 () Int)
(declare-fun lit$36$Z () Str)
(declare-fun ds_d2Xy () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z () Data.ListN)
(declare-fun ds_d2Sz () Data.ListN2)
(declare-fun lq_tmp$36$x$35$$35$2479 () Data.N)
(declare-fun x$35$$35$a1N1 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r () Data.N)
(declare-fun Data.posit () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x () Str)
(declare-fun Proof.trivial () Int)
(declare-fun n$35$$35$a1NG () Data.N)
(declare-fun lq_tmp$36$x$35$$35$4545 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Str)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx () Data.N)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun Data.$36$fEqListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 () Data.ListN)
(declare-fun h$35$$35$a1Mq () Data.N)
(declare-fun lq_karg$36$VV$35$$35$4664$35$$35$k_$35$$35$4665 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805329$35$$35$d33b () Int)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun xs$35$$35$a1Nq () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V () Int)
(declare-fun fix$36$$36$krep_a20h () Int)
(declare-fun ds_d2WU () Data.N)
(declare-fun lit$36$$39$Leaf () Str)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun lit$36$$39$Nil () Str)
(declare-fun ds_d2Wh () Data.N)
(declare-fun ys$35$$35$a1NE () Data.ListN)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lit$36$$39$Cons2 () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun Data.implies () Int)
(declare-fun x2$35$$35$a1NM () Data.N)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_tmp$36$x$35$$35$3112 () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$4199$35$$35$k_$35$$35$4200 () Int)
(declare-fun r$35$$35$a1O3 () Data.TreeN)
(declare-fun Data.concatListN () Int)
(declare-fun lq_tmp$36$x$35$$35$4588 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p () Data.ListN)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u () Int)
(declare-fun fix$36$$36$krep_a20r () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l () Data.ListN2)
(declare-fun h$35$$35$a1MK () Data.N)
(declare-fun xs$35$$35$a1Nk () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j () Data.N)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h () Data.N)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun ds_d2Xe () Data.ListN)
(declare-fun m$35$$35$a1M3 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e () Data.ListN)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Str)
(declare-fun Data.$36$tc$39$Nil2 () Int)
(declare-fun Data.$36$tc$39$Cons () Int)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N () Data.ListN)
(declare-fun ds_d2Vk () Data.N)
(declare-fun lit$36$ListN2 () Str)
(declare-fun Data.$36$tcN () Int)
(declare-fun Data.takeListN2 () Int)
(declare-fun ds_d2UP () Data.ListN)
(declare-fun lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN () Str)
(declare-fun xs$35$$35$a1NF () Data.ListN2)
(declare-fun ys$35$$35$a1NO () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA () Str)
(declare-fun lq_tmp$36$x$35$$35$2720 () Data.ListN)
(declare-fun Data.lastListN () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1YT () Int)
(declare-fun ys$35$$35$a1N4 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805197$35$$35$d313 () Data.ListN)
(declare-fun ds_d2V0 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k () Str)
(declare-fun ds_d2UK () Data.ListN)
(declare-fun h$35$$35$a1Nf () Data.N)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2 () Str)
(declare-fun lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv () Data.N)
(declare-fun charX () Int)
(declare-fun lq_tmp$36$x$35$$35$3172 () Data.ListN)
(declare-fun Data.sortListN () Int)
(declare-fun ds_d2Uk () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$42 () Str)
(declare-fun Data.n_to_int () Int)
(declare-fun Data.leqN () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun ds_d2TG () Data.ListN)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun t$35$$35$a1MT () Data.ListN)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun xs$35$$35$a1NX () Data.ListN2)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y () Data.N)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 () Data.N)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun xs$39$$39$$35$$35$a1N0 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f () Int)
(declare-fun lq_tmp$36$x$35$$35$4547 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 () Str)
(declare-fun VV$35$$35$F$35$$35$47 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d () Data.N)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$51 () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun ds_d2S7 () Data.TreeN)
(declare-fun GHC.Types.False () Bool)
(declare-fun n$35$$35$a1M1 () Data.N)
(declare-fun isJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w () Int)
(declare-fun fix$36$$36$krep_a20n () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lit$36$$39$Node () Str)
(declare-fun n$35$$35$a1MQ () Data.N)
(declare-fun GHC.List.span () Int)
(declare-fun VV$35$$35$F$35$$35$48 () Str)
(declare-fun t$35$$35$a1Np () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j () Data.N)
(declare-fun Data.lengthListN_int () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n () Data.ListN)
(declare-fun ds_d2W3 () Data.N)
(declare-fun lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN () Str)
(declare-fun x$35$$35$a1MG () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i () Int)
(declare-fun xs$35$$35$a1NR () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v () Data.N)
(declare-fun Data.lastListN$39$ () Int)
(declare-fun n$35$$35$a1Mt () Data.N)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E () Int)
(declare-fun lq_tmp$36$x$35$$35$2471 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N () Int)
(declare-fun Data.singletonListN2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4895 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k () Int)
(declare-fun fix$36$$36$krep_a20k () Int)
(declare-fun ds_d2Ud () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805261$35$$35$d325 () Int)
(declare-fun x1$35$$35$a1NP () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 () Int)
(declare-fun ds_d2SR () Data.N)
(declare-fun x$35$$35$a1NY () Data.N)
(declare-fun len () Int)
(declare-fun lit$36$undefined () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c () Data.N)
(declare-fun ds_d2XQ () Data.N)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t () Data.ListN)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun l$35$$35$a1Mv () Data.ListN)
(declare-fun ds_d2X1 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805263$35$$35$d327 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805292$35$$35$d32A () Int)
(declare-fun ds_d2Wv () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805262$35$$35$d326 () Str)
(declare-fun n$35$$35$a1Mo () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV () Str)
(declare-fun Data.$36$tc$39$Leaf () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r () Int)
(declare-fun ds_d2T6 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2144 () Data.N)
(declare-fun Proof.$38$$38$$38$ () Int)
(declare-fun fix$36$$36$krep_a20p () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Str)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun fldList () Int)
(declare-fun ds_d2Vd () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2559 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t () Int)
(declare-fun q$35$$35$a1LY () Bool)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X () Data.ListN)
(declare-fun p$35$$35$a1LX () Bool)
(declare-fun x$35$$35$a1Nb () Data.N)
(declare-fun ds_d2Xj () Data.ListN)
(declare-fun Proof.use () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e () Data.N)
(declare-fun Data.takeListN () Int)
(declare-fun Data.zipListN () Int)
(declare-fun Data.heightTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805138$35$$35$d306 () Data.N)
(declare-fun Data.$36$tc$39$Nil () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h () Str)
(declare-fun l$35$$35$a1O2 () Data.TreeN)
(declare-fun Data.lastOfTwo () Int)
(declare-fun lit$36$ListN () Str)
(declare-fun n$35$$35$a1N9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 () Data.N)
(declare-fun Data.$36$tc$39$S () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M () Data.N)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O () Int)
(declare-fun Data.countListN () Int)
(declare-fun Data.dropListN2 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2826 () Data.ListN)
(declare-fun lit$36$Nil () Str)
(declare-fun lq_karg$36$VV$35$$35$3701$35$$35$k_$35$$35$3702 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805328$35$$35$d33a () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun xs$35$$35$a1Nc () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W () Str)
(declare-fun GHC.Num.negate () Int)
(declare-fun papp7 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1Zr () Int)
(declare-fun lq_karg$36$VV$35$$35$4241$35$$35$k_$35$$35$4242 () Int)
(declare-fun Data.takeWhileListN () Int)
(declare-fun ds_d2UU () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b () Int)
(declare-fun x$35$$35$a1Nh () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$VV$35$$35$4051$35$$35$k_$35$$35$4052 () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lq_tmp$36$x$35$$35$2402 () Data.ListN)
(declare-fun n$35$$35$a1Mx () Data.N)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun n$35$$35$a1M8 () Data.N)
(declare-fun Data.$36$tcListN2 () Int)
(declare-fun fix$36$$36$krep_a20g () Int)
(declare-fun lq_tmp$36$x$35$$35$3171 () Data.ListN)
(declare-fun lit$36$$39$Cons () Str)
(declare-fun VV$35$$35$F$35$$35$41 () Str)
(declare-fun ys$35$$35$a1Nw () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$3531 () Data.ListN2)
(declare-fun Data.deleteListN () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$1252 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805335$35$$35$d33h () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a206 () Int)
(declare-fun l$35$$35$a1Mz () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o () Data.N)
(declare-fun lit$36$$39$Z () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun Data.$36$fEqTreeN () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k () Data.N)
(declare-fun fix$36$$36$krep_a20l () Int)
(declare-fun h$35$$35$a1MU () Data.N)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Data.constant () Int)
(declare-fun ds_d2Vx () Data.N)
(declare-fun cast_as () Int)
(declare-fun lq_tmp$36$x$35$$35$2926 () Data.ListN)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1ZG () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 () Data.ListN)
(declare-fun Data.reverseListN2 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun h$35$$35$a1Mu () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F () Int)
(declare-fun y$35$$35$a1Nz () Data.N)
(declare-fun lq_karg$36$VV$35$$35$4009$35$$35$k_$35$$35$4010 () Int)
(declare-fun Data.singletonListN () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun x2$35$$35$a1MZ () Data.N)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun fix$36$$36$krep_a20i () Int)
(declare-fun x2$35$$35$a1NQ () Data.N)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lit$36$src$47$Data.hs () Str)
(declare-fun lit$36$TreeN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u () Data.ListN)
(declare-fun lit$36$Data () Str)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_karg$36$VV$35$$35$4389$35$$35$k_$35$$35$4390 () Int)
(declare-fun ds_d2UF () Data.ListN)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN () Str)
(declare-fun h$35$$35$a1MO () Data.N)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun n$35$$35$a1MI () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2304 () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3947$35$$35$k_$35$$35$3948 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun ds_d2XL () Data.N)
(declare-fun ds_d2TP () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3314 () Data.ListN2)
(declare-fun Data.minN () Int)
(declare-fun x$35$$35$a1Nd () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s () Str)
(declare-fun lq_karg$36$VV$35$$35$4317$35$$35$k_$35$$35$4318 () Int)
(declare-fun ds_d2Tp () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun fix$36$$36$krep_a20s () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Zz () Int)
(declare-fun lq_tmp$36$x$35$$35$3469 () Data.ListN2)
(declare-fun x1$35$$35$a1NH () Data.N)
(declare-fun Proof.$61$$61$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3939 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g () Data.N)
(declare-fun xs$35$$35$a1NJ () Data.ListN2)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N () Str)
(declare-fun Data.mirrorTreeN () Int)
(declare-fun n$35$$35$a1Ml () Data.N)
(declare-fun ds_d2Sj () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC () Data.N)
(declare-fun papp5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A () Data.ListN2)
(declare-fun Data.subN () Int)
(declare-fun ds_d2Vl () Data.ListN)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun Data.dropWhileListN () Int)
(declare-fun Data.concatListN2 () Int)
(declare-fun Data.initConcatListN () Int)
(declare-fun lit$36$Cons$32$ () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun n$35$$35$a1Mg () Data.N)
(declare-fun GHC.List.init () Int)
(declare-fun lq_tmp$36$x$35$$35$4582 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a () Int)
(declare-fun Data.maxN () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 () Str)
(declare-fun lit$36$$39$S () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b () Data.N)
(declare-fun y$35$$35$a1Nv () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 () Data.N)
(declare-fun Data.$36$tcListN () Int)
(declare-fun Data.sortedListN () Int)
(declare-fun Proof.by () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Str)
(declare-fun Data.nullListN () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_tmp$36$x$35$$35$5012 () Data.ListN)
(declare-fun t$35$$35$a1MP () Data.ListN)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Data.$36$fShowN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805257$35$$35$d321 () Str)
(declare-fun f$35$$35$a1ME () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun Data.$36$fEqN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805256$35$$35$d320 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun Data.$36$fEqListN2 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p () Data.ListN2)
(declare-fun Data.$36$trModule () Int)
(declare-fun fromJust () Int)
(declare-fun lq_tmp$36$x$35$$35$4621 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU () Data.N)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_tmp$36$x$35$$35$2560 () Data.ListN)
(declare-fun ds_d2V6 () Data.ListN)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1XY () Int)
(declare-fun m$35$$35$a1Mn () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ () Data.N)
(declare-fun ds_d2Xx () Data.ListN)
(declare-fun lit$36$S$32$ () Str)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx () Str)
(declare-fun fix$36$$36$krep_a20o () Int)
(declare-fun x2$35$$35$a1NW () Data.N)
(declare-fun n$35$$35$a1NK () Data.N)
(declare-fun Data.$36$fShowListN () Int)
(declare-fun Data.dropListN () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e () Data.N)
(declare-fun VV$35$$35$F$35$$35$49 () Str)
(declare-fun x1$35$$35$a1NT () Data.N)
(declare-fun GHC.Err.undefined () Int)
(declare-fun Data.ins1 () Int)
(declare-fun ds_d2XU () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P () Int)
(declare-fun Data.elemListN () Int)
(declare-fun lq_tmp$36$x$35$$35$1261 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805333$35$$35$d33f () Int)
(declare-fun lq_tmp$36$x$35$$35$1836 () Data.N)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C () Str)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$b$35$$35$a1LZ$35$$35$k_$35$$35$4665 () Bool)
(declare-fun Data.$36$tc$39$Z () Int)
(declare-fun fix$36$$36$dIP_a1XV () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 () Str)
(declare-fun lq_tmp$36$x$35$$35$5174 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 () Data.ListN)
(declare-fun autolen () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Z1 () Int)
(declare-fun n$35$$35$a1Mk () Data.N)
(declare-fun ds_d2Tr () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805196$35$$35$d312 () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN () Str)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Yd () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun h$35$$35$a1MM () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3551 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1YA () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u () Str)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O () Int)
(declare-fun ys$35$$35$a1NA () Data.ListN)
(declare-fun r$35$$35$a1O0 () Data.TreeN)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun l$35$$35$a1ML () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY () Data.N)
(declare-fun ds_d2T7 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q () Data.N)
(declare-fun Data.$36$tcTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n () Int)
(declare-fun fix$36$$36$krep_a20q () Int)
(declare-fun x2$35$$35$a1NI () Data.N)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Str)
(declare-fun lq_tmp$36$x$35$$35$2541 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I () Str)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_tmp$36$x$35$$35$4295 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 () Int)
(declare-fun lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW () Data.N)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Yl () Int)
(declare-fun x$35$$35$a1MW () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 () Int)
(declare-fun Proof.QED () Int)
(declare-fun lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1Zl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W () Data.N)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun y$35$$35$a1Nm () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy () Str)
(declare-fun VV$35$$35$F$35$$35$37 () Str)
(declare-fun lq_karg$36$VV$35$$35$3673$35$$35$k_$35$$35$3674 () Int)
(declare-fun ds_d2WC () Data.N)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 () Int)
(declare-fun ys$35$$35$a1Nn () Data.ListN)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$39 (Int Data.ListN) Data.TreeN)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Data.ListN)
(declare-fun apply$35$$35$35 (Int Data.ListN) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int Bool) Data.N)
(declare-fun apply$35$$35$23 (Int Str) Data.TreeN)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$56 (Int Data.TreeN) Int)
(declare-fun apply$35$$35$7 (Int Int) Data.TreeN)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int Str) Data.ListN2)
(declare-fun apply$35$$35$54 (Int Data.N) Data.N)
(declare-fun apply$35$$35$46 (Int Data.ListN2) Data.N)
(declare-fun apply$35$$35$53 (Int Data.N) Data.ListN2)
(declare-fun apply$35$$35$45 (Int Data.ListN2) Data.ListN2)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Data.ListN) Data.ListN)
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) Data.TreeN)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.ListN)
(declare-fun apply$35$$35$32 (Int Data.ListN) Int)
(declare-fun apply$35$$35$12 (Int Bool) Data.ListN)
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$13 (Int Bool) Data.ListN2)
(declare-fun apply$35$$35$62 (Int Data.TreeN) Data.N)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Data.ListN2)
(declare-fun apply$35$$35$47 (Int Data.ListN2) Data.TreeN)
(declare-fun apply$35$$35$55 (Int Data.N) Data.TreeN)
(declare-fun apply$35$$35$22 (Int Str) Data.N)
(declare-fun apply$35$$35$40 (Int Data.ListN2) Int)
(declare-fun apply$35$$35$48 (Int Data.N) Int)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int Data.ListN2) Data.ListN)
(declare-fun apply$35$$35$52 (Int Data.N) Data.ListN)
(declare-fun apply$35$$35$37 (Int Data.ListN) Data.ListN2)
(declare-fun apply$35$$35$57 (Int Data.TreeN) Bool)
(declare-fun apply$35$$35$60 (Int Data.TreeN) Data.ListN)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$33 (Int Data.ListN) Bool)
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$42 (Int Data.ListN2) Str)
(declare-fun apply$35$$35$50 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$59 (Int Data.TreeN) (_ BitVec 32))
(declare-fun apply$35$$35$63 (Int Data.TreeN) Data.TreeN)
(declare-fun apply$35$$35$20 (Int Str) Data.ListN)
(declare-fun apply$35$$35$58 (Int Data.TreeN) Str)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$41 (Int Data.ListN2) Bool)
(declare-fun apply$35$$35$49 (Int Data.N) Bool)
(declare-fun apply$35$$35$34 (Int Data.ListN) Str)
(declare-fun apply$35$$35$61 (Int Data.TreeN) Data.ListN2)
(declare-fun apply$35$$35$43 (Int Data.ListN2) (_ BitVec 32))
(declare-fun apply$35$$35$51 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$15 (Int Bool) Data.TreeN)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$6 (Int Int) Data.N)
(declare-fun apply$35$$35$5 (Int Int) Data.ListN2)
(declare-fun apply$35$$35$38 (Int Data.ListN) Data.N)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$39 (Data.ListN) Data.TreeN)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Data.ListN)
(declare-fun coerce$35$$35$35 (Data.ListN) (_ BitVec 32))
(declare-fun coerce$35$$35$14 (Bool) Data.N)
(declare-fun coerce$35$$35$23 (Str) Data.TreeN)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$56 (Data.TreeN) Int)
(declare-fun coerce$35$$35$7 (Int) Data.TreeN)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$21 (Str) Data.ListN2)
(declare-fun coerce$35$$35$54 (Data.N) Data.N)
(declare-fun coerce$35$$35$46 (Data.ListN2) Data.N)
(declare-fun coerce$35$$35$53 (Data.N) Data.ListN2)
(declare-fun coerce$35$$35$45 (Data.ListN2) Data.ListN2)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Data.ListN) Data.ListN)
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) Data.TreeN)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.ListN)
(declare-fun coerce$35$$35$32 (Data.ListN) Int)
(declare-fun coerce$35$$35$12 (Bool) Data.ListN)
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$13 (Bool) Data.ListN2)
(declare-fun coerce$35$$35$62 (Data.TreeN) Data.N)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Data.ListN2)
(declare-fun coerce$35$$35$47 (Data.ListN2) Data.TreeN)
(declare-fun coerce$35$$35$55 (Data.N) Data.TreeN)
(declare-fun coerce$35$$35$22 (Str) Data.N)
(declare-fun coerce$35$$35$40 (Data.ListN2) Int)
(declare-fun coerce$35$$35$48 (Data.N) Int)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 (Data.ListN2) Data.ListN)
(declare-fun coerce$35$$35$52 (Data.N) Data.ListN)
(declare-fun coerce$35$$35$37 (Data.ListN) Data.ListN2)
(declare-fun coerce$35$$35$57 (Data.TreeN) Bool)
(declare-fun coerce$35$$35$60 (Data.TreeN) Data.ListN)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$33 (Data.ListN) Bool)
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$42 (Data.ListN2) Str)
(declare-fun coerce$35$$35$50 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$59 (Data.TreeN) (_ BitVec 32))
(declare-fun coerce$35$$35$63 (Data.TreeN) Data.TreeN)
(declare-fun coerce$35$$35$20 (Str) Data.ListN)
(declare-fun coerce$35$$35$58 (Data.TreeN) Str)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$41 (Data.ListN2) Bool)
(declare-fun coerce$35$$35$49 (Data.N) Bool)
(declare-fun coerce$35$$35$34 (Data.ListN) Str)
(declare-fun coerce$35$$35$61 (Data.TreeN) Data.ListN2)
(declare-fun coerce$35$$35$43 (Data.ListN2) (_ BitVec 32))
(declare-fun coerce$35$$35$51 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$15 (Bool) Data.TreeN)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$6 (Int) Data.N)
(declare-fun coerce$35$$35$5 (Int) Data.ListN2)
(declare-fun coerce$35$$35$38 (Data.ListN) Data.N)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$39 (Data.ListN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Data.ListN) Int)
(declare-fun smt_lambda$35$$35$35 (Data.ListN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$23 (Str Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$56 (Data.TreeN Int) Int)
(declare-fun smt_lambda$35$$35$7 (Int Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 (Str Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$54 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$46 (Data.ListN2 Data.N) Int)
(declare-fun smt_lambda$35$$35$53 (Data.N Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$45 (Data.ListN2 Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Data.ListN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.ListN) Int)
(declare-fun smt_lambda$35$$35$32 (Data.ListN Int) Int)
(declare-fun smt_lambda$35$$35$12 (Bool Data.ListN) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$13 (Bool Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$62 (Data.TreeN Data.N) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$47 (Data.ListN2 Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$55 (Data.N Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$22 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$40 (Data.ListN2 Int) Int)
(declare-fun smt_lambda$35$$35$48 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 (Data.ListN2 Data.ListN) Int)
(declare-fun smt_lambda$35$$35$52 (Data.N Data.ListN) Int)
(declare-fun smt_lambda$35$$35$37 (Data.ListN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$57 (Data.TreeN Bool) Int)
(declare-fun smt_lambda$35$$35$60 (Data.TreeN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$33 (Data.ListN Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$42 (Data.ListN2 Str) Int)
(declare-fun smt_lambda$35$$35$50 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$59 (Data.TreeN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$63 (Data.TreeN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$20 (Str Data.ListN) Int)
(declare-fun smt_lambda$35$$35$58 (Data.TreeN Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$41 (Data.ListN2 Bool) Int)
(declare-fun smt_lambda$35$$35$49 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.ListN Str) Int)
(declare-fun smt_lambda$35$$35$61 (Data.TreeN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$43 (Data.ListN2 (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$51 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$38 (Data.ListN Data.N) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$2$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$3$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$4$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$5$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$6$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$7$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$1$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$2$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$3$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$4$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$5$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$6$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$7$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$2$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$3$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$4$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$5$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$6$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$7$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$1$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx lit$36$S$32$ lit$36$$39$S lit$36$Cons$32$ lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN lit$36$Data lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2 lit$36$TreeN lit$36$src$47$Data.hs lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN lit$36$$39$Z lit$36$$39$Cons lit$36$Nil lit$36$ListN lit$36$undefined lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN lit$36$$39$Node lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN lit$36$ListN2 lit$36$$39$Cons2 lit$36$$39$Nil lit$36$$39$Leaf lit$36$Z lit$36$$39$Nil2 lit$36$N lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))




(assert (distinct GHC.Types.False GHC.Types.True))






(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))




(assert (= (strLen lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) 46))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$N) 1))
(assert (= (strLen lit$36$$39$Nil2) 5))
(assert (= (strLen lit$36$Z) 1))
(assert (= (strLen lit$36$$39$Leaf) 5))
(assert (= (strLen lit$36$$39$Nil) 4))
(assert (= (strLen lit$36$$39$Cons2) 6))
(assert (= (strLen lit$36$ListN2) 6))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) 40))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2) 48))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN) 45))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) 39))
(assert (= (strLen lit$36$undefined) 9))
(assert (= (strLen lit$36$ListN) 5))
(assert (= (strLen lit$36$Nil) 3))
(assert (= (strLen lit$36$$39$Cons) 5))
(assert (= (strLen lit$36$$39$Z) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN) 45))
(assert (= (strLen lit$36$src$47$Data.hs) 11))
(assert (= (strLen lit$36$TreeN) 5))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2) 48))
(assert (= (strLen lit$36$Data) 4))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) 40))
(assert (= (strLen lit$36$Cons$32$) 5))
(assert (= (strLen lit$36$$39$S) 2))
(assert (= (strLen lit$36$S$32$) 2))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx) 46))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) 40))
(push 1)
(define-fun b$36$$35$$35$1120 () Bool (and (= VV$35$$35$F$35$$35$38 lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m)))
(define-fun b$36$$35$$35$256 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx)) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2Xy) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx (Data.S m$35$$35$a1M7)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) m$35$$35$a1M7)))
(define-fun b$36$$35$$35$352 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS)) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS ds_d2WC) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS (Data.S m$35$$35$a1Mf)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) m$35$$35$a1Mf)))
(define-fun b$36$$35$$35$384 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805135$35$$35$d303) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805135$35$$35$d303)) (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 Data.Z) (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 n$35$$35$a1Mh)))
(define-fun b$36$$35$$35$640 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2T6))
(define-fun b$36$$35$$35$704 () Bool (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r ds_d2Sy))
(define-fun b$36$$35$$35$864 () Bool (= fix$36$$36$krep_a20j (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20g) fix$36$$36$krep_a20k)))
(define-fun b$36$$35$$35$1121 () Bool (and (= VV$35$$35$F$35$$35$39 lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$39 lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k)))
(define-fun b$36$$35$$35$257 () Bool (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz n$35$$35$a1M5))
(define-fun b$36$$35$$35$353 () Bool (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU ds_d2WD))
(define-fun b$36$$35$$35$385 () Bool (= lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$417 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d)) (= lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d n$35$$35$a1Ml) (= lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d (Data.S lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(define-fun b$36$$35$$35$641 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805200$35$$35$d316)) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 Data.Nil) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2T6)))
(define-fun b$36$$35$$35$801 () Bool (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 8549016032701946343))
(define-fun b$36$$35$$35$833 () Bool (= lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q 17514001072161352203))
(define-fun b$36$$35$$35$865 () Bool (= fix$36$$36$krep_a20h (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20i) fix$36$$36$krep_a20j)))
(define-fun b$36$$35$$35$897 () Bool (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 ds_d2UP))
(define-fun b$36$$35$$35$1122 () Bool (and (= VV$35$$35$F$35$$35$40 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$40 lq_anf$36$$35$$35$7205759403792805203$35$$35$d319)))
(define-fun b$36$$35$$35$258 () Bool (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz n$35$$35$a1M5))
(define-fun b$36$$35$$35$354 () Bool (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU ds_d2WD))
(define-fun b$36$$35$$35$418 () Bool (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e ds_d2W3))
(define-fun b$36$$35$$35$450 () Bool (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n ds_d2Vy))
(define-fun b$36$$35$$35$482 () Bool (= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v ds_d2Vk))
(define-fun b$36$$35$$35$642 () Bool (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$674 () Bool (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h ds_d2SR))
(define-fun b$36$$35$$35$802 () Bool (= lq_anf$36$$35$$35$7205759403792805261$35$$35$d325 5512001040859239703))
(define-fun b$36$$35$$35$834 () Bool (= lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r 12720842684549174125))
(define-fun b$36$$35$$35$866 () Bool (= lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L 16314774540632496181))
(define-fun b$36$$35$$35$898 () Bool (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 ds_d2UP))
(define-fun b$36$$35$$35$1123 () Bool (and (= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805335$35$$35$d33h) lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i)) (= VV$35$$35$F$35$$35$9 (+ lq_anf$36$$35$$35$7205759403792805335$35$$35$d33h lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i))))
(define-fun b$36$$35$$35$131 () Bool (and (= Proof.trivial GHC.Tuple.$40$$41$) (= Proof.trivial Proof.trivial)))
(define-fun b$36$$35$$35$259 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz)) (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz Data.Z) (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz n$35$$35$a1M5)))
(define-fun b$36$$35$$35$355 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU)) (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU Data.Z) (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU ds_d2WD)))
(define-fun b$36$$35$$35$419 () Bool (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e ds_d2W3))
(define-fun b$36$$35$$35$643 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2T6))
(define-fun b$36$$35$$35$707 () Bool (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r ds_d2Sy))
(define-fun b$36$$35$$35$803 () Bool (= lq_anf$36$$35$$35$7205759403792805262$35$$35$d326 lit$36$ListN))
(define-fun b$36$$35$$35$835 () Bool (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s lit$36$$39$Nil2))
(define-fun b$36$$35$$35$867 () Bool (= lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M 3295243446596530206))
(define-fun b$36$$35$$35$899 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805327$35$$35$d339) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805327$35$$35$d339)) (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 Data.Nil) (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 ds_d2UP)))
(define-fun b$36$$35$$35$100 () Bool (= Data.Nil Data.Nil))
(define-fun b$36$$35$$35$1124 () Bool (and (= VV$35$$35$F$35$$35$41 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317)))
(define-fun b$36$$35$$35$164 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$260 () Bool (= lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$356 () Bool (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$420 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)) (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e Data.Z) (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e ds_d2W3)))
(define-fun b$36$$35$$35$484 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v)) (= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v ds_d2Vk) (= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v (Data.S n$35$$35$a1Mx)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v) n$35$$35$a1Mx)))
(define-fun b$36$$35$$35$676 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h)) (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h ds_d2SR) (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h (Data.S lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q)))
(define-fun b$36$$35$$35$804 () Bool (= lq_anf$36$$35$$35$7205759403792805263$35$$35$d327 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805262$35$$35$d326)))
(define-fun b$36$$35$$35$836 () Bool (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)))
(define-fun b$36$$35$$35$868 () Bool (= lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N lit$36$$39$Node))
(define-fun b$36$$35$$35$900 () Bool (= lq_anf$36$$35$$35$7205759403792805328$35$$35$d33a 0))
(define-fun b$36$$35$$35$101 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$1125 () Bool (and (= VV$35$$35$F$35$$35$10 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805333$35$$35$d33f)) (= VV$35$$35$F$35$$35$10 lq_anf$36$$35$$35$7205759403792805333$35$$35$d33f)))
(define-fun b$36$$35$$35$421 () Bool (= lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$453 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n)) (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n ds_d2Vy) (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n (Data.Cons lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n) lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n) lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$485 () Bool (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w ds_d2Vl))
(define-fun b$36$$35$$35$677 () Bool (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i xs$35$$35$a1NF))
(define-fun b$36$$35$$35$709 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r)) (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r ds_d2Sy) (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r (Data.S lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r) lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)))
(define-fun b$36$$35$$35$805 () Bool (= lq_anf$36$$35$$35$7205759403792805264$35$$35$d328 0))
(define-fun b$36$$35$$35$837 () Bool (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u 0))
(define-fun b$36$$35$$35$869 () Bool (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N)))
(define-fun b$36$$35$$35$901 () Bool (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 ds_d2UP))
(define-fun b$36$$35$$35$1126 () Bool (and (= VV$35$$35$F$35$$35$42 lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x)))
(define-fun b$36$$35$$35$198 () Bool (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(define-fun b$36$$35$$35$422 () Bool (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e ds_d2W3))
(define-fun b$36$$35$$35$454 () Bool (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o ds_d2Vx))
(define-fun b$36$$35$$35$486 () Bool (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w ds_d2Vl))
(define-fun b$36$$35$$35$646 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805200$35$$35$d316)) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2T6) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 (Data.Cons x$35$$35$a1Nx xs$35$$35$a1Ny)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) xs$35$$35$a1Ny) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) x$35$$35$a1Nx)))
(define-fun b$36$$35$$35$710 () Bool (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s ds_d2Sz))
(define-fun b$36$$35$$35$774 () Bool (= lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx))
(define-fun b$36$$35$$35$870 () Bool (= lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P 0))
(define-fun b$36$$35$$35$1127 () Bool (and (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805330$35$$35$d33c) lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d)) (= VV$35$$35$F$35$$35$11 (+ lq_anf$36$$35$$35$7205759403792805330$35$$35$d33c lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d))))
(define-fun b$36$$35$$35$487 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w)) (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w Data.Nil) (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w ds_d2Vl)))
(define-fun b$36$$35$$35$647 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2T7))
(define-fun b$36$$35$$35$775 () Bool (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K)))
(define-fun b$36$$35$$35$839 () Bool (= fix$36$$36$krep_a20o (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20l) fix$36$$36$krep_a20l)))
(define-fun b$36$$35$$35$104 () Bool (= Data.$36$fEqTreeN Data.$36$fEqTreeN))
(define-fun b$36$$35$$35$1128 () Bool (and (= VV$35$$35$F$35$$35$43 lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN) (= VV$35$$35$F$35$$35$43 lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)))
(define-fun b$36$$35$$35$200 () Bool (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(define-fun b$36$$35$$35$328 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2WC))
(define-fun b$36$$35$$35$424 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)) (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e ds_d2W3) (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e (Data.S m$35$$35$a1Mn)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e) m$35$$35$a1Mn)))
(define-fun b$36$$35$$35$488 () Bool (= lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$648 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2T7))
(define-fun b$36$$35$$35$680 () Bool (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i xs$35$$35$a1NF))
(define-fun b$36$$35$$35$776 () Bool (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M lit$36$Data))
(define-fun b$36$$35$$35$808 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0)))
(define-fun b$36$$35$$35$840 () Bool (= fix$36$$36$krep_a20n (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20i) fix$36$$36$krep_a20o)))
(define-fun b$36$$35$$35$904 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805327$35$$35$d339) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805327$35$$35$d339)) (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 ds_d2UP) (= lq_anf$36$$35$$35$7205759403792805327$35$$35$d339 (Data.Cons h$35$$35$a1MO t$35$$35$a1MP)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805327$35$$35$d339) t$35$$35$a1MP) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805327$35$$35$d339) h$35$$35$a1MO)))
(define-fun b$36$$35$$35$1129 () Bool (and (= VV$35$$35$F$35$$35$12 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805328$35$$35$d33a)) (= VV$35$$35$F$35$$35$12 lq_anf$36$$35$$35$7205759403792805328$35$$35$d33a)))
(define-fun b$36$$35$$35$425 () Bool (= lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g n$35$$35$a1Ml))
(define-fun b$36$$35$$35$457 () Bool (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o ds_d2Vx))
(define-fun b$36$$35$$35$649 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805202$35$$35$d318) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805202$35$$35$d318)) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 Data.Nil) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2T7)))
(define-fun b$36$$35$$35$713 () Bool (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s ds_d2Sz))
(define-fun b$36$$35$$35$777 () Bool (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))
(define-fun b$36$$35$$35$841 () Bool (= fix$36$$36$krep_a20m (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20i) fix$36$$36$krep_a20n)))
(define-fun b$36$$35$$35$905 () Bool (= lq_anf$36$$35$$35$7205759403792805329$35$$35$d33b 1))
(define-fun b$36$$35$$35$106 () Bool (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt))
(define-fun b$36$$35$$35$1130 () Bool (and (= VV$35$$35$F$35$$35$44 lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h)))
(define-fun b$36$$35$$35$202 () Bool (and (is-Data.Nil2 Data.Nil2) (not (is-Data.Cons2 Data.Nil2)) (= Data.Nil2 Data.Nil2)))
(define-fun b$36$$35$$35$426 () Bool (= lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g n$35$$35$a1Ml))
(define-fun b$36$$35$$35$650 () Bool (= lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$810 () Bool (= lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a 118631242305335887))
(define-fun b$36$$35$$35$842 () Bool (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v 15295629790850942388))
(define-fun b$36$$35$$35$906 () Bool (and (= lq_anf$36$$35$$35$7205759403792805330$35$$35$d33c (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805329$35$$35$d33b)) (= lq_anf$36$$35$$35$7205759403792805330$35$$35$d33c lq_anf$36$$35$$35$7205759403792805329$35$$35$d33b)))
(define-fun b$36$$35$$35$107 () Bool (= Data.Z Data.Z))
(define-fun b$36$$35$$35$363 () Bool (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2Wh))
(define-fun b$36$$35$$35$427 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g)) (= lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g Data.Z) (= lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g n$35$$35$a1Ml)))
(define-fun b$36$$35$$35$459 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)) (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o ds_d2Vx) (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o (Data.S n$35$$35$a1Mt)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o) n$35$$35$a1Mt)))
(define-fun b$36$$35$$35$779 () Bool (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O 11637624030455169537))
(define-fun b$36$$35$$35$811 () Bool (= lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b 18196456003521701161))
(define-fun b$36$$35$$35$843 () Bool (= lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w 9975998482419695038))
(define-fun b$36$$35$$35$907 () Bool (and (= lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d (apply$35$$35$32 Data.lengthListN_int t$35$$35$a1MP)) (= lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d (ite (is-Data.Nil t$35$$35$a1MP) 0 (+ 1 (apply$35$$35$32 Data.lengthListN_int (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 t$35$$35$a1MP))))) (<= 0 lq_anf$36$$35$$35$7205759403792805331$35$$35$d33d)))
(define-fun b$36$$35$$35$1132 () Bool (and (= VV$35$$35$F$35$$35$45 lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f)))
(define-fun b$36$$35$$35$204 () Bool (and (is-Data.Leaf Data.Leaf) (not (is-Data.Node Data.Leaf)) (= Data.Leaf Data.Leaf)))
(define-fun b$36$$35$$35$428 () Bool (= lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$460 () Bool (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p ds_d2Vy))
(define-fun b$36$$35$$35$684 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i xs$35$$35$a1NF) (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i (Data.Cons2 lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n)))
(define-fun b$36$$35$$35$780 () Bool (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P 2962471437394586440))
(define-fun b$36$$35$$35$812 () Bool (= lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c lit$36$$39$Nil))
(define-fun b$36$$35$$35$844 () Bool (= lq_anf$36$$35$$35$7205759403792805289$35$$35$d32x lit$36$$39$Cons2))
(define-fun b$36$$35$$35$109 () Bool (= Data.$36$fShowN Data.$36$fShowN))
(define-fun b$36$$35$$35$1133 () Bool (and (= VV$35$$35$F$35$$35$46 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$46 lq_anf$36$$35$$35$7205759403792805136$35$$35$d304)))
(define-fun b$36$$35$$35$461 () Bool (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p ds_d2Vy))
(define-fun b$36$$35$$35$685 () Bool (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ds_d2SR))
(define-fun b$36$$35$$35$717 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s)) (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s ds_d2Sz) (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s (Data.Cons2 lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s) lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)))
(define-fun b$36$$35$$35$781 () Bool (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q lit$36$N))
(define-fun b$36$$35$$35$813 () Bool (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c)))
(define-fun b$36$$35$$35$845 () Bool (= lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805289$35$$35$d32x)))
(define-fun b$36$$35$$35$110 () Bool (= Data.$36$fEqN Data.$36$fEqN))
(define-fun b$36$$35$$35$1134 () Bool (and (= VV$35$$35$F$35$$35$47 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302)))
(define-fun b$36$$35$$35$238 () Bool (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2Xy))
(define-fun b$36$$35$$35$366 () Bool (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2Wh))
(define-fun b$36$$35$$35$462 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p Data.Nil) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p ds_d2Vy)))
(define-fun b$36$$35$$35$686 () Bool (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ds_d2SR))
(define-fun b$36$$35$$35$718 () Bool (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t ds_d2Sy))
(define-fun b$36$$35$$35$782 () Bool (= lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)))
(define-fun b$36$$35$$35$814 () Bool (= lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e 0))
(define-fun b$36$$35$$35$846 () Bool (= lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z 0))
(define-fun b$36$$35$$35$910 () Bool (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e ds_d2XQ))
(define-fun b$36$$35$$35$111 () Bool (= Data.$36$fEqListN2 Data.$36$fEqListN2))
(define-fun b$36$$35$$35$1135 () Bool (and (= VV$35$$35$F$35$$35$48 lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$48 lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV)))
(define-fun b$36$$35$$35$463 () Bool (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN))
(define-fun b$36$$35$$35$687 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j)) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j Data.Z) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ds_d2SR)))
(define-fun b$36$$35$$35$719 () Bool (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t ds_d2Sy))
(define-fun b$36$$35$$35$783 () Bool (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S 0))
(define-fun b$36$$35$$35$911 () Bool (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e ds_d2XQ))
(define-fun b$36$$35$$35$112 () Bool (= Data.$36$fShowListN Data.$36$fShowListN))
(define-fun b$36$$35$$35$1136 () Bool (and (= VV$35$$35$F$35$$35$49 lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$49 lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT)))
(define-fun b$36$$35$$35$368 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ)) (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2Wh) (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ (Data.S lq_anf$36$$35$$35$7205759403792805139$35$$35$d307)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) lq_anf$36$$35$$35$7205759403792805139$35$$35$d307)))
(define-fun b$36$$35$$35$688 () Bool (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$720 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t)) (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t Data.Z) (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t ds_d2Sy)))
(define-fun b$36$$35$$35$816 () Bool (= fix$36$$36$krep_a20r (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20p) fix$36$$36$krep_a20p)))
(define-fun b$36$$35$$35$848 () Bool (= lq_anf$36$$35$$35$7205759403792805292$35$$35$d32A 17901879238874314631))
(define-fun b$36$$35$$35$912 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e)) (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e Data.Z) (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e ds_d2XQ)))
(define-fun b$36$$35$$35$1137 () Bool (and (= VV$35$$35$F$35$$35$50 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA)))
(define-fun b$36$$35$$35$241 () Bool (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2Xy))
(define-fun b$36$$35$$35$337 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2WC))
(define-fun b$36$$35$$35$369 () Bool (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 n$35$$35$a1Mh))
(define-fun b$36$$35$$35$625 () Bool (= lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 ds_d2T6))
(define-fun b$36$$35$$35$689 () Bool (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ds_d2SR))
(define-fun b$36$$35$$35$721 () Bool (= lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$817 () Bool (= fix$36$$36$krep_a20q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20i) fix$36$$36$krep_a20r)))
(define-fun b$36$$35$$35$849 () Bool (= lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B 14477644979242118319))
(define-fun b$36$$35$$35$913 () Bool (= lq_anf$36$$35$$35$7205759403792805333$35$$35$d33f 0))
(define-fun b$36$$35$$35$1138 () Bool (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L) lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P) fix$36$$36$krep_a20h)))
(define-fun b$36$$35$$35$722 () Bool (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t ds_d2Sy))
(define-fun b$36$$35$$35$786 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0)))
(define-fun b$36$$35$$35$818 () Bool (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f 10038555432957128073))
(define-fun b$36$$35$$35$850 () Bool (= lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C lit$36$TreeN))
(define-fun b$36$$35$$35$914 () Bool (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e ds_d2XQ))
(define-fun b$36$$35$$35$1139 () Bool (and (= VV$35$$35$F$35$$35$51 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$51 lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy)))
(define-fun b$36$$35$$35$243 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv)) (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2Xy) (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv (Data.S lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC)))
(define-fun b$36$$35$$35$339 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ)) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2WC) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ (Data.S lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ) lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY)))
(define-fun b$36$$35$$35$691 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j)) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ds_d2SR) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j (Data.S n$35$$35$a1NG)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) n$35$$35$a1NG)))
(define-fun b$36$$35$$35$819 () Bool (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g 7999532606289363418))
(define-fun b$36$$35$$35$851 () Bool (= lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C)))
(define-fun b$36$$35$$35$1140 () Bool (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J) lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K) fix$36$$36$krep_a20g)))
(define-fun b$36$$35$$35$244 () Bool (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw n$35$$35$a1M5))
(define-fun b$36$$35$$35$340 () Bool (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2WD))
(define-fun b$36$$35$$35$372 () Bool (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 n$35$$35$a1Mh))
(define-fun b$36$$35$$35$628 () Bool (= lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 ds_d2T6))
(define-fun b$36$$35$$35$692 () Bool (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l xs$35$$35$a1NF))
(define-fun b$36$$35$$35$724 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t)) (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t ds_d2Sy) (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t (Data.S n$35$$35$a1NK)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) n$35$$35$a1NK)))
(define-fun b$36$$35$$35$788 () Bool (= lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U 14761107768733905834))
(define-fun b$36$$35$$35$820 () Bool (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h lit$36$$39$Cons))
(define-fun b$36$$35$$35$852 () Bool (= lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E 0))
(define-fun b$36$$35$$35$916 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e)) (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e ds_d2XQ) (= lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e (Data.S n$35$$35$a1M1)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805332$35$$35$d33e) n$35$$35$a1M1)))
(define-fun b$36$$35$$35$1141 () Bool (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)))
(define-fun b$36$$35$$35$693 () Bool (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l xs$35$$35$a1NF))
(define-fun b$36$$35$$35$725 () Bool (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2Sz))
(define-fun b$36$$35$$35$789 () Bool (= lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V 14093430801328222558))
(define-fun b$36$$35$$35$821 () Bool (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)))
(define-fun b$36$$35$$35$917 () Bool (= lq_anf$36$$35$$35$7205759403792805334$35$$35$d33g 1))
(define-fun b$36$$35$$35$1142 () Bool (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805292$35$$35$d32A) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$374 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805132$35$$35$d300)) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 n$35$$35$a1Mh) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 (Data.S lq_anf$36$$35$$35$7205759403792805138$35$$35$d306)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) lq_anf$36$$35$$35$7205759403792805138$35$$35$d306)))
(define-fun b$36$$35$$35$406 () Bool (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c ds_d2W3))
(define-fun b$36$$35$$35$694 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)) (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l xs$35$$35$a1NF)))
(define-fun b$36$$35$$35$726 () Bool (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2Sz))
(define-fun b$36$$35$$35$790 () Bool (= lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W lit$36$$39$Z))
(define-fun b$36$$35$$35$822 () Bool (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j 0))
(define-fun b$36$$35$$35$918 () Bool (and (= lq_anf$36$$35$$35$7205759403792805335$35$$35$d33h (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805334$35$$35$d33g)) (= lq_anf$36$$35$$35$7205759403792805335$35$$35$d33h lq_anf$36$$35$$35$7205759403792805334$35$$35$d33g)))
(define-fun b$36$$35$$35$87 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$1143 () Bool (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) fix$36$$36$krep_a20m)))
(define-fun b$36$$35$$35$247 () Bool (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw n$35$$35$a1M5))
(define-fun b$36$$35$$35$343 () Bool (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2WD))
(define-fun b$36$$35$$35$375 () Bool (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 ds_d2Wh))
(define-fun b$36$$35$$35$631 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805198$35$$35$d314) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805198$35$$35$d314)) (= lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 ds_d2T6) (= lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 (Data.Cons lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805198$35$$35$d314) lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805198$35$$35$d314) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d)))
(define-fun b$36$$35$$35$695 () Bool (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lit$36$src$47$Data.hs$58$$40$226$44$1$41$$45$$40$228$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$727 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2Sz)))
(define-fun b$36$$35$$35$791 () Bool (= lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)))
(define-fun b$36$$35$$35$855 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0)))
(define-fun b$36$$35$$35$919 () Bool (and (= lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i (apply$35$$35$48 Data.n_to_int n$35$$35$a1M1)) (= lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i (ite (is-Data.Z n$35$$35$a1M1) 0 (+ 1 (apply$35$$35$48 Data.n_to_int (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a1M1))))) (<= 0 lq_anf$36$$35$$35$7205759403792805336$35$$35$d33i)))
(define-fun b$36$$35$$35$1144 () Bool (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) fix$36$$36$krep_a20l)))
(define-fun b$36$$35$$35$376 () Bool (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 ds_d2Wh))
(define-fun b$36$$35$$35$472 () Bool (= lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u ds_d2Vl))
(define-fun b$36$$35$$35$632 () Bool (= lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 ds_d2T7))
(define-fun b$36$$35$$35$728 () Bool (= lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$792 () Bool (= lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y 0))
(define-fun b$36$$35$$35$824 () Bool (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k 5782567431922776683))
(define-fun b$36$$35$$35$1145 () Bool (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)))
(define-fun b$36$$35$$35$249 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw)) (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw n$35$$35$a1M5) (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw (Data.S lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw) lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB)))
(define-fun b$36$$35$$35$345 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR)) (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2WD) (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR (Data.S lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW)))
(define-fun b$36$$35$$35$377 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805133$35$$35$d301)) (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 Data.Z) (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 ds_d2Wh)))
(define-fun b$36$$35$$35$409 () Bool (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c ds_d2W3))
(define-fun b$36$$35$$35$825 () Bool (= lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l 6909690971159225123))
(define-fun b$36$$35$$35$857 () Bool (= lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G 15092994948585749360))
(define-fun b$36$$35$$35$90 () Bool (= Data.Leaf Data.Leaf))
(define-fun b$36$$35$$35$1114 () Bool (= VV$35$$35$F$35$$35$32 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y) fix$36$$36$krep_a20i)))
(define-fun b$36$$35$$35$1146 () Bool (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2Xy))
(define-fun b$36$$35$$35$346 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS ds_d2WC))
(define-fun b$36$$35$$35$378 () Bool (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$794 () Bool (= fix$36$$36$krep_a20s (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20i) fix$36$$36$krep_a20i)))
(define-fun b$36$$35$$35$826 () Bool (= lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m lit$36$ListN2))
(define-fun b$36$$35$$35$858 () Bool (= lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H 16308189845438446223))
(define-fun b$36$$35$$35$91 () Bool (= Data.Nil2 Data.Nil2))
(define-fun b$36$$35$$35$1115 () Bool (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)))
(define-fun b$36$$35$$35$1147 () Bool (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) fix$36$$36$krep_a20q)))
(define-fun b$36$$35$$35$251 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2Xy))
(define-fun b$36$$35$$35$347 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS ds_d2WC))
(define-fun b$36$$35$$35$379 () Bool (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 ds_d2Wh))
(define-fun b$36$$35$$35$411 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c)) (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c ds_d2W3) (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c (Data.S lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k)))
(define-fun b$36$$35$$35$475 () Bool (= lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u ds_d2Vl))
(define-fun b$36$$35$$35$635 () Bool (= lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 ds_d2T7))
(define-fun b$36$$35$$35$795 () Bool (= lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z 12423987858577356489))
(define-fun b$36$$35$$35$827 () Bool (= lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m)))
(define-fun b$36$$35$$35$859 () Bool (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I lit$36$$39$Leaf))
(define-fun b$36$$35$$35$92 () Bool (= Data.$36$fEqListN Data.$36$fEqListN))
(define-fun b$36$$35$$35$1116 () Bool (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R) lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$1148 () Bool (= VV$35$$35$F$35$$35$28 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e) fix$36$$36$krep_a20p)))
(define-fun b$36$$35$$35$252 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx)) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx Data.Z) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2Xy)))
(define-fun b$36$$35$$35$348 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS)) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS Data.Z) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS ds_d2WC)))
(define-fun b$36$$35$$35$412 () Bool (= lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d n$35$$35$a1Ml))
(define-fun b$36$$35$$35$796 () Bool (= lq_anf$36$$35$$35$7205759403792805256$35$$35$d320 14055370483984290301))
(define-fun b$36$$35$$35$828 () Bool (= lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o 0))
(define-fun b$36$$35$$35$860 () Bool (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I)))
(define-fun b$36$$35$$35$1117 () Bool (= VV$35$$35$F$35$$35$35 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))
(define-fun b$36$$35$$35$1149 () Bool (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$349 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$381 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805133$35$$35$d301)) (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 ds_d2Wh) (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 (Data.S m$35$$35$a1Mj)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) m$35$$35$a1Mj)))
(define-fun b$36$$35$$35$797 () Bool (= lq_anf$36$$35$$35$7205759403792805257$35$$35$d321 lit$36$$39$S))
(define-fun b$36$$35$$35$861 () Bool (= lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K 0))
(define-fun b$36$$35$$35$1118 () Bool (and (= VV$35$$35$F$35$$35$36 lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w)))
(define-fun b$36$$35$$35$1150 () Bool (= VV$35$$35$F$35$$35$30 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) lq_anf$36$$35$$35$7205759403792805261$35$$35$d325) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805263$35$$35$d327) lq_anf$36$$35$$35$7205759403792805264$35$$35$d328) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$254 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2Xy))
(define-fun b$36$$35$$35$350 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS ds_d2WC))
(define-fun b$36$$35$$35$382 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 n$35$$35$a1Mh))
(define-fun b$36$$35$$35$478 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u)) (= lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u ds_d2Vl) (= lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u (Data.Cons lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y)))
(define-fun b$36$$35$$35$638 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805199$35$$35$d315) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805199$35$$35$d315)) (= lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 ds_d2T7) (= lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 (Data.Cons lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805199$35$$35$d315) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805199$35$$35$d315) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)))
(define-fun b$36$$35$$35$798 () Bool (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805257$35$$35$d321)))
(define-fun b$36$$35$$35$95 () Bool (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt))
(define-fun b$36$$35$$35$1119 () Bool (and (= VV$35$$35$F$35$$35$37 lit$36$src$47$Data.hs$58$$40$232$44$1$41$$45$$40$234$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$37 lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u)))
(define-fun b$36$$35$$35$1151 () Bool (= VV$35$$35$F$35$$35$31 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z) lq_anf$36$$35$$35$7205759403792805256$35$$35$d320) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) lq_anf$36$$35$$35$7205759403792805259$35$$35$d323) fix$36$$36$krep_a20s)))
(define-fun b$36$$35$$35$159 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$383 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 n$35$$35$a1Mh))
(define-fun b$36$$35$$35$415 () Bool (= lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d n$35$$35$a1Ml))
(define-fun b$36$$35$$35$447 () Bool (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n ds_d2Vy))
(define-fun b$36$$35$$35$479 () Bool (= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v ds_d2Vk))
(define-fun b$36$$35$$35$639 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2T6))
(define-fun b$36$$35$$35$671 () Bool (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h ds_d2SR))
(define-fun b$36$$35$$35$799 () Bool (= lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 0))
(define-fun b$36$$35$$35$831 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0)))
(define-fun b$36$$35$$35$863 () Bool (= fix$36$$36$krep_a20k (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20g) fix$36$$36$krep_a20g)))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$704 b$36$$35$$35$131 b$36$$35$$35$707 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$709 b$36$$35$$35$198 b$36$$35$$35$710 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$713 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$717 b$36$$35$$35$110 b$36$$35$$35$718 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$722 b$36$$35$$35$724 b$36$$35$$35$725 b$36$$35$$35$726 b$36$$35$$35$87 b$36$$35$$35$727 b$36$$35$$35$728 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$1118 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$704 b$36$$35$$35$131 b$36$$35$$35$707 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$709 b$36$$35$$35$198 b$36$$35$$35$710 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$713 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$717 b$36$$35$$35$110 b$36$$35$$35$718 b$36$$35$$35$111 b$36$$35$$35$719 b$36$$35$$35$112 b$36$$35$$35$720 b$36$$35$$35$721 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$1119 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1120 b$36$$35$$35$674 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$676 b$36$$35$$35$101 b$36$$35$$35$677 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$680 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$684 b$36$$35$$35$109 b$36$$35$$35$685 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$689 b$36$$35$$35$691 b$36$$35$$35$692 b$36$$35$$35$693 b$36$$35$$35$694 b$36$$35$$35$87 b$36$$35$$35$695 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$671))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1121 b$36$$35$$35$674 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$676 b$36$$35$$35$101 b$36$$35$$35$677 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$680 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$684 b$36$$35$$35$109 b$36$$35$$35$685 b$36$$35$$35$110 b$36$$35$$35$686 b$36$$35$$35$111 b$36$$35$$35$687 b$36$$35$$35$112 b$36$$35$$35$688 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$671))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1122 b$36$$35$$35$131 b$36$$35$$35$643 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$646 b$36$$35$$35$647 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$648 b$36$$35$$35$649 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$650 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$625 b$36$$35$$35$628 b$36$$35$$35$87 b$36$$35$$35$631 b$36$$35$$35$632 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$92 b$36$$35$$35$638 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$639))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4093 Int) (lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 Int)) (and (= VV$35$$35$4093 fix$36$$36$krep_a20l) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 fix$36$$36$krep_a20l) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3913 Int) (lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 Int)) (and (= VV$35$$35$3913 fix$36$$36$krep_a20p) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 fix$36$$36$krep_a20p) (exists ((lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 VV$35$$35$F$35$$35$29))))) (exists ((VV$35$$35$3743 Int) (lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 Int)) (and (= VV$35$$35$3743 fix$36$$36$krep_a20i) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 fix$36$$36$krep_a20i) (exists ((lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4283 Int) (lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 Int)) (and (= VV$35$$35$4283 fix$36$$36$krep_a20g) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 fix$36$$36$krep_a20g) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$1123 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$839 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$841 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$910 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$914 b$36$$35$$35$916 b$36$$35$$35$917 b$36$$35$$35$918 b$36$$35$$35$87 b$36$$35$$35$919 b$36$$35$$35$90 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$9)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$640 b$36$$35$$35$641 b$36$$35$$35$642 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$1124 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$625 b$36$$35$$35$628 b$36$$35$$35$87 b$36$$35$$35$631 b$36$$35$$35$632 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$92 b$36$$35$$35$638 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$639))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4093 Int) (lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 Int)) (and (= VV$35$$35$4093 fix$36$$36$krep_a20l) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 fix$36$$36$krep_a20l) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3913 Int) (lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 Int)) (and (= VV$35$$35$3913 fix$36$$36$krep_a20p) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 fix$36$$36$krep_a20p) (exists ((lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 VV$35$$35$F$35$$35$29))))) (exists ((VV$35$$35$3743 Int) (lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 Int)) (and (= VV$35$$35$3743 fix$36$$36$krep_a20i) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 fix$36$$36$krep_a20i) (exists ((lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4283 Int) (lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 Int)) (and (= VV$35$$35$4283 fix$36$$36$krep_a20g) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 fix$36$$36$krep_a20g) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$1125 b$36$$35$$35$198 b$36$$35$$35$839 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$841 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$910 b$36$$35$$35$111 b$36$$35$$35$911 b$36$$35$$35$112 b$36$$35$$35$816 b$36$$35$$35$912 b$36$$35$$35$817 b$36$$35$$35$913 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$10)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$482 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$484 b$36$$35$$35$101 b$36$$35$$35$485 b$36$$35$$35$1126 b$36$$35$$35$198 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$488 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$87 b$36$$35$$35$472 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$475 b$36$$35$$35$92 b$36$$35$$35$478 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$479))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4093 Int) (lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 Int)) (and (= VV$35$$35$4093 fix$36$$36$krep_a20l) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 fix$36$$36$krep_a20l) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3913 Int) (lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 Int)) (and (= VV$35$$35$3913 fix$36$$36$krep_a20p) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 fix$36$$36$krep_a20p) (exists ((lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 VV$35$$35$F$35$$35$29))))) (exists ((VV$35$$35$3743 Int) (lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 Int)) (and (= VV$35$$35$3743 fix$36$$36$krep_a20i) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 fix$36$$36$krep_a20i) (exists ((lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4283 Int) (lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 Int)) (and (= VV$35$$35$4283 fix$36$$36$krep_a20g) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 fix$36$$36$krep_a20g) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$897 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$901 b$36$$35$$35$198 b$36$$35$$35$1127 b$36$$35$$35$839 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$904 b$36$$35$$35$841 b$36$$35$$35$905 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$906 b$36$$35$$35$107 b$36$$35$$35$907 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$11)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$450 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$453 b$36$$35$$35$198 b$36$$35$$35$454 b$36$$35$$35$104 b$36$$35$$35$1128 b$36$$35$$35$200 b$36$$35$$35$457 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$459 b$36$$35$$35$204 b$36$$35$$35$460 b$36$$35$$35$109 b$36$$35$$35$461 b$36$$35$$35$110 b$36$$35$$35$462 b$36$$35$$35$111 b$36$$35$$35$463 b$36$$35$$35$112 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$447))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4093 Int) (lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 Int)) (and (= VV$35$$35$4093 fix$36$$36$krep_a20l) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 fix$36$$36$krep_a20l) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0) (= lq_karg$36$VV$35$$35$4093$35$$35$k_$35$$35$4094 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3913 Int) (lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 Int)) (and (= VV$35$$35$3913 fix$36$$36$krep_a20p) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 fix$36$$36$krep_a20p) (exists ((lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329)) (= lq_karg$36$VV$35$$35$3913$35$$35$k_$35$$35$3914 VV$35$$35$F$35$$35$29))))) (exists ((VV$35$$35$3743 Int) (lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 Int)) (and (= VV$35$$35$3743 fix$36$$36$krep_a20i) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 fix$36$$36$krep_a20i) (exists ((lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= lq_karg$36$VV$35$$35$3743$35$$35$k_$35$$35$3744 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4283 Int) (lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 Int)) (and (= VV$35$$35$4283 fix$36$$36$krep_a20g) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 fix$36$$36$krep_a20g) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0) (= lq_karg$36$VV$35$$35$4283$35$$35$k_$35$$35$4284 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$897 b$36$$35$$35$898 b$36$$35$$35$131 b$36$$35$$35$899 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$900 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$839 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$1129 b$36$$35$$35$841 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$12)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$417 b$36$$35$$35$418 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$422 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$424 b$36$$35$$35$425 b$36$$35$$35$106 b$36$$35$$35$1130 b$36$$35$$35$202 b$36$$35$$35$426 b$36$$35$$35$107 b$36$$35$$35$427 b$36$$35$$35$204 b$36$$35$$35$428 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$406 b$36$$35$$35$87 b$36$$35$$35$409 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$839 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$841 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 (= VV$35$$35$F$35$$35$13 (as GHC.Err.undefined Int)) b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$87 b$36$$35$$35$90 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$863))
(push 1)
(assert (not b$35$$35$a1LZ))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$417 b$36$$35$$35$418 b$36$$35$$35$131 b$36$$35$$35$419 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$420 b$36$$35$$35$101 b$36$$35$$35$421 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$1132 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$406 b$36$$35$$35$87 b$36$$35$$35$409 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$385 b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$363 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$1133 b$36$$35$$35$110 b$36$$35$$35$366 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$372 b$36$$35$$35$374 b$36$$35$$35$87 b$36$$35$$35$375 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$95 b$36$$35$$35$159 b$36$$35$$35$383))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$363 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$1134 b$36$$35$$35$366 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$372 b$36$$35$$35$374 b$36$$35$$35$87 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$90 b$36$$35$$35$378 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$353 b$36$$35$$35$354 b$36$$35$$35$131 b$36$$35$$35$355 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$356 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$328 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$1135 b$36$$35$$35$112 b$36$$35$$35$337 b$36$$35$$35$339 b$36$$35$$35$340 b$36$$35$$35$87 b$36$$35$$35$343 b$36$$35$$35$345 b$36$$35$$35$90 b$36$$35$$35$346 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$350 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$328 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$1136 b$36$$35$$35$337 b$36$$35$$35$339 b$36$$35$$35$340 b$36$$35$$35$87 b$36$$35$$35$343 b$36$$35$$35$345 b$36$$35$$35$90 b$36$$35$$35$346 b$36$$35$$35$91 b$36$$35$$35$347 b$36$$35$$35$92 b$36$$35$$35$348 b$36$$35$$35$349 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$258 b$36$$35$$35$131 b$36$$35$$35$259 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$260 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$238 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$1137 b$36$$35$$35$241 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$87 b$36$$35$$35$247 b$36$$35$$35$249 b$36$$35$$35$90 b$36$$35$$35$250 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$254 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$131 b$36$$35$$35$100 b$36$$35$$35$164 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$104 b$36$$35$$35$200 b$36$$35$$35$106 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$204 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$238 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$241 b$36$$35$$35$1139 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$87 b$36$$35$$35$247 b$36$$35$$35$249 b$36$$35$$35$90 b$36$$35$$35$250 b$36$$35$$35$91 b$36$$35$$35$251 b$36$$35$$35$92 b$36$$35$$35$252 b$36$$35$$35$253 b$36$$35$$35$95 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
