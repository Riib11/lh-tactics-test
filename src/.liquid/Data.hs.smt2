(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.TreeN 0)) ((par () ((Data.Node (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$2 Data.TreeN) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$1 Data.TreeN)) Data.Leaf))))
(declare-datatypes ((Data.ListN2 0)) ((par () (Data.Nil2 (Data.Cons2 (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 Data.ListN2))))))
(declare-datatypes ((Data.ListN 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.ListN))))))
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3742 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun x$35$$35$a1MR () Data.N)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun xs$35$$35$a1NB () Data.ListN)
(declare-fun x_Tuple22 () Int)
(declare-fun n$35$$35$a1Md () Data.N)
(declare-fun Data.Either.Right () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a207 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun h$35$$35$a1MB () Data.N)
(declare-fun Data.Foldable.length () Int)
(declare-fun papp6 () Int)
(declare-fun x$35$$35$a1NI () Data.N)
(declare-fun x2$35$$35$a1NX () Data.N)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun xs$35$$35$a1NY () Data.ListN2)
(declare-fun m$35$$35$a1Ml () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3923 () Int)
(declare-fun ys$35$$35$a1NP () Data.ListN)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h () Str)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f () Data.ListN2)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF () Data.N)
(declare-fun ds_d2TK () Data.ListN)
(declare-fun GHC.List.splitAt () Int)
(declare-fun fst () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Data.$36$tc$39$Cons2 () Int)
(declare-fun xs$35$$35$a1MO () Data.ListN)
(declare-fun snd () Int)
(declare-fun lq_tmp$36$x$35$$35$1834 () Data.N)
(declare-fun GHC.List.repeat () Int)
(declare-fun n$35$$35$a1Mr () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s () Data.ListN)
(declare-fun GHC.List.break () Int)
(declare-fun lq_tmp$36$x$35$$35$2477 () Data.N)
(declare-fun Data.leN () Int)
(declare-fun lq_tmp$36$x$35$$35$4893 () Data.ListN)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4198 () Int)
(declare-fun Data.addN () Int)
(declare-fun ds_d2WW () Data.N)
(declare-fun ds_d2SS () Data.ListN2)
(declare-fun lq_karg$36$VV$35$$35$3775$35$$35$k_$35$$35$3776 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$VV$35$$35$4125$35$$35$k_$35$$35$4126 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun fix$36$$36$krep_a20J () Int)
(declare-fun ys$35$$35$a1NZ () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B () Str)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun l$35$$35$a1MW () Data.ListN)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun Data.lengthListN () Int)
(declare-fun t$35$$35$a1N4 () Data.ListN)
(declare-fun lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN () Str)
(declare-fun ds_d2U8 () Data.ListN)
(declare-fun ds_d2XM () Data.ListN)
(declare-fun h$35$$35$a1N5 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI () Data.N)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN () Str)
(declare-fun lit$36$N () Str)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun ds_d2Tq () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a () Data.ListN2)
(declare-fun f$35$$35$a1MP () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1YE () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1ZE () Int)
(declare-fun lit$36$$39$Nil2 () Str)
(declare-fun xs$35$$35$a1Nn () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_tmp$36$x$35$$35$4293 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_tmp$36$x$35$$35$2718 () Data.ListN)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun x$35$$35$a1NE () Data.N)
(declare-fun l1$35$$35$a1MC () Data.ListN)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Data.initListN () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun ys$35$$35$a1NL () Data.ListN)
(declare-fun n$35$$35$a1Mc () Data.N)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 () Data.ListN2)
(declare-fun lq_tmp$36$x$35$$35$4586 () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun Data.check () Int)
(declare-fun ds_d2WA () Data.N)
(declare-fun papp1 () Int)
(declare-fun ds_d2TZ () Data.ListN)
(declare-fun y$35$$35$a1NO () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M () Int)
(declare-fun x2$35$$35$a1Na () Data.N)
(declare-fun m$35$$35$a1Mu () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3869$35$$35$k_$35$$35$3870 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805085$35$$35$d2Zf () Str)
(declare-fun Data.zipConcatListN () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun q$35$$35$a1M9 () Bool)
(declare-fun papp4 () Int)
(declare-fun ds_d2XC () Data.ListN)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1957 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb () Data.N)
(declare-fun Data.insertListN () Int)
(declare-fun ds_d2Ui () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$40 () Str)
(declare-fun Data.$36$tc$39$Node () Int)
(declare-fun Data.reverseListN () Int)
(declare-fun x1$35$$35$a1O4 () Data.N)
(declare-fun lq_karg$36$VV$35$$35$4197$35$$35$k_$35$$35$4198 () Int)
(declare-fun lq_tmp$36$x$35$$35$2539 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H () Int)
(declare-fun lq_tmp$36$x$35$$35$3529 () Data.ListN2)
(declare-fun fix$36$$36$krep_a20F () Int)
(declare-fun ds_d2VR () Data.ListN)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4663 () Int)
(declare-fun l2$35$$35$a1MA () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3169 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$3170 () Data.ListN)
(declare-fun ds_d2Vw () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805264$35$$35$d328 () Int)
(declare-fun lq_tmp$36$x$35$$35$4307 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ () Data.N)
(declare-fun GHC.Base.. () Int)
(declare-fun fix$36$$36$krep_a20C () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 () Int)
(declare-fun lit$36$Z () Str)
(declare-fun fix$36$$36$cshowList$35$$35$a1ZK () Int)
(declare-fun r$35$$35$a1Ob () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r () Str)
(declare-fun Data.posit () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e () Int)
(declare-fun Proof.trivial () Int)
(declare-fun h$35$$35$a1MZ () Data.N)
(declare-fun lq_tmp$36$x$35$$35$4545 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Str)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun ds_d2W5 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx () Data.N)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun Data.$36$fEqListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 () Data.N)
(declare-fun xs$35$$35$a1NQ () Data.ListN2)
(declare-fun fix$36$$36$krep_a20H () Int)
(declare-fun lq_tmp$36$x$35$$35$4117 () Int)
(declare-fun n$35$$35$a1Mw () Data.N)
(declare-fun ds_d2Sq () Data.TreeN)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Zc () Int)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$91$44$1$41$$45$$40$93$44$51$41$$124$function$32$takeListN () Str)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun t$35$$35$a1N6 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3912 () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4050 () Int)
(declare-fun x1$35$$35$a1NS () Data.N)
(declare-fun lit$36$$39$Leaf () Str)
(declare-fun xs$35$$35$a1O8 () Data.ListN2)
(declare-fun lq_karg$36$VV$35$$35$4662$35$$35$k_$35$$35$4663 () Int)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun lit$36$$39$Nil () Str)
(declare-fun ds_d2Wh () Data.ListN)
(declare-fun m$35$$35$a1My () Data.N)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lit$36$$39$Cons2 () Str)
(declare-fun n$35$$35$a1Mj () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun Data.implies () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun lq_tmp$36$x$35$$35$2194 () Data.ListN)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1474 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1575 () Data.ListN)
(declare-fun ds_d2SL () Data.ListN2)
(declare-fun n$35$$35$a1N1 () Data.N)
(declare-fun ds_d2TS () Data.ListN)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805087$35$$35$d2Zh () Data.N)
(declare-fun lq_tmp$36$x$35$$35$5172 () Data.ListN)
(declare-fun Data.concatListN () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u () Int)
(declare-fun n$35$$35$a1NV () Data.N)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805173$35$$35$d30F () Data.ListN)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun ds_d2WO () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y () Data.N)
(declare-fun a$35$$35$a1Mb () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$2824 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e () Data.N)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Str)
(declare-fun h$35$$35$a1MF () Data.N)
(declare-fun Data.$36$tc$39$Nil2 () Int)
(declare-fun Data.$36$tc$39$Cons () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE () Data.N)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG () Data.N)
(declare-fun lit$36$ListN2 () Str)
(declare-fun Data.$36$tcN () Int)
(declare-fun Data.takeListN2 () Int)
(declare-fun t$35$$35$a1NA () Data.ListN)
(declare-fun x$35$$35$a1Nm () Data.N)
(declare-fun ds_d2Vp () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805195$35$$35$d311 () Str)
(declare-fun x1$35$$35$a1O6 () Data.N)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3776 () Int)
(declare-fun Data.lastListN () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1YT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805197$35$$35$d313 () Data.N)
(declare-fun fix$36$$36$krep_a20D () Int)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K () Data.ListN)
(declare-fun r$35$$35$a1Oe () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv () Data.N)
(declare-fun charX () Int)
(declare-fun Data.sortListN () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Str)
(declare-fun Data.n_to_int () Int)
(declare-fun Data.leqN () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_tmp$36$x$35$$35$4619 () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2 () Str)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun fix$36$$36$krep_a20A () Int)
(declare-fun x$35$$35$a1Ns () Data.N)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3672 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL () Data.N)
(declare-fun fix$36$$36$cshow$35$$35$a20j () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH () Str)
(declare-fun GHC.List.scanl () Int)
(declare-fun h$35$$35$a1MX () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f () Int)
(declare-fun ds_d2Un () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$47 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d () Data.N)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a20p () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$51 () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Zk () Int)
(declare-fun lq_tmp$36$x$35$$35$3767 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun isJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o () Int)
(declare-fun t$35$$35$a1N0 () Data.ListN)
(declare-fun l$35$$35$a1Oa () Data.TreeN)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lit$36$$39$Node () Str)
(declare-fun GHC.List.span () Int)
(declare-fun VV$35$$35$F$35$$35$48 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2924 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1419 () Data.N)
(declare-fun Data.lengthListN_int () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun n$35$$35$a1Nj () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1302 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i () Int)
(declare-fun fix$36$$36$krep_a20K () Int)
(declare-fun Data.lastListN$39$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805086$35$$35$d2Zg () Data.N)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun y$35$$35$a1Nx () Data.N)
(declare-fun GHC.List.zipWith () Int)
(declare-fun f$35$$35$a1ML () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N () Int)
(declare-fun Data.singletonListN2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k () Int)
(declare-fun l$35$$35$a1Od () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za () Data.N)
(declare-fun n$35$$35$a1MT () Data.N)
(declare-fun ds_d2WV () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805261$35$$35$d325 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 () Int)
(declare-fun ds_d2SR () Data.N)
(declare-fun len () Int)
(declare-fun lit$36$undefined () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze () Data.N)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805263$35$$35$d327 () Str)
(declare-fun ds_d2UD () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805262$35$$35$d326 () Int)
(declare-fun n$35$$35$a1Mo () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV () Data.N)
(declare-fun Data.$36$tc$39$Leaf () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r () Int)
(declare-fun Proof.$38$$38$$38$ () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Str)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun fldList () Int)
(declare-fun lq_tmp$36$x$35$$35$3549 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2302 () Data.ListN)
(declare-fun ds_d2Vd () Data.ListN)
(declare-fun x2$35$$35$a1O1 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t () Int)
(declare-fun lq_karg$36$VV$35$$35$3699$35$$35$k_$35$$35$3700 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z () Str)
(declare-fun ds_d2Wm () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805172$35$$35$d30E () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X () Data.ListN2)
(declare-fun lq_tmp$36$x$35$$35$3110 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$3312 () Data.ListN2)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4126 () Int)
(declare-fun lq_karg$36$b$35$$35$a1Ma$35$$35$k_$35$$35$4663 () Bool)
(declare-fun ds_d2VD () Data.N)
(declare-fun Proof.use () Int)
(declare-fun Data.takeListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O () Str)
(declare-fun Data.zipListN () Int)
(declare-fun Data.heightTreeN () Int)
(declare-fun Data.$36$tc$39$Nil () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_tmp$36$x$35$$35$3467 () Data.ListN2)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3700 () Int)
(declare-fun Data.lastOfTwo () Int)
(declare-fun lit$36$ListN () Str)
(declare-fun lq_tmp$36$x$35$$35$3937 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 () Data.N)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3870 () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4008 () Int)
(declare-fun Data.$36$tc$39$S () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4282 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M () Str)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun m$35$$35$a1Mq () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K () Int)
(declare-fun x$35$$35$a1No () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O () Int)
(declare-fun Data.countListN () Int)
(declare-fun Data.dropListN2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805083$35$$35$d2Zd () Str)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lit$36$Nil () Str)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun fix$36$$36$krep_a20z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W () Str)
(declare-fun lq_karg$36$VV$35$$35$4315$35$$35$k_$35$$35$4316 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN () Str)
(declare-fun ds_d2Y9 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun n$35$$35$a1ME () Data.N)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 () Int)
(declare-fun ds_d2SC () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805175$35$$35$d30H () Data.N)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 () Int)
(declare-fun lq_tmp$36$x$35$$35$2469 () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Yh () Int)
(declare-fun Data.takeWhileListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J () Data.ListN)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1ZS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U () Int)
(declare-fun lq_tmp$36$x$35$$35$4580 () Int)
(declare-fun lq_karg$36$VV$35$$35$3945$35$$35$k_$35$$35$3946 () Int)
(declare-fun l$35$$35$a1MG () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3671$35$$35$k_$35$$35$3672 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun fix$36$$36$krep_a20G () Int)
(declare-fun ds_d2Ta () Data.N)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Yw () Int)
(declare-fun Data.$36$tcListN2 () Int)
(declare-fun lq_tmp$36$x$35$$35$3168 () Data.ListN)
(declare-fun lit$36$$39$Cons () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$41 () Str)
(declare-fun Data.deleteListN () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$5010 () Data.ListN)
(declare-fun ds_d2V3 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN () Str)
(declare-fun x$35$$35$a1MN () Data.N)
(declare-fun lit$36$$39$Z () Str)
(declare-fun n$35$$35$a1Ms () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun Data.$36$fEqTreeN () Int)
(declare-fun head () Int)
(declare-fun x2$35$$35$a1NT () Data.N)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X () Int)
(declare-fun t$35$$35$a1Nr () Data.ListN)
(declare-fun Data.constant () Int)
(declare-fun x1$35$$35$a1NW () Data.N)
(declare-fun lit$36$src$47$Data.hs$58$$40$97$44$1$41$$45$$40$99$44$42$41$$124$function$32$dropListN () Str)
(declare-fun cast_as () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 () Data.N)
(declare-fun Data.reverseListN2 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun ds_d2TJ () Data.ListN)
(declare-fun ds_d2V8 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1259 () Int)
(declare-fun t$35$$35$a1MY () Data.ListN)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz () Data.N)
(declare-fun xs$35$$35$a1NU () Data.ListN2)
(declare-fun fix$36$$36$krep_a20L () Int)
(declare-fun Data.singletonListN () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_karg$36$VV$35$$35$4049$35$$35$k_$35$$35$4050 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lit$36$src$47$Data.hs () Str)
(declare-fun lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN () Str)
(declare-fun lit$36$TreeN () Str)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4316 () Int)
(declare-fun ys$35$$35$a1Ny () Data.ListN)
(declare-fun lit$36$Data () Str)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun p$35$$35$a1M8 () Bool)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun fix$36$$36$krep_a20I () Int)
(declare-fun m$35$$35$a1Me () Data.N)
(declare-fun n$35$$35$a1Mv () Data.N)
(declare-fun l$35$$35$a1MK () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2142 () Data.N)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun n$35$$35$a1NR () Data.N)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_karg$36$VV$35$$35$3827$35$$35$k_$35$$35$3828 () Int)
(declare-fun ds_d2Y5 () Data.N)
(declare-fun n$35$$35$a1MI () Data.N)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun ys$35$$35$a1Nf () Data.ListN)
(declare-fun x2$35$$35$a1O7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB () Data.N)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4092 () Int)
(declare-fun ds_d2UY () Data.ListN)
(declare-fun Data.minN () Int)
(declare-fun lq_karg$36$VV$35$$35$4387$35$$35$k_$35$$35$4388 () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4388 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s () Str)
(declare-fun lq_karg$36$VV$35$$35$4007$35$$35$k_$35$$35$4008 () Int)
(declare-fun ds_d2Tp () Data.ListN)
(declare-fun y$35$$35$a1Ne () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P () Int)
(declare-fun h$35$$35$a1MJ () Data.N)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun ds_d2Y0 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R () Int)
(declare-fun xs$39$$39$$35$$35$a1Nb () Data.ListN)
(declare-fun Proof.$61$$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R () Str)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m () Int)
(declare-fun h$35$$35$a1Nq () Data.N)
(declare-fun xs$35$$35$a1NJ () Data.ListN)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$4240 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun Data.mirrorTreeN () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun papp5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A () Int)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3828 () Int)
(declare-fun Data.subN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2 () Str)
(declare-fun y$35$$35$a1NK () Data.N)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun Data.dropWhileListN () Int)
(declare-fun Data.concatListN2 () Int)
(declare-fun h$35$$35$a1Nz () Data.N)
(declare-fun Data.initConcatListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805176$35$$35$d30I () Data.ListN)
(declare-fun ys$35$$35$a1NH () Data.ListN)
(declare-fun lit$36$Cons$32$ () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E () Int)
(declare-fun n$35$$35$a1Mg () Data.N)
(declare-fun GHC.List.init () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Z1 () Int)
(declare-fun Data.maxN () Int)
(declare-fun x$35$$35$a1Oc () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G () Str)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 () Str)
(declare-fun ds_d2Uw () Data.ListN)
(declare-fun lit$36$$39$S () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b () Str)
(declare-fun n$35$$35$a1Mz () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 () Data.N)
(declare-fun Data.$36$tcListN () Int)
(declare-fun x$35$$35$a1N7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805115$35$$35$d2ZJ () Str)
(declare-fun Data.sortedListN () Int)
(declare-fun Proof.by () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_tmp$36$x$35$$35$4543 () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Str)
(declare-fun Data.nullListN () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_tmp$36$x$35$$35$4103 () Int)
(declare-fun lq_tmp$36$x$35$$35$1250 () Bool)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun h$35$$35$a1Ng () Data.N)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun fix$36$$36$krep_a20E () Int)
(declare-fun m$35$$35$a1Mi () Data.N)
(declare-fun ds_d2VQ () Data.N)
(declare-fun Data.$36$fShowN () Int)
(declare-fun lq_tmp$36$x$35$$35$2400 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2478 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805257$35$$35$d321 () Str)
(declare-fun GHC.Classes.min () Int)
(declare-fun b$35$$35$a1Ma () Bool)
(declare-fun Data.$36$fEqN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805256$35$$35$d320 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_tmp$36$x$35$$35$4544 () Int)
(declare-fun Data.$36$fEqListN2 () Int)
(declare-fun lq_tmp$36$x$35$$35$5084 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$44 () Str)
(declare-fun x$35$$35$a1O9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p () Str)
(declare-fun xs$35$$35$a1O2 () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S () Int)
(declare-fun Data.$36$trModule () Int)
(declare-fun fromJust () Int)
(declare-fun x1$35$$35$a1O0 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU () Str)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun ds_d2UM () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W () Int)
(declare-fun fix$36$$36$krep_a20B () Int)
(declare-fun ds_d2Xx () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L () Data.ListN)
(declare-fun lit$36$S$32$ () Str)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx () Str)
(declare-fun xs$35$$35$a1Nv () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a () Data.N)
(declare-fun h$35$$35$a1MV () Data.N)
(declare-fun Data.$36$fShowListN () Int)
(declare-fun Data.dropListN () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$49 () Str)
(declare-fun GHC.Err.undefined () Int)
(declare-fun Data.ins1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x () Int)
(declare-fun ds_d2TI () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM () Data.N)
(declare-fun Data.elemListN () Int)
(declare-fun n$35$$35$a1Nk () Data.N)
(declare-fun VV$35$$35$F$35$$35$50 () Str)
(declare-fun fix$36$$36$dIP_a1Yd () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_karg$36$VV$35$$35$4239$35$$35$k_$35$$35$4240 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun ds_d2XN () Data.N)
(declare-fun x2$35$$35$a1O5 () Data.N)
(declare-fun y$35$$35$a1NG () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805140$35$$35$d308 () Data.ListN)
(declare-fun Data.$36$tc$39$Z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C () Data.ListN)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 () Data.ListN2)
(declare-fun autolen () Int)
(declare-fun b$35$$35$a1M7 () Bool)
(declare-fun n$35$$35$a1Mk () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805196$35$$35$d312 () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lq_tmp$36$x$35$$35$3753 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1ZZ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$2558 () Data.ListN)
(declare-fun h$35$$35$a1N3 () Data.N)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun xs$35$$35$a1MS () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O () Data.ListN)
(declare-fun x$35$$35$a1Nc () Data.N)
(declare-fun ds_d2VE () Data.ListN)
(declare-fun ds_d2Xk () Data.ListN)
(declare-fun lq_karg$36$Data.check$35$$35$k_$35$$35$3946 () Int)
(declare-fun n$35$$35$a1Mn () Data.N)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q () Int)
(declare-fun Data.$36$tcTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n () Str)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Str)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$2557 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW () Str)
(declare-fun Proof.QED () Int)
(declare-fun ds_d2Wc () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W () Data.N)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun ds_d2Xd () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy () Str)
(declare-fun VV$35$$35$F$35$$35$37 () Str)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 () Int)
(declare-fun ds_d2Vj () Data.ListN)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$39 (Int Data.ListN) Data.TreeN)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Data.ListN)
(declare-fun apply$35$$35$35 (Int Data.ListN) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int Bool) Data.N)
(declare-fun apply$35$$35$23 (Int Str) Data.TreeN)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$56 (Int Data.TreeN) Int)
(declare-fun apply$35$$35$7 (Int Int) Data.TreeN)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int Str) Data.ListN2)
(declare-fun apply$35$$35$54 (Int Data.N) Data.N)
(declare-fun apply$35$$35$46 (Int Data.ListN2) Data.N)
(declare-fun apply$35$$35$53 (Int Data.N) Data.ListN2)
(declare-fun apply$35$$35$45 (Int Data.ListN2) Data.ListN2)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Data.ListN) Data.ListN)
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) Data.TreeN)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.ListN)
(declare-fun apply$35$$35$32 (Int Data.ListN) Int)
(declare-fun apply$35$$35$12 (Int Bool) Data.ListN)
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$13 (Int Bool) Data.ListN2)
(declare-fun apply$35$$35$62 (Int Data.TreeN) Data.N)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Data.ListN2)
(declare-fun apply$35$$35$47 (Int Data.ListN2) Data.TreeN)
(declare-fun apply$35$$35$55 (Int Data.N) Data.TreeN)
(declare-fun apply$35$$35$22 (Int Str) Data.N)
(declare-fun apply$35$$35$40 (Int Data.ListN2) Int)
(declare-fun apply$35$$35$48 (Int Data.N) Int)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int Data.ListN2) Data.ListN)
(declare-fun apply$35$$35$52 (Int Data.N) Data.ListN)
(declare-fun apply$35$$35$37 (Int Data.ListN) Data.ListN2)
(declare-fun apply$35$$35$57 (Int Data.TreeN) Bool)
(declare-fun apply$35$$35$60 (Int Data.TreeN) Data.ListN)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$33 (Int Data.ListN) Bool)
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$42 (Int Data.ListN2) Str)
(declare-fun apply$35$$35$50 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$59 (Int Data.TreeN) (_ BitVec 32))
(declare-fun apply$35$$35$63 (Int Data.TreeN) Data.TreeN)
(declare-fun apply$35$$35$20 (Int Str) Data.ListN)
(declare-fun apply$35$$35$58 (Int Data.TreeN) Str)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$41 (Int Data.ListN2) Bool)
(declare-fun apply$35$$35$49 (Int Data.N) Bool)
(declare-fun apply$35$$35$34 (Int Data.ListN) Str)
(declare-fun apply$35$$35$61 (Int Data.TreeN) Data.ListN2)
(declare-fun apply$35$$35$43 (Int Data.ListN2) (_ BitVec 32))
(declare-fun apply$35$$35$51 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$15 (Int Bool) Data.TreeN)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$6 (Int Int) Data.N)
(declare-fun apply$35$$35$5 (Int Int) Data.ListN2)
(declare-fun apply$35$$35$38 (Int Data.ListN) Data.N)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$39 (Data.ListN) Data.TreeN)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Data.ListN)
(declare-fun coerce$35$$35$35 (Data.ListN) (_ BitVec 32))
(declare-fun coerce$35$$35$14 (Bool) Data.N)
(declare-fun coerce$35$$35$23 (Str) Data.TreeN)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$56 (Data.TreeN) Int)
(declare-fun coerce$35$$35$7 (Int) Data.TreeN)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$21 (Str) Data.ListN2)
(declare-fun coerce$35$$35$54 (Data.N) Data.N)
(declare-fun coerce$35$$35$46 (Data.ListN2) Data.N)
(declare-fun coerce$35$$35$53 (Data.N) Data.ListN2)
(declare-fun coerce$35$$35$45 (Data.ListN2) Data.ListN2)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Data.ListN) Data.ListN)
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) Data.TreeN)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.ListN)
(declare-fun coerce$35$$35$32 (Data.ListN) Int)
(declare-fun coerce$35$$35$12 (Bool) Data.ListN)
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$13 (Bool) Data.ListN2)
(declare-fun coerce$35$$35$62 (Data.TreeN) Data.N)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Data.ListN2)
(declare-fun coerce$35$$35$47 (Data.ListN2) Data.TreeN)
(declare-fun coerce$35$$35$55 (Data.N) Data.TreeN)
(declare-fun coerce$35$$35$22 (Str) Data.N)
(declare-fun coerce$35$$35$40 (Data.ListN2) Int)
(declare-fun coerce$35$$35$48 (Data.N) Int)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 (Data.ListN2) Data.ListN)
(declare-fun coerce$35$$35$52 (Data.N) Data.ListN)
(declare-fun coerce$35$$35$37 (Data.ListN) Data.ListN2)
(declare-fun coerce$35$$35$57 (Data.TreeN) Bool)
(declare-fun coerce$35$$35$60 (Data.TreeN) Data.ListN)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$33 (Data.ListN) Bool)
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$42 (Data.ListN2) Str)
(declare-fun coerce$35$$35$50 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$59 (Data.TreeN) (_ BitVec 32))
(declare-fun coerce$35$$35$63 (Data.TreeN) Data.TreeN)
(declare-fun coerce$35$$35$20 (Str) Data.ListN)
(declare-fun coerce$35$$35$58 (Data.TreeN) Str)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$41 (Data.ListN2) Bool)
(declare-fun coerce$35$$35$49 (Data.N) Bool)
(declare-fun coerce$35$$35$34 (Data.ListN) Str)
(declare-fun coerce$35$$35$61 (Data.TreeN) Data.ListN2)
(declare-fun coerce$35$$35$43 (Data.ListN2) (_ BitVec 32))
(declare-fun coerce$35$$35$51 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$15 (Bool) Data.TreeN)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$6 (Int) Data.N)
(declare-fun coerce$35$$35$5 (Int) Data.ListN2)
(declare-fun coerce$35$$35$38 (Data.ListN) Data.N)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$39 (Data.ListN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Data.ListN) Int)
(declare-fun smt_lambda$35$$35$35 (Data.ListN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$23 (Str Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$56 (Data.TreeN Int) Int)
(declare-fun smt_lambda$35$$35$7 (Int Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 (Str Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$54 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$46 (Data.ListN2 Data.N) Int)
(declare-fun smt_lambda$35$$35$53 (Data.N Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$45 (Data.ListN2 Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Data.ListN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.ListN) Int)
(declare-fun smt_lambda$35$$35$32 (Data.ListN Int) Int)
(declare-fun smt_lambda$35$$35$12 (Bool Data.ListN) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$13 (Bool Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$62 (Data.TreeN Data.N) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$47 (Data.ListN2 Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$55 (Data.N Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$22 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$40 (Data.ListN2 Int) Int)
(declare-fun smt_lambda$35$$35$48 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 (Data.ListN2 Data.ListN) Int)
(declare-fun smt_lambda$35$$35$52 (Data.N Data.ListN) Int)
(declare-fun smt_lambda$35$$35$37 (Data.ListN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$57 (Data.TreeN Bool) Int)
(declare-fun smt_lambda$35$$35$60 (Data.TreeN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$33 (Data.ListN Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$42 (Data.ListN2 Str) Int)
(declare-fun smt_lambda$35$$35$50 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$59 (Data.TreeN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$63 (Data.TreeN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$20 (Str Data.ListN) Int)
(declare-fun smt_lambda$35$$35$58 (Data.TreeN Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$41 (Data.ListN2 Bool) Int)
(declare-fun smt_lambda$35$$35$49 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.ListN Str) Int)
(declare-fun smt_lambda$35$$35$61 (Data.TreeN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$43 (Data.ListN2 (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$51 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$38 (Data.ListN Data.N) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$2$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$3$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$4$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$5$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$6$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$7$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$1$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$2$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$3$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$4$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$5$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$6$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$7$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$2$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$3$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$4$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$5$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$6$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$7$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$1$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx lit$36$S$32$ lit$36$$39$S lit$36$Cons$32$ lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2 lit$36$Data lit$36$TreeN lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN lit$36$src$47$Data.hs lit$36$src$47$Data.hs$58$$40$97$44$1$41$$45$$40$99$44$42$41$$124$function$32$dropListN lit$36$$39$Z lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN lit$36$$39$Cons lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN lit$36$Nil lit$36$ListN lit$36$undefined lit$36$$39$Node lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2 lit$36$ListN2 lit$36$$39$Cons2 lit$36$$39$Nil lit$36$$39$Leaf lit$36$src$47$Data.hs$58$$40$91$44$1$41$$45$$40$93$44$51$41$$124$function$32$takeListN lit$36$Z lit$36$$39$Nil2 lit$36$N lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive))



(assert (distinct GHC.Types.False GHC.Types.True))





(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))




(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN) 46))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN) 40))
(assert (= (strLen lit$36$N) 1))
(assert (= (strLen lit$36$$39$Nil2) 5))
(assert (= (strLen lit$36$Z) 1))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$91$44$1$41$$45$$40$93$44$51$41$$124$function$32$takeListN) 45))
(assert (= (strLen lit$36$$39$Leaf) 5))
(assert (= (strLen lit$36$$39$Nil) 4))
(assert (= (strLen lit$36$$39$Cons2) 6))
(assert (= (strLen lit$36$ListN2) 6))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2) 48))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$undefined) 9))
(assert (= (strLen lit$36$ListN) 5))
(assert (= (strLen lit$36$Nil) 3))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN) 39))
(assert (= (strLen lit$36$$39$Cons) 5))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN) 40))
(assert (= (strLen lit$36$$39$Z) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$97$44$1$41$$45$$40$99$44$42$41$$124$function$32$dropListN) 45))
(assert (= (strLen lit$36$src$47$Data.hs) 11))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN) 40))
(assert (= (strLen lit$36$TreeN) 5))
(assert (= (strLen lit$36$Data) 4))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2) 48))
(assert (= (strLen lit$36$Cons$32$) 5))
(assert (= (strLen lit$36$$39$S) 2))
(assert (= (strLen lit$36$S$32$) 2))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx) 46))
(push 1)
(define-fun b$36$$35$$35$1120 () Bool (and (= VV$35$$35$F$35$$35$37 lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$37 lq_anf$36$$35$$35$7205759403792805203$35$$35$d319)))
(define-fun b$36$$35$$35$1152 () Bool (= VV$35$$35$F$35$$35$30 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$256 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc)) (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc ds_d2XN) (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc (Data.S m$35$$35$a1Mi)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc) m$35$$35$a1Mi)))
(define-fun b$36$$35$$35$352 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx)) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2WV) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx (Data.S m$35$$35$a1Mq)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) m$35$$35$a1Mq)))
(define-fun b$36$$35$$35$384 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI)) (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI Data.Z) (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI n$35$$35$a1Ms)))
(define-fun b$36$$35$$35$640 () Bool (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L ds_d2Tp))
(define-fun b$36$$35$$35$704 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2SR))
(define-fun b$36$$35$$35$864 () Bool (= fix$36$$36$krep_a20C (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20z) fix$36$$36$krep_a20D)))
(define-fun b$36$$35$$35$1121 () Bool (and (= VV$35$$35$F$35$$35$38 lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792805195$35$$35$d311)))
(define-fun b$36$$35$$35$1153 () Bool (= VV$35$$35$F$35$$35$31 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) fix$36$$36$krep_a20L)))
(define-fun b$36$$35$$35$257 () Bool (= lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze n$35$$35$a1Mg))
(define-fun b$36$$35$$35$353 () Bool (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz ds_d2WW))
(define-fun b$36$$35$$35$385 () Bool (= lq_anf$36$$35$$35$7205759403792805115$35$$35$d2ZJ lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$417 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS)) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS n$35$$35$a1Mw) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS (Data.S lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY)))
(define-fun b$36$$35$$35$641 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L)) (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L Data.Nil) (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L ds_d2Tp)))
(define-fun b$36$$35$$35$801 () Bool (= lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J 8549016032701946343))
(define-fun b$36$$35$$35$833 () Bool (= lq_anf$36$$35$$35$7205759403792805261$35$$35$d325 17514001072161352203))
(define-fun b$36$$35$$35$865 () Bool (= fix$36$$36$krep_a20A (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20B) fix$36$$36$krep_a20C)))
(define-fun b$36$$35$$35$897 () Bool (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O ds_d2V8))
(define-fun b$36$$35$$35$1122 () Bool (and (= VV$35$$35$F$35$$35$39 lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$39 lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z)))
(define-fun b$36$$35$$35$162 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$258 () Bool (= lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze n$35$$35$a1Mg))
(define-fun b$36$$35$$35$354 () Bool (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz ds_d2WW))
(define-fun b$36$$35$$35$418 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT ds_d2Wm))
(define-fun b$36$$35$$35$450 () Bool (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2VR))
(define-fun b$36$$35$$35$482 () Bool (= lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a ds_d2VD))
(define-fun b$36$$35$$35$642 () Bool (= lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$674 () Bool (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W ds_d2Ta))
(define-fun b$36$$35$$35$802 () Bool (= lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K 5512001040859239703))
(define-fun b$36$$35$$35$834 () Bool (= lq_anf$36$$35$$35$7205759403792805262$35$$35$d326 12720842684549174125))
(define-fun b$36$$35$$35$866 () Bool (= lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q 16314774540632496181))
(define-fun b$36$$35$$35$898 () Bool (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O ds_d2V8))
(define-fun b$36$$35$$35$99 () Bool (= Data.Nil Data.Nil))
(define-fun b$36$$35$$35$1123 () Bool (and (= VV$35$$35$F$35$$35$40 lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$40 lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O)))
(define-fun b$36$$35$$35$259 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze)) (= lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze Data.Z) (= lq_anf$36$$35$$35$7205759403792805084$35$$35$d2Ze n$35$$35$a1Mg)))
(define-fun b$36$$35$$35$355 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz)) (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz Data.Z) (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz ds_d2WW)))
(define-fun b$36$$35$$35$419 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT ds_d2Wm))
(define-fun b$36$$35$$35$643 () Bool (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L ds_d2Tp))
(define-fun b$36$$35$$35$707 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2SR))
(define-fun b$36$$35$$35$803 () Bool (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L lit$36$ListN))
(define-fun b$36$$35$$35$835 () Bool (= lq_anf$36$$35$$35$7205759403792805263$35$$35$d327 lit$36$$39$Nil2))
(define-fun b$36$$35$$35$867 () Bool (= lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r 3295243446596530206))
(define-fun b$36$$35$$35$899 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O)) (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O Data.Nil) (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O ds_d2V8)))
(define-fun b$36$$35$$35$100 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$1124 () Bool (and (= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X)) (= VV$35$$35$F$35$$35$9 (+ lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X))))
(define-fun b$36$$35$$35$196 () Bool (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(define-fun b$36$$35$$35$260 () Bool (= lq_anf$36$$35$$35$7205759403792805085$35$$35$d2Zf lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$356 () Bool (= lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$420 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT)) (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT Data.Z) (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT ds_d2Wm)))
(define-fun b$36$$35$$35$484 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a)) (= lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a ds_d2VD) (= lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a (Data.S n$35$$35$a1MI)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a) n$35$$35$a1MI)))
(define-fun b$36$$35$$35$676 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W ds_d2Ta) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (Data.S lq_anf$36$$35$$35$7205759403792805199$35$$35$d315)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) lq_anf$36$$35$$35$7205759403792805199$35$$35$d315)))
(define-fun b$36$$35$$35$804 () Bool (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(define-fun b$36$$35$$35$836 () Bool (= lq_anf$36$$35$$35$7205759403792805264$35$$35$d328 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805263$35$$35$d327)))
(define-fun b$36$$35$$35$868 () Bool (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s lit$36$$39$Node))
(define-fun b$36$$35$$35$900 () Bool (= lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P 0))
(define-fun b$36$$35$$35$1125 () Bool (and (= VV$35$$35$F$35$$35$41 lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M)))
(define-fun b$36$$35$$35$421 () Bool (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$453 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805134$35$$35$d302) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805134$35$$35$d302)) (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2VR) (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 (Data.Cons lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302) lq_anf$36$$35$$35$7205759403792805140$35$$35$d308) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302) lq_anf$36$$35$$35$7205759403792805139$35$$35$d307)))
(define-fun b$36$$35$$35$485 () Bool (= lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b ds_d2VE))
(define-fun b$36$$35$$35$677 () Bool (= lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X xs$35$$35$a1NQ))
(define-fun b$36$$35$$35$709 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805200$35$$35$d316)) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 ds_d2SR) (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 (Data.S lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g)))
(define-fun b$36$$35$$35$805 () Bool (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N 0))
(define-fun b$36$$35$$35$837 () Bool (= lq_anf$36$$35$$35$7205759403792805265$35$$35$d329 0))
(define-fun b$36$$35$$35$869 () Bool (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)))
(define-fun b$36$$35$$35$901 () Bool (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O ds_d2V8))
(define-fun b$36$$35$$35$1126 () Bool (and (= VV$35$$35$F$35$$35$10 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U)) (= VV$35$$35$F$35$$35$10 lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U)))
(define-fun b$36$$35$$35$198 () Bool (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(define-fun b$36$$35$$35$422 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT ds_d2Wm))
(define-fun b$36$$35$$35$454 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 ds_d2VQ))
(define-fun b$36$$35$$35$486 () Bool (= lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b ds_d2VE))
(define-fun b$36$$35$$35$646 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L)) (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L ds_d2Tp) (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L (Data.Cons x$35$$35$a1NI xs$35$$35$a1NJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L) xs$35$$35$a1NJ) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L) x$35$$35$a1NI)))
(define-fun b$36$$35$$35$710 () Bool (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 ds_d2SS))
(define-fun b$36$$35$$35$774 () Bool (= lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$5KqVpietSL6K72docH0Awx))
(define-fun b$36$$35$$35$870 () Bool (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u 0))
(define-fun b$36$$35$$35$103 () Bool (= Data.$36$fEqTreeN Data.$36$fEqTreeN))
(define-fun b$36$$35$$35$1127 () Bool (and (= VV$35$$35$F$35$$35$42 lit$36$src$47$Data.hs$58$$40$97$44$1$41$$45$$40$99$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c)))
(define-fun b$36$$35$$35$487 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b)) (= lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b Data.Nil) (= lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b ds_d2VE)))
(define-fun b$36$$35$$35$647 () Bool (= lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N ds_d2Tq))
(define-fun b$36$$35$$35$775 () Bool (= lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p)))
(define-fun b$36$$35$$35$839 () Bool (= fix$36$$36$krep_a20H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20E) fix$36$$36$krep_a20E)))
(define-fun b$36$$35$$35$1128 () Bool (and (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S)) (= VV$35$$35$F$35$$35$11 (+ lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S))))
(define-fun b$36$$35$$35$200 () Bool (and (is-Data.Nil2 Data.Nil2) (not (is-Data.Cons2 Data.Nil2)) (= Data.Nil2 Data.Nil2)))
(define-fun b$36$$35$$35$328 () Bool (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2WV))
(define-fun b$36$$35$$35$424 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT)) (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT ds_d2Wm) (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT (Data.S m$35$$35$a1My)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT) m$35$$35$a1My)))
(define-fun b$36$$35$$35$488 () Bool (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c lit$36$src$47$Data.hs$58$$40$97$44$1$41$$45$$40$99$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$648 () Bool (= lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N ds_d2Tq))
(define-fun b$36$$35$$35$680 () Bool (= lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X xs$35$$35$a1NQ))
(define-fun b$36$$35$$35$776 () Bool (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r lit$36$Data))
(define-fun b$36$$35$$35$808 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0)))
(define-fun b$36$$35$$35$840 () Bool (= fix$36$$36$krep_a20G (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20B) fix$36$$36$krep_a20H)))
(define-fun b$36$$35$$35$904 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O)) (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O ds_d2V8) (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O (Data.Cons h$35$$35$a1MZ t$35$$35$a1N0)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) t$35$$35$a1N0) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) h$35$$35$a1MZ)))
(define-fun b$36$$35$$35$105 () Bool (= Data.Z Data.Z))
(define-fun b$36$$35$$35$1129 () Bool (and (= VV$35$$35$F$35$$35$43 lit$36$src$47$Data.hs$58$$40$91$44$1$41$$45$$40$93$44$51$41$$124$function$32$takeListN) (= VV$35$$35$F$35$$35$43 lq_anf$36$$35$$35$7205759403792805137$35$$35$d305)))
(define-fun b$36$$35$$35$425 () Bool (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV n$35$$35$a1Mw))
(define-fun b$36$$35$$35$457 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 ds_d2VQ))
(define-fun b$36$$35$$35$649 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N)) (= lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N Data.Nil) (= lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N ds_d2Tq)))
(define-fun b$36$$35$$35$713 () Bool (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 ds_d2SS))
(define-fun b$36$$35$$35$777 () Bool (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r)))
(define-fun b$36$$35$$35$841 () Bool (= fix$36$$36$krep_a20F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20B) fix$36$$36$krep_a20G)))
(define-fun b$36$$35$$35$905 () Bool (= lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q 1))
(define-fun b$36$$35$$35$1130 () Bool (and (= VV$35$$35$F$35$$35$12 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P)) (= VV$35$$35$F$35$$35$12 lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P)))
(define-fun b$36$$35$$35$202 () Bool (and (is-Data.Leaf Data.Leaf) (not (is-Data.Node Data.Leaf)) (= Data.Leaf Data.Leaf)))
(define-fun b$36$$35$$35$426 () Bool (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV n$35$$35$a1Mw))
(define-fun b$36$$35$$35$650 () Bool (= lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O lit$36$src$47$Data.hs$58$$40$219$44$1$41$$45$$40$221$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$810 () Bool (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P 118631242305335887))
(define-fun b$36$$35$$35$842 () Bool (= lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a 15295629790850942388))
(define-fun b$36$$35$$35$906 () Bool (and (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q)) (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q)))
(define-fun b$36$$35$$35$107 () Bool (= Data.$36$fShowN Data.$36$fShowN))
(define-fun b$36$$35$$35$1131 () Bool (and (= VV$35$$35$F$35$$35$44 lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW)))
(define-fun b$36$$35$$35$363 () Bool (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2WA))
(define-fun b$36$$35$$35$427 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV)) (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV Data.Z) (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV n$35$$35$a1Mw)))
(define-fun b$36$$35$$35$459 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805135$35$$35$d303) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805135$35$$35$d303)) (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 ds_d2VQ) (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 (Data.S n$35$$35$a1ME)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805135$35$$35$d303) n$35$$35$a1ME)))
(define-fun b$36$$35$$35$779 () Bool (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t 11637624030455169537))
(define-fun b$36$$35$$35$811 () Bool (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q 18196456003521701161))
(define-fun b$36$$35$$35$843 () Bool (= lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b 9975998482419695038))
(define-fun b$36$$35$$35$907 () Bool (and (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S (apply$35$$35$32 Data.lengthListN_int t$35$$35$a1N0)) (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S (ite (is-Data.Nil t$35$$35$a1N0) 0 (+ 1 (apply$35$$35$32 Data.lengthListN_int (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 t$35$$35$a1N0))))) (<= 0 lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S)))
(define-fun b$36$$35$$35$108 () Bool (= Data.$36$fEqN Data.$36$fEqN))
(define-fun b$36$$35$$35$428 () Bool (= lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$460 () Bool (= lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 ds_d2VR))
(define-fun b$36$$35$$35$684 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X)) (= lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X xs$35$$35$a1NQ) (= lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X (Data.Cons2 lq_anf$36$$35$$35$7205759403792805196$35$$35$d312 lq_anf$36$$35$$35$7205759403792805197$35$$35$d313 lq_anf$36$$35$$35$7205759403792805198$35$$35$d314)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X) lq_anf$36$$35$$35$7205759403792805198$35$$35$d314) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X) lq_anf$36$$35$$35$7205759403792805197$35$$35$d313) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X) lq_anf$36$$35$$35$7205759403792805196$35$$35$d312)))
(define-fun b$36$$35$$35$780 () Bool (= lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u 2962471437394586440))
(define-fun b$36$$35$$35$812 () Bool (= lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R lit$36$$39$Nil))
(define-fun b$36$$35$$35$844 () Bool (= lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c lit$36$$39$Cons2))
(define-fun b$36$$35$$35$109 () Bool (= Data.$36$fEqListN2 Data.$36$fEqListN2))
(define-fun b$36$$35$$35$1133 () Bool (and (= VV$35$$35$F$35$$35$45 lit$36$src$47$Data.hs$58$$40$73$44$1$41$$45$$40$75$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU)))
(define-fun b$36$$35$$35$461 () Bool (= lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 ds_d2VR))
(define-fun b$36$$35$$35$685 () Bool (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y ds_d2Ta))
(define-fun b$36$$35$$35$717 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317)) (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 ds_d2SS) (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 (Data.Cons2 lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317) lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317) lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805201$35$$35$d317) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d)))
(define-fun b$36$$35$$35$781 () Bool (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v lit$36$N))
(define-fun b$36$$35$$35$813 () Bool (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$845 () Bool (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c)))
(define-fun b$36$$35$$35$110 () Bool (= Data.$36$fShowListN Data.$36$fShowListN))
(define-fun b$36$$35$$35$1134 () Bool (and (= VV$35$$35$F$35$$35$46 lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$46 lq_anf$36$$35$$35$7205759403792805115$35$$35$d2ZJ)))
(define-fun b$36$$35$$35$238 () Bool (= lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za ds_d2XN))
(define-fun b$36$$35$$35$366 () Bool (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2WA))
(define-fun b$36$$35$$35$462 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805136$35$$35$d304) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805136$35$$35$d304)) (= lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 Data.Nil) (= lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 ds_d2VR)))
(define-fun b$36$$35$$35$686 () Bool (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y ds_d2Ta))
(define-fun b$36$$35$$35$718 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2SR))
(define-fun b$36$$35$$35$782 () Bool (= lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(define-fun b$36$$35$$35$814 () Bool (= lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T 0))
(define-fun b$36$$35$$35$846 () Bool (= lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e 0))
(define-fun b$36$$35$$35$910 () Bool (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T ds_d2Y5))
(define-fun b$36$$35$$35$1135 () Bool (and (= VV$35$$35$F$35$$35$47 lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH)))
(define-fun b$36$$35$$35$463 () Bool (= lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 lit$36$src$47$Data.hs$58$$40$91$44$1$41$$45$$40$93$44$51$41$$124$function$32$takeListN))
(define-fun b$36$$35$$35$687 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y)) (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y Data.Z) (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y ds_d2Ta)))
(define-fun b$36$$35$$35$719 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2SR))
(define-fun b$36$$35$$35$783 () Bool (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x 0))
(define-fun b$36$$35$$35$911 () Bool (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T ds_d2Y5))
(define-fun b$36$$35$$35$1136 () Bool (and (= VV$35$$35$F$35$$35$48 lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$48 lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA)))
(define-fun b$36$$35$$35$368 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)) (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2WA) (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE (Data.S lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE) lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM)))
(define-fun b$36$$35$$35$688 () Bool (= lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$720 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805202$35$$35$d318) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805202$35$$35$d318)) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 Data.Z) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2SR)))
(define-fun b$36$$35$$35$816 () Bool (= fix$36$$36$krep_a20K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20I) fix$36$$36$krep_a20I)))
(define-fun b$36$$35$$35$848 () Bool (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f 17901879238874314631))
(define-fun b$36$$35$$35$912 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T)) (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T Data.Z) (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T ds_d2Y5)))
(define-fun b$36$$35$$35$1137 () Bool (and (= VV$35$$35$F$35$$35$49 lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$49 lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy)))
(define-fun b$36$$35$$35$241 () Bool (= lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za ds_d2XN))
(define-fun b$36$$35$$35$337 () Bool (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2WV))
(define-fun b$36$$35$$35$369 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF n$35$$35$a1Ms))
(define-fun b$36$$35$$35$625 () Bool (= lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J ds_d2Tp))
(define-fun b$36$$35$$35$689 () Bool (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y ds_d2Ta))
(define-fun b$36$$35$$35$721 () Bool (= lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$817 () Bool (= fix$36$$36$krep_a20J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20B) fix$36$$36$krep_a20K)))
(define-fun b$36$$35$$35$849 () Bool (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g 14477644979242118319))
(define-fun b$36$$35$$35$913 () Bool (= lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U 0))
(define-fun b$36$$35$$35$1138 () Bool (and (= VV$35$$35$F$35$$35$50 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$7205759403792805085$35$$35$d2Zf)))
(define-fun b$36$$35$$35$722 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2SR))
(define-fun b$36$$35$$35$786 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$818 () Bool (= lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U 10038555432957128073))
(define-fun b$36$$35$$35$850 () Bool (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h lit$36$TreeN))
(define-fun b$36$$35$$35$914 () Bool (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T ds_d2Y5))
(define-fun b$36$$35$$35$1139 () Bool (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) fix$36$$36$krep_a20A)))
(define-fun b$36$$35$$35$243 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za)) (= lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za ds_d2XN) (= lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za (Data.S lq_anf$36$$35$$35$7205759403792805087$35$$35$d2Zh)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805080$35$$35$d2Za) lq_anf$36$$35$$35$7205759403792805087$35$$35$d2Zh)))
(define-fun b$36$$35$$35$339 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv)) (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv ds_d2WV) (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv (Data.S lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD)))
(define-fun b$36$$35$$35$691 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y)) (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y ds_d2Ta) (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y (Data.S n$35$$35$a1NR)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y) n$35$$35$a1NR)))
(define-fun b$36$$35$$35$819 () Bool (= lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V 7999532606289363418))
(define-fun b$36$$35$$35$851 () Bool (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)))
(define-fun b$36$$35$$35$1140 () Bool (and (= VV$35$$35$F$35$$35$51 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$51 lq_anf$36$$35$$35$7205759403792805083$35$$35$d2Zd)))
(define-fun b$36$$35$$35$212 () Bool b$35$$35$a1M7)
(define-fun b$36$$35$$35$244 () Bool (= lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb n$35$$35$a1Mg))
(define-fun b$36$$35$$35$340 () Bool (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw ds_d2WW))
(define-fun b$36$$35$$35$372 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF n$35$$35$a1Ms))
(define-fun b$36$$35$$35$628 () Bool (= lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J ds_d2Tp))
(define-fun b$36$$35$$35$692 () Bool (= lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 xs$35$$35$a1NQ))
(define-fun b$36$$35$$35$724 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805202$35$$35$d318) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805202$35$$35$d318)) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 ds_d2SR) (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 (Data.S n$35$$35$a1NV)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805202$35$$35$d318) n$35$$35$a1NV)))
(define-fun b$36$$35$$35$788 () Bool (= lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z 14761107768733905834))
(define-fun b$36$$35$$35$820 () Bool (= lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W lit$36$$39$Cons))
(define-fun b$36$$35$$35$852 () Bool (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j 0))
(define-fun b$36$$35$$35$916 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T)) (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T ds_d2Y5) (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T (Data.S n$35$$35$a1Mc)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T) n$35$$35$a1Mc)))
(define-fun b$36$$35$$35$1141 () Bool (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l) lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) fix$36$$36$krep_a20z)))
(define-fun b$36$$35$$35$693 () Bool (= lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 xs$35$$35$a1NQ))
(define-fun b$36$$35$$35$725 () Bool (= lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a ds_d2SS))
(define-fun b$36$$35$$35$789 () Bool (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A 14093430801328222558))
(define-fun b$36$$35$$35$821 () Bool (= lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)))
(define-fun b$36$$35$$35$917 () Bool (= lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V 1))
(define-fun b$36$$35$$35$1142 () Bool (and (= VV$35$$35$F$35$$35$52 GHC.Tuple.$40$$41$) (= VV$35$$35$F$35$$35$52 Proof.trivial)))
(define-fun b$36$$35$$35$374 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF n$35$$35$a1Ms) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF (Data.S lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL)))
(define-fun b$36$$35$$35$406 () Bool (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2Wm))
(define-fun b$36$$35$$35$694 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805194$35$$35$d310) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805194$35$$35$d310)) (= lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 xs$35$$35$a1NQ)))
(define-fun b$36$$35$$35$726 () Bool (= lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a ds_d2SS))
(define-fun b$36$$35$$35$790 () Bool (= lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B lit$36$$39$Z))
(define-fun b$36$$35$$35$822 () Bool (= lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y 0))
(define-fun b$36$$35$$35$918 () Bool (and (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V)) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V)))
(define-fun b$36$$35$$35$1143 () Bool (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)))
(define-fun b$36$$35$$35$247 () Bool (= lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb n$35$$35$a1Mg))
(define-fun b$36$$35$$35$343 () Bool (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw ds_d2WW))
(define-fun b$36$$35$$35$375 () Bool (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG ds_d2WA))
(define-fun b$36$$35$$35$631 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J)) (= lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J ds_d2Tp) (= lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J (Data.Cons lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J) lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J) lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S)))
(define-fun b$36$$35$$35$695 () Bool (= lq_anf$36$$35$$35$7205759403792805195$35$$35$d311 lit$36$src$47$Data.hs$58$$40$230$44$1$41$$45$$40$232$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$727 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a)) (= lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a ds_d2SS)))
(define-fun b$36$$35$$35$791 () Bool (= lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)))
(define-fun b$36$$35$$35$855 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0)))
(define-fun b$36$$35$$35$919 () Bool (and (= lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X (apply$35$$35$48 Data.n_to_int n$35$$35$a1Mc)) (= lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X (ite (is-Data.Z n$35$$35$a1Mc) 0 (+ 1 (apply$35$$35$48 Data.n_to_int (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a1Mc))))) (<= 0 lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X)))
(define-fun b$36$$35$$35$88 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$1144 () Bool (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$376 () Bool (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG ds_d2WA))
(define-fun b$36$$35$$35$472 () Bool (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 ds_d2VE))
(define-fun b$36$$35$$35$632 () Bool (= lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K ds_d2Tq))
(define-fun b$36$$35$$35$728 () Bool (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$792 () Bool (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D 0))
(define-fun b$36$$35$$35$824 () Bool (= lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z 5782567431922776683))
(define-fun b$36$$35$$35$1145 () Bool (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805266$35$$35$d32a) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e) fix$36$$36$krep_a20F)))
(define-fun b$36$$35$$35$249 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb)) (= lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb n$35$$35$a1Mg) (= lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb (Data.S lq_anf$36$$35$$35$7205759403792805086$35$$35$d2Zg)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805081$35$$35$d2Zb) lq_anf$36$$35$$35$7205759403792805086$35$$35$d2Zg)))
(define-fun b$36$$35$$35$345 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw)) (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw ds_d2WW) (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw (Data.S lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw) lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB)))
(define-fun b$36$$35$$35$377 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG)) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG Data.Z) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG ds_d2WA)))
(define-fun b$36$$35$$35$409 () Bool (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2Wm))
(define-fun b$36$$35$$35$825 () Bool (= lq_anf$36$$35$$35$7205759403792805256$35$$35$d320 6909690971159225123))
(define-fun b$36$$35$$35$857 () Bool (= lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l 15092994948585749360))
(define-fun b$36$$35$$35$1146 () Bool (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805261$35$$35$d325) lq_anf$36$$35$$35$7205759403792805262$35$$35$d326) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805264$35$$35$d328) lq_anf$36$$35$$35$7205759403792805265$35$$35$d329) fix$36$$36$krep_a20E)))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc ds_d2XN))
(define-fun b$36$$35$$35$346 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2WV))
(define-fun b$36$$35$$35$378 () Bool (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH lit$36$src$47$Data.hs$58$$40$67$44$1$41$$45$$40$69$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$794 () Bool (= fix$36$$36$krep_a20L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20B) fix$36$$36$krep_a20B)))
(define-fun b$36$$35$$35$826 () Bool (= lq_anf$36$$35$$35$7205759403792805257$35$$35$d321 lit$36$ListN2))
(define-fun b$36$$35$$35$858 () Bool (= lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m 16308189845438446223))
(define-fun b$36$$35$$35$91 () Bool (= Data.Leaf Data.Leaf))
(define-fun b$36$$35$$35$1115 () Bool (= VV$35$$35$F$35$$35$32 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C) lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D) fix$36$$36$krep_a20B)))
(define-fun b$36$$35$$35$1147 () Bool (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)))
(define-fun b$36$$35$$35$251 () Bool (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc ds_d2XN))
(define-fun b$36$$35$$35$347 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2WV))
(define-fun b$36$$35$$35$379 () Bool (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG ds_d2WA))
(define-fun b$36$$35$$35$411 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR)) (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR ds_d2Wm) (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR (Data.S lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ)))
(define-fun b$36$$35$$35$475 () Bool (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 ds_d2VE))
(define-fun b$36$$35$$35$635 () Bool (= lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K ds_d2Tq))
(define-fun b$36$$35$$35$795 () Bool (= lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E 12423987858577356489))
(define-fun b$36$$35$$35$827 () Bool (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805257$35$$35$d321)))
(define-fun b$36$$35$$35$859 () Bool (= lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n lit$36$$39$Leaf))
(define-fun b$36$$35$$35$92 () Bool (= Data.Nil2 Data.Nil2))
(define-fun b$36$$35$$35$1116 () Bool (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)))
(define-fun b$36$$35$$35$1148 () Bool (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805255$35$$35$d31Z) lq_anf$36$$35$$35$7205759403792805256$35$$35$d320) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) lq_anf$36$$35$$35$7205759403792805259$35$$35$d323) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$252 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc)) (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc Data.Z) (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc ds_d2XN)))
(define-fun b$36$$35$$35$348 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx)) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx Data.Z) (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2WV)))
(define-fun b$36$$35$$35$412 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS n$35$$35$a1Mw))
(define-fun b$36$$35$$35$796 () Bool (= lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F 14055370483984290301))
(define-fun b$36$$35$$35$828 () Bool (= lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 0))
(define-fun b$36$$35$$35$860 () Bool (= lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n)))
(define-fun b$36$$35$$35$93 () Bool (= Data.$36$fEqListN Data.$36$fEqListN))
(define-fun b$36$$35$$35$1117 () Bool (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$1149 () Bool (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y) fix$36$$36$krep_a20J)))
(define-fun b$36$$35$$35$157 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792805083$35$$35$d2Zd lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$349 () Bool (= lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy lit$36$src$47$Data.hs$58$$40$60$44$1$41$$45$$40$63$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$381 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG)) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG ds_d2WA) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG (Data.S m$35$$35$a1Mu)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG) m$35$$35$a1Mu)))
(define-fun b$36$$35$$35$797 () Bool (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G lit$36$$39$S))
(define-fun b$36$$35$$35$861 () Bool (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p 0))
(define-fun b$36$$35$$35$1118 () Bool (= VV$35$$35$F$35$$35$35 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s)))
(define-fun b$36$$35$$35$126 () Bool (and (= Proof.trivial GHC.Tuple.$40$$41$) (= Proof.trivial Proof.trivial)))
(define-fun b$36$$35$$35$1150 () Bool (= VV$35$$35$F$35$$35$28 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) fix$36$$36$krep_a20I)))
(define-fun b$36$$35$$35$254 () Bool (= lq_anf$36$$35$$35$7205759403792805082$35$$35$d2Zc ds_d2XN))
(define-fun b$36$$35$$35$350 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx ds_d2WV))
(define-fun b$36$$35$$35$382 () Bool (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI n$35$$35$a1Ms))
(define-fun b$36$$35$$35$478 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805141$35$$35$d309) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805141$35$$35$d309)) (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 ds_d2VE) (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 (Data.Cons lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805141$35$$35$d309) lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805141$35$$35$d309) lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d)))
(define-fun b$36$$35$$35$638 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K)) (= lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K ds_d2Tq) (= lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K (Data.Cons lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K) lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K) lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q)))
(define-fun b$36$$35$$35$798 () Bool (= lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G)))
(define-fun b$36$$35$$35$1119 () Bool (and (= VV$35$$35$F$35$$35$36 lit$36$src$47$Data.hs$58$$40$236$44$1$41$$45$$40$238$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)))
(define-fun b$36$$35$$35$1151 () Bool (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)))
(define-fun b$36$$35$$35$383 () Bool (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI n$35$$35$a1Ms))
(define-fun b$36$$35$$35$415 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS n$35$$35$a1Mw))
(define-fun b$36$$35$$35$447 () Bool (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2VR))
(define-fun b$36$$35$$35$479 () Bool (= lq_anf$36$$35$$35$7205759403792805142$35$$35$d30a ds_d2VD))
(define-fun b$36$$35$$35$639 () Bool (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L ds_d2Tp))
(define-fun b$36$$35$$35$671 () Bool (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W ds_d2Ta))
(define-fun b$36$$35$$35$799 () Bool (= lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I 0))
(define-fun b$36$$35$$35$831 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0)))
(define-fun b$36$$35$$35$863 () Bool (= fix$36$$36$krep_a20D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a20z) fix$36$$36$krep_a20z)))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$704 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$707 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$709 b$36$$35$$35$198 b$36$$35$$35$710 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$713 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$717 b$36$$35$$35$110 b$36$$35$$35$718 b$36$$35$$35$722 b$36$$35$$35$724 b$36$$35$$35$725 b$36$$35$$35$726 b$36$$35$$35$727 b$36$$35$$35$88 b$36$$35$$35$728 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$1119))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1120 b$36$$35$$35$704 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$707 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$709 b$36$$35$$35$198 b$36$$35$$35$710 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$713 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$717 b$36$$35$$35$110 b$36$$35$$35$718 b$36$$35$$35$719 b$36$$35$$35$720 b$36$$35$$35$721 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1121 b$36$$35$$35$162 b$36$$35$$35$674 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$676 b$36$$35$$35$677 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$680 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$684 b$36$$35$$35$109 b$36$$35$$35$685 b$36$$35$$35$110 b$36$$35$$35$689 b$36$$35$$35$691 b$36$$35$$35$692 b$36$$35$$35$693 b$36$$35$$35$694 b$36$$35$$35$695 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$671))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1122 b$36$$35$$35$162 b$36$$35$$35$674 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$676 b$36$$35$$35$677 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$680 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$684 b$36$$35$$35$109 b$36$$35$$35$685 b$36$$35$$35$110 b$36$$35$$35$686 b$36$$35$$35$687 b$36$$35$$35$688 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$671))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$1123 b$36$$35$$35$643 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$646 b$36$$35$$35$103 b$36$$35$$35$647 b$36$$35$$35$200 b$36$$35$$35$648 b$36$$35$$35$105 b$36$$35$$35$649 b$36$$35$$35$202 b$36$$35$$35$650 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$625 b$36$$35$$35$628 b$36$$35$$35$631 b$36$$35$$35$88 b$36$$35$$35$632 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$638 b$36$$35$$35$639))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4091 Int) (lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Int)) (and (= VV$35$$35$4091 fix$36$$36$krep_a20E) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 fix$36$$36$krep_a20E) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Int) (lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 Int) (VV$35$$35$3911 Int)) (and (= VV$35$$35$3911 fix$36$$36$krep_a20I) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 fix$36$$36$krep_a20I) (exists ((lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 VV$35$$35$F$35$$35$29))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Int) (VV$35$$35$3741 Int) (lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 Int)) (and (= VV$35$$35$3741 fix$36$$36$krep_a20B) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 fix$36$$36$krep_a20B) (exists ((lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4281 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Int) (lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 Int)) (and (= VV$35$$35$4281 fix$36$$36$krep_a20z) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 fix$36$$36$krep_a20z) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$1124 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$839 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$105 b$36$$35$$35$841 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$910 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$914 b$36$$35$$35$916 b$36$$35$$35$917 b$36$$35$$35$918 b$36$$35$$35$919 b$36$$35$$35$88 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$9)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$640 b$36$$35$$35$641 b$36$$35$$35$162 b$36$$35$$35$642 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$1125 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$625 b$36$$35$$35$628 b$36$$35$$35$631 b$36$$35$$35$88 b$36$$35$$35$632 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$638 b$36$$35$$35$639))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4091 Int) (lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Int)) (and (= VV$35$$35$4091 fix$36$$36$krep_a20E) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 fix$36$$36$krep_a20E) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Int) (lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 Int) (VV$35$$35$3911 Int)) (and (= VV$35$$35$3911 fix$36$$36$krep_a20I) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 fix$36$$36$krep_a20I) (exists ((lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 VV$35$$35$F$35$$35$29))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Int) (VV$35$$35$3741 Int) (lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 Int)) (and (= VV$35$$35$3741 fix$36$$36$krep_a20B) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 fix$36$$36$krep_a20B) (exists ((lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4281 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Int) (lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 Int)) (and (= VV$35$$35$4281 fix$36$$36$krep_a20z) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 fix$36$$36$krep_a20z) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$1126 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$839 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$105 b$36$$35$$35$841 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$910 b$36$$35$$35$911 b$36$$35$$35$816 b$36$$35$$35$912 b$36$$35$$35$817 b$36$$35$$35$913 b$36$$35$$35$88 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$10)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$482 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$198 b$36$$35$$35$486 b$36$$35$$35$103 b$36$$35$$35$1127 b$36$$35$$35$487 b$36$$35$$35$200 b$36$$35$$35$488 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$88 b$36$$35$$35$472 b$36$$35$$35$91 b$36$$35$$35$475 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4091 Int) (lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Int)) (and (= VV$35$$35$4091 fix$36$$36$krep_a20E) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 fix$36$$36$krep_a20E) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Int) (lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 Int) (VV$35$$35$3911 Int)) (and (= VV$35$$35$3911 fix$36$$36$krep_a20I) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 fix$36$$36$krep_a20I) (exists ((lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 VV$35$$35$F$35$$35$29))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Int) (VV$35$$35$3741 Int) (lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 Int)) (and (= VV$35$$35$3741 fix$36$$36$krep_a20B) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 fix$36$$36$krep_a20B) (exists ((lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4281 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Int) (lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 Int)) (and (= VV$35$$35$4281 fix$36$$36$krep_a20z) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 fix$36$$36$krep_a20z) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$897 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$901 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$839 b$36$$35$$35$1128 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$904 b$36$$35$$35$105 b$36$$35$$35$841 b$36$$35$$35$905 b$36$$35$$35$202 b$36$$35$$35$906 b$36$$35$$35$107 b$36$$35$$35$907 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$88 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$11)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$450 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$453 b$36$$35$$35$198 b$36$$35$$35$454 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$1129 b$36$$35$$35$457 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$459 b$36$$35$$35$108 b$36$$35$$35$460 b$36$$35$$35$109 b$36$$35$$35$461 b$36$$35$$35$110 b$36$$35$$35$462 b$36$$35$$35$463 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$447))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$4091 Int) (lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Int)) (and (= VV$35$$35$4091 fix$36$$36$krep_a20E) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 fix$36$$36$krep_a20E) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4092 Data.check) (= lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Int) (lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 Int) (VV$35$$35$3911 Int)) (and (= VV$35$$35$3911 fix$36$$36$krep_a20I) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 fix$36$$36$krep_a20I) (exists ((lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O Int) (VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) 0) (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3912 Data.check) (= lq_karg$36$VV$35$$35$3911$35$$35$k_$35$$35$3912 VV$35$$35$F$35$$35$29))))) (exists ((lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Int) (VV$35$$35$3741 Int) (lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 Int)) (and (= VV$35$$35$3741 fix$36$$36$krep_a20B) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 fix$36$$36$krep_a20B) (exists ((lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_karg$36$Data.check$35$$35$k_$35$$35$3742 Data.check) (= lq_karg$36$VV$35$$35$3741$35$$35$k_$35$$35$3742 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4281 Int) (lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Int) (lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 Int)) (and (= VV$35$$35$4281 fix$36$$36$krep_a20z) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 fix$36$$36$krep_a20z) (exists ((VV$35$$35$F$35$$35$21 Int) (lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k Int)) (and (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)) (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k) 0) (= lq_karg$36$Data.check$35$$35$k_$35$$35$4282 Data.check) (= lq_karg$36$VV$35$$35$4281$35$$35$k_$35$$35$4282 VV$35$$35$F$35$$35$21)))))) b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$897 b$36$$35$$35$162 b$36$$35$$35$898 b$36$$35$$35$99 b$36$$35$$35$899 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$900 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$839 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$105 b$36$$35$$35$841 b$36$$35$$35$1130 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$88 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$863))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$12)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$417 b$36$$35$$35$162 b$36$$35$$35$418 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$422 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$424 b$36$$35$$35$105 b$36$$35$$35$425 b$36$$35$$35$202 b$36$$35$$35$426 b$36$$35$$35$107 b$36$$35$$35$1131 b$36$$35$$35$427 b$36$$35$$35$108 b$36$$35$$35$428 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$406 b$36$$35$$35$88 b$36$$35$$35$409 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$864 b$36$$35$$35$865 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$839 b$36$$35$$35$200 b$36$$35$$35$840 b$36$$35$$35$105 b$36$$35$$35$841 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 (= VV$35$$35$F$35$$35$13 (as GHC.Err.undefined Int)) b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$816 b$36$$35$$35$817 b$36$$35$$35$88 b$36$$35$$35$794 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$863))
(push 1)
(assert (not b$35$$35$a1Ma))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$417 b$36$$35$$35$162 b$36$$35$$35$418 b$36$$35$$35$99 b$36$$35$$35$419 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$420 b$36$$35$$35$421 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$1133 b$36$$35$$35$110 b$36$$35$$35$406 b$36$$35$$35$88 b$36$$35$$35$409 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$385 b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$363 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$1134 b$36$$35$$35$366 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$372 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$381 b$36$$35$$35$126 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$363 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$366 b$36$$35$$35$1135 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$372 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$88 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$353 b$36$$35$$35$162 b$36$$35$$35$354 b$36$$35$$35$99 b$36$$35$$35$355 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$356 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$328 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$1136 b$36$$35$$35$337 b$36$$35$$35$339 b$36$$35$$35$340 b$36$$35$$35$343 b$36$$35$$35$88 b$36$$35$$35$345 b$36$$35$$35$346 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$350))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$328 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$1137 b$36$$35$$35$337 b$36$$35$$35$339 b$36$$35$$35$340 b$36$$35$$35$343 b$36$$35$$35$88 b$36$$35$$35$345 b$36$$35$$35$346 b$36$$35$$35$91 b$36$$35$$35$347 b$36$$35$$35$92 b$36$$35$$35$348 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$349 b$36$$35$$35$126))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$162 b$36$$35$$35$258 b$36$$35$$35$99 b$36$$35$$35$259 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$260 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$238 b$36$$35$$35$241 b$36$$35$$35$1138 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$247 b$36$$35$$35$88 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126 b$36$$35$$35$254))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$238 b$36$$35$$35$241 b$36$$35$$35$243 b$36$$35$$35$1140 b$36$$35$$35$244 b$36$$35$$35$247 b$36$$35$$35$88 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$91 b$36$$35$$35$251 b$36$$35$$35$92 b$36$$35$$35$252 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$253 b$36$$35$$35$126))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$196 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$202 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$110 b$36$$35$$35$212 b$36$$35$$35$1142 b$36$$35$$35$88 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$126))
(push 1)
(assert (not b$35$$35$a1M7))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
