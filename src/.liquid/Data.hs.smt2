(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.TreeN 0)) ((par () ((Data.Node (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$2 Data.TreeN) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$1 Data.TreeN)) Data.Leaf))))
(declare-datatypes ((Data.ListN2 0)) ((par () (Data.Nil2 (Data.Cons2 (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 Data.ListN2))))))
(declare-datatypes ((Data.ListN 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.ListN))))))
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_tmp$36$x$35$$35$2839 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$3830 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ () Data.N)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun ds_d2Ml () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804661$35$$35$d2Sp () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr () Int)
(declare-fun t$35$$35$a1Hs () Data.ListN)
(declare-fun Data.Either.Right () Int)
(declare-fun fix$36$$36$krep_a1Sc () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun p$35$$35$a1GP () Bool)
(declare-fun ds_d2ML () Data.ListN)
(declare-fun q$35$$35$a1GQ () Bool)
(declare-fun VV$35$$35$F$35$$35$32 () Str)
(declare-fun n$35$$35$a1HI () Data.N)
(declare-fun Data.Foldable.length () Int)
(declare-fun ds_d2NG () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW () Data.N)
(declare-fun papp6 () Int)
(declare-fun lq_tmp$36$x$35$$35$2615 () Data.ListN)
(declare-fun GHC.List.iterate () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804598$35$$35$d2Ro () Str)
(declare-fun lq_tmp$36$x$35$$35$2696 () Data.ListN2)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN () Str)
(declare-fun fix$36$$36$krep_a1S8 () Int)
(declare-fun lq_tmp$36$x$35$$35$3918 () Data.ListN)
(declare-fun n$35$$35$a1H2 () Data.N)
(declare-fun h$35$$35$a1Ht () Data.N)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804574$35$$35$d2R0 () Str)
(declare-fun GHC.Types.True () Bool)
(declare-fun ds_d2Lc () Data.ListN)
(declare-fun y$35$$35$a1I1 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804610$35$$35$d2RA () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$1258 () Data.N)
(declare-fun fst () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Data.$36$tc$39$Cons2 () Int)
(declare-fun ds_d2Mz () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804576$35$$35$d2R2 () Data.N)
(declare-fun snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804612$35$$35$d2RC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804614$35$$35$d2RE () Str)
(declare-fun fix$36$$36$krep_a1S5 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun GHC.List.break () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3379 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804577$35$$35$d2R3 () Data.ListN)
(declare-fun Data.leN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804616$35$$35$d2RG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804639$35$$35$d2S3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804587$35$$35$d2Rd () Int)
(declare-fun Data.addN () Int)
(declare-fun lq_karg$36$VV$35$$35$3135$35$$35$k_$35$$35$3136 () Int)
(declare-fun lq_karg$36$VV$35$$35$2861$35$$35$k_$35$$35$2862 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804629$35$$35$d2RT () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804607$35$$35$d2Rx () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun fix$36$$36$krep_a1S2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804623$35$$35$d2RN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804653$35$$35$d2Sh () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804621$35$$35$d2RL () Int)
(declare-fun x$35$$35$a1HN () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 () Data.N)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun Data.lengthListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804657$35$$35$d2Sl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804552$35$$35$d2QE () Data.ListN)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun lit$36$N () Str)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun n$35$$35$a1GR () Data.N)
(declare-fun h$35$$35$a1Hc () Data.N)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 () Data.N)
(declare-fun lit$36$$39$Nil2 () Str)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Rt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804640$35$$35$d2S4 () Str)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Data.initListN () Int)
(declare-fun ds_d2Mk () Data.N)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun n$35$$35$a1Hn () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804642$35$$35$d2S6 () Int)
(declare-fun n$35$$35$a1GY () Data.N)
(declare-fun Data.Foldable.null () Int)
(declare-fun fix$36$$36$krep_a1Sd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804656$35$$35$d2Sk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804596$35$$35$d2Rm () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si () Data.ListN)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Qv () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804592$35$$35$d2Ri () Str)
(declare-fun papp1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804572$35$$35$d2QY () Str)
(declare-fun n$35$$35$a1Hk () Data.N)
(declare-fun ds_d2KX () Data.ListN)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1QO () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun fix$36$$36$krep_a1Sa () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql () Data.ListN)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI () Str)
(declare-fun ds_d2L7 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$30 () Str)
(declare-fun VV$35$$35$F$35$$35$29 () Str)
(declare-fun ys$35$$35$a1I6 () Data.ListN)
(declare-fun papp4 () Int)
(declare-fun lq_tmp$36$x$35$$35$3023 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1812 () Data.ListN)
(declare-fun Data.insertListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK () Str)
(declare-fun lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 () Int)
(declare-fun lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 () Int)
(declare-fun Data.$36$tc$39$Node () Int)
(declare-fun Data.reverseListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 () Data.N)
(declare-fun lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Qn () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804601$35$$35$d2Rr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804605$35$$35$d2Rv () Int)
(declare-fun h$35$$35$a1Hr () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804651$35$$35$d2Sf () Str)
(declare-fun x$35$$35$a1HB () Data.N)
(declare-fun ds_d2MQ () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1313 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1098 () Bool)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804634$35$$35$d2RY () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lit$36$Z () Str)
(declare-fun ys$35$$35$a1HE () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804648$35$$35$d2Sc () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804617$35$$35$d2RH () Int)
(declare-fun ds_d2Kb () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS () Str)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804622$35$$35$d2RM () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun ds_d2N4 () Data.TreeN)
(declare-fun Data.$36$fEqListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804567$35$$35$d2QT () Data.N)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun m$35$$35$a1H9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc () Data.N)
(declare-fun lit$36$$39$Leaf () Str)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun lit$36$$39$Nil () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804578$35$$35$d2R4 () Data.N)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lit$36$$39$Cons2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804649$35$$35$d2Sd () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1Re () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun Data.implies () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804579$35$$35$d2R5 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1430 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1531 () Data.ListN)
(declare-fun Data.Tuple.snd () Int)
(declare-fun ds_d2O0 () Data.N)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804660$35$$35$d2So () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804625$35$$35$d2RP () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun ys$35$$35$a1HT () Data.ListN)
(declare-fun Data.concatListN () Int)
(declare-fun xs$35$$35$a1I4 () Data.ListN)
(declare-fun totalityError () Int)
(declare-fun lq_tmp$36$x$35$$35$2223 () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun ds_d2NN () Data.N)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Q8 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun m$35$$35$a1GT () Data.N)
(declare-fun h$35$$35$a1HF () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun r$35$$35$a1Ie () Data.TreeN)
(declare-fun fix$36$$36$cshow$35$$35$a1R8 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun n$35$$35$a1GZ () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq () Data.ListN)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1PL () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Str)
(declare-fun Data.$36$tc$39$Nil2 () Int)
(declare-fun Data.$36$tc$39$Cons () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL () Data.N)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun r$35$$35$a1Ih () Data.TreeN)
(declare-fun lit$36$ListN2 () Str)
(declare-fun Data.$36$tcN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804619$35$$35$d2RJ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804600$35$$35$d2Rq () Int)
(declare-fun Data.lastListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804645$35$$35$d2S9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV () Data.ListN)
(declare-fun fix$36$$36$cshow$35$$35$a1RN () Int)
(declare-fun n$35$$35$a1Hv () Data.N)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804602$35$$35$d2Rs () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804604$35$$35$d2Ru () Int)
(declare-fun xs$35$$35$a1Ib () Data.ListN2)
(declare-fun n$35$$35$a1H6 () Data.N)
(declare-fun ds_d2LJ () Data.ListN)
(declare-fun h$35$$35$a1Hp () Data.N)
(declare-fun m$35$$35$a1H5 () Data.N)
(declare-fun charX () Int)
(declare-fun Data.sortListN () Int)
(declare-fun Data.n_to_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804606$35$$35$d2Rw () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1RT () Int)
(declare-fun Data.leqN () Int)
(declare-fun ds_d2M6 () Data.ListN)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun l$35$$35$a1Hq () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804637$35$$35$d2S1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3009 () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun lq_tmp$36$x$35$$35$3735 () Data.ListN)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804537$35$$35$d2Qp () Data.ListN)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun fix$36$$36$krep_a1S9 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun n$35$$35$a1H3 () Data.N)
(declare-fun ds_d2LO () Data.ListN)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun m$35$$35$a1H0 () Data.N)
(declare-fun y$35$$35$a1HD () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM () Data.N)
(declare-fun h$35$$35$a1HU () Data.N)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804635$35$$35$d2RZ () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun fix$36$$36$krep_a1S6 () Int)
(declare-fun ds_d2KO () Data.ListN)
(declare-fun h$35$$35$a1Hz () Data.N)
(declare-fun x$35$$35$a1Ic () Data.N)
(declare-fun GHC.Types.False () Bool)
(declare-fun x$35$$35$a1HJ () Data.N)
(declare-fun isJust () Int)
(declare-fun lq_tmp$36$x$35$$35$1141 () Data.N)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun ds_d2Ko () Data.ListN)
(declare-fun lit$36$$39$Node () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804655$35$$35$d2Sj () Int)
(declare-fun GHC.List.span () Int)
(declare-fun Data.lengthListN_int () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu () Data.ListN)
(declare-fun fix$36$$36$krep_a1S3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804630$35$$35$d2RU () Str)
(declare-fun Data.lastListN$39$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun ds_d2LE () Data.ListN)
(declare-fun x$35$$35$a1If () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ () Data.ListN)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804632$35$$35$d2RW () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804613$35$$35$d2RD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804586$35$$35$d2Rc () Str)
(declare-fun Data.$36$tc$39$Leaf () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804590$35$$35$d2Rg () Int)
(declare-fun ds_d2MG () Data.ListN)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun ds_d2O5 () Data.N)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804626$35$$35$d2RQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804647$35$$35$d2Sb () Int)
(declare-fun Data.takeListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804638$35$$35$d2S2 () Int)
(declare-fun Data.zipListN () Int)
(declare-fun Data.heightTreeN () Int)
(declare-fun Data.$36$tc$39$Nil () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj () Data.ListN)
(declare-fun ys$35$$35$a1I2 () Data.ListN)
(declare-fun x1$35$$35$a1I9 () Data.N)
(declare-fun ds_d2Ls () Data.ListN)
(declare-fun Data.lastOfTwo () Int)
(declare-fun l1$35$$35$a1Hd () Data.ListN)
(declare-fun lit$36$ListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804618$35$$35$d2RI () Int)
(declare-fun l$35$$35$a1Hm () Data.ListN)
(declare-fun Data.$36$tc$39$S () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun t$35$$35$a1Hu () Data.ListN)
(declare-fun l$35$$35$a1Id () Data.TreeN)
(declare-fun Data.countListN () Int)
(declare-fun Data.dropListN2 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun h$35$$35$a1Hi () Data.N)
(declare-fun fix$36$$36$krep_a1Se () Int)
(declare-fun lit$36$Nil () Str)
(declare-fun VV$35$$35$F$35$$35$33 () Str)
(declare-fun lq_karg$36$VV$35$$35$3031$35$$35$k_$35$$35$3032 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun papp7 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$VV$35$$35$2955$35$$35$k_$35$$35$2956 () Int)
(declare-fun l$35$$35$a1Hj () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$VV$35$$35$3401$35$$35$k_$35$$35$3402 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7 () Str)
(declare-fun ds_d2LT () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$2785$35$$35$k_$35$$35$2786 () Int)
(declare-fun fix$36$$36$krep_a1Sb () Int)
(declare-fun lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3326 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN () Str)
(declare-fun lq_tmp$36$x$35$$35$2853 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU () Str)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun Data.$36$tcListN2 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN () Str)
(declare-fun lit$36$$39$Cons () Str)
(declare-fun Data.deleteListN () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9 () Str)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Rm () Int)
(declare-fun fix$36$$36$krep_a1S4 () Int)
(declare-fun lit$36$$39$Z () Str)
(declare-fun n$35$$35$a1I7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804641$35$$35$d2S5 () Int)
(declare-fun h$35$$35$a1Hx () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun Data.$36$fEqTreeN () Int)
(declare-fun head () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN () Str)
(declare-fun lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804628$35$$35$d2RS () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804624$35$$35$d2RO () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804620$35$$35$d2RK () Int)
(declare-fun cast_as () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR () Data.ListN)
(declare-fun Data.singletonListN () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804631$35$$35$d2RV () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804662$35$$35$d2Sq () Int)
(declare-fun lit$36$TreeN () Str)
(declare-fun y$35$$35$a1I5 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2329 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$3393 () Int)
(declare-fun lit$36$Data () Str)
(declare-fun t$35$$35$a1HA () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_tmp$36$x$35$$35$3203 () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun ds_d2KH () Data.ListN)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun y$35$$35$a1HS () Data.N)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun x2$35$$35$a1Ia () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804609$35$$35$d2Rz () Int)
(declare-fun lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 () Int)
(declare-fun n$35$$35$a1GS () Data.N)
(declare-fun lq_karg$36$VV$35$$35$2757$35$$35$k_$35$$35$2758 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804588$35$$35$d2Re () Str)
(declare-fun n$35$$35$a1Ha () Data.N)
(declare-fun ds_d2No () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun Data.mirrorTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF () Data.N)
(declare-fun n$35$$35$a1GV () Data.N)
(declare-fun h$35$$35$a1Hg () Data.N)
(declare-fun ds_d2K2 () Data.TreeN)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$CsA8wffZnUQ4PmyaUD9sDD () Str)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun papp5 () Int)
(declare-fun l2$35$$35$a1Hb () Data.ListN)
(declare-fun h$35$$35$a1HL () Data.N)
(declare-fun Data.subN () Int)
(declare-fun l$35$$35$a1Hh () Data.ListN)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun Data.initConcatListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804594$35$$35$d2Rk () Int)
(declare-fun lit$36$Cons$32$ () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun xs$35$$35$a1HW () Data.ListN)
(declare-fun GHC.List.init () Int)
(declare-fun h$35$$35$a1Hl () Data.N)
(declare-fun lq_tmp$36$x$35$$35$3189 () Int)
(declare-fun Data.maxN () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Str)
(declare-fun VV$35$$35$F$35$$35$28 () Str)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Q0 () Int)
(declare-fun lit$36$$39$S () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1698 () Data.N)
(declare-fun n$35$$35$a1H7 () Data.N)
(declare-fun Data.$36$tcListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804633$35$$35$d2RX () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT () Data.N)
(declare-fun Data.nullListN () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun t$35$$35$a1HM () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804551$35$$35$d2QD () Data.N)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV () Data.N)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Data.$36$fShowN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804603$35$$35$d2Rt () Str)
(declare-fun GHC.Classes.min () Int)
(declare-fun Data.$36$fEqN () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun GHC.List.head () Int)
(declare-fun ds_d2Kc () Data.ListN2)
(declare-fun Data.$36$fEqListN2 () Int)
(declare-fun ds_d2Ll () Data.ListN)
(declare-fun Data.$36$trModule () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun ds_d2M5 () Data.N)
(declare-fun lit$36$S$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB () Int)
(declare-fun Data.$36$fShowListN () Int)
(declare-fun Data.dropListN () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804646$35$$35$d2Sa () Str)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk () Data.N)
(declare-fun Data.elemListN () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1RB () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm () Str)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun fix$36$$36$krep_a1S7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804615$35$$35$d2RF () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1QG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804536$35$$35$d2Qo () Data.N)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804644$35$$35$d2S8 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804650$35$$35$d2Se () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804608$35$$35$d2Ry () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx () Data.ListN)
(declare-fun Data.$36$tc$39$Z () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun n$35$$35$a1Hf () Data.N)
(declare-fun autolen () Int)
(declare-fun ds_d2LZ () Data.ListN)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN () Str)
(declare-fun lq_tmp$36$x$35$$35$2063 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804652$35$$35$d2Sg () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804561$35$$35$d2QN () Data.N)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$1920 () Data.ListN)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804589$35$$35$d2Rf () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804636$35$$35$d2S0 () Int)
(declare-fun t$35$$35$a1Hy () Data.ListN)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun Data.$36$tcTreeN () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Str)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun ds_d2Kp () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG () Data.N)
(declare-fun lq_karg$36$VV$35$$35$2913$35$$35$k_$35$$35$2914 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun t$35$$35$a1HV () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3473$35$$35$k_$35$$35$3474 () Int)
(declare-fun lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_tmp$36$x$35$$35$2429 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792804597$35$$35$d2Rn () Int)
(declare-fun x$35$$35$a1I3 () Data.N)
(declare-fun ds_d2Nb () Data.N)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun xs$35$$35$a1HQ () Data.ListN)
(declare-fun l$35$$35$a1Ig () Data.TreeN)
(declare-fun lq_karg$36$VV$35$$35$3093$35$$35$k_$35$$35$3094 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804591$35$$35$d2Rh () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804599$35$$35$d2Rp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb () Data.N)
(declare-fun x$35$$35$a1HZ () Data.N)
(declare-fun VV$35$$35$F$35$$35$37 () Str)
(declare-fun ds_d2NB () Data.ListN)
(declare-fun papp3 () Int)
(declare-fun m$35$$35$a1GX () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792804593$35$$35$d2Rj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ () Data.N)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$39 (Int Data.ListN) Data.TreeN)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Data.ListN)
(declare-fun apply$35$$35$35 (Int Data.ListN) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int Bool) Data.N)
(declare-fun apply$35$$35$23 (Int Str) Data.TreeN)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$56 (Int Data.TreeN) Int)
(declare-fun apply$35$$35$7 (Int Int) Data.TreeN)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int Str) Data.ListN2)
(declare-fun apply$35$$35$54 (Int Data.N) Data.N)
(declare-fun apply$35$$35$46 (Int Data.ListN2) Data.N)
(declare-fun apply$35$$35$53 (Int Data.N) Data.ListN2)
(declare-fun apply$35$$35$45 (Int Data.ListN2) Data.ListN2)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Data.ListN) Data.ListN)
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) Data.TreeN)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.ListN)
(declare-fun apply$35$$35$32 (Int Data.ListN) Int)
(declare-fun apply$35$$35$12 (Int Bool) Data.ListN)
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$13 (Int Bool) Data.ListN2)
(declare-fun apply$35$$35$62 (Int Data.TreeN) Data.N)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Data.ListN2)
(declare-fun apply$35$$35$47 (Int Data.ListN2) Data.TreeN)
(declare-fun apply$35$$35$55 (Int Data.N) Data.TreeN)
(declare-fun apply$35$$35$22 (Int Str) Data.N)
(declare-fun apply$35$$35$40 (Int Data.ListN2) Int)
(declare-fun apply$35$$35$48 (Int Data.N) Int)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int Data.ListN2) Data.ListN)
(declare-fun apply$35$$35$52 (Int Data.N) Data.ListN)
(declare-fun apply$35$$35$37 (Int Data.ListN) Data.ListN2)
(declare-fun apply$35$$35$57 (Int Data.TreeN) Bool)
(declare-fun apply$35$$35$60 (Int Data.TreeN) Data.ListN)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$33 (Int Data.ListN) Bool)
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$42 (Int Data.ListN2) Str)
(declare-fun apply$35$$35$50 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$59 (Int Data.TreeN) (_ BitVec 32))
(declare-fun apply$35$$35$63 (Int Data.TreeN) Data.TreeN)
(declare-fun apply$35$$35$20 (Int Str) Data.ListN)
(declare-fun apply$35$$35$58 (Int Data.TreeN) Str)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$41 (Int Data.ListN2) Bool)
(declare-fun apply$35$$35$49 (Int Data.N) Bool)
(declare-fun apply$35$$35$34 (Int Data.ListN) Str)
(declare-fun apply$35$$35$61 (Int Data.TreeN) Data.ListN2)
(declare-fun apply$35$$35$43 (Int Data.ListN2) (_ BitVec 32))
(declare-fun apply$35$$35$51 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$15 (Int Bool) Data.TreeN)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$6 (Int Int) Data.N)
(declare-fun apply$35$$35$5 (Int Int) Data.ListN2)
(declare-fun apply$35$$35$38 (Int Data.ListN) Data.N)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$39 (Data.ListN) Data.TreeN)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Data.ListN)
(declare-fun coerce$35$$35$35 (Data.ListN) (_ BitVec 32))
(declare-fun coerce$35$$35$14 (Bool) Data.N)
(declare-fun coerce$35$$35$23 (Str) Data.TreeN)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$56 (Data.TreeN) Int)
(declare-fun coerce$35$$35$7 (Int) Data.TreeN)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$21 (Str) Data.ListN2)
(declare-fun coerce$35$$35$54 (Data.N) Data.N)
(declare-fun coerce$35$$35$46 (Data.ListN2) Data.N)
(declare-fun coerce$35$$35$53 (Data.N) Data.ListN2)
(declare-fun coerce$35$$35$45 (Data.ListN2) Data.ListN2)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Data.ListN) Data.ListN)
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) Data.TreeN)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.ListN)
(declare-fun coerce$35$$35$32 (Data.ListN) Int)
(declare-fun coerce$35$$35$12 (Bool) Data.ListN)
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$13 (Bool) Data.ListN2)
(declare-fun coerce$35$$35$62 (Data.TreeN) Data.N)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Data.ListN2)
(declare-fun coerce$35$$35$47 (Data.ListN2) Data.TreeN)
(declare-fun coerce$35$$35$55 (Data.N) Data.TreeN)
(declare-fun coerce$35$$35$22 (Str) Data.N)
(declare-fun coerce$35$$35$40 (Data.ListN2) Int)
(declare-fun coerce$35$$35$48 (Data.N) Int)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 (Data.ListN2) Data.ListN)
(declare-fun coerce$35$$35$52 (Data.N) Data.ListN)
(declare-fun coerce$35$$35$37 (Data.ListN) Data.ListN2)
(declare-fun coerce$35$$35$57 (Data.TreeN) Bool)
(declare-fun coerce$35$$35$60 (Data.TreeN) Data.ListN)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$33 (Data.ListN) Bool)
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$42 (Data.ListN2) Str)
(declare-fun coerce$35$$35$50 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$59 (Data.TreeN) (_ BitVec 32))
(declare-fun coerce$35$$35$63 (Data.TreeN) Data.TreeN)
(declare-fun coerce$35$$35$20 (Str) Data.ListN)
(declare-fun coerce$35$$35$58 (Data.TreeN) Str)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$41 (Data.ListN2) Bool)
(declare-fun coerce$35$$35$49 (Data.N) Bool)
(declare-fun coerce$35$$35$34 (Data.ListN) Str)
(declare-fun coerce$35$$35$61 (Data.TreeN) Data.ListN2)
(declare-fun coerce$35$$35$43 (Data.ListN2) (_ BitVec 32))
(declare-fun coerce$35$$35$51 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$15 (Bool) Data.TreeN)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$6 (Int) Data.N)
(declare-fun coerce$35$$35$5 (Int) Data.ListN2)
(declare-fun coerce$35$$35$38 (Data.ListN) Data.N)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$39 (Data.ListN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Data.ListN) Int)
(declare-fun smt_lambda$35$$35$35 (Data.ListN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$23 (Str Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$56 (Data.TreeN Int) Int)
(declare-fun smt_lambda$35$$35$7 (Int Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 (Str Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$54 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$46 (Data.ListN2 Data.N) Int)
(declare-fun smt_lambda$35$$35$53 (Data.N Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$45 (Data.ListN2 Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Data.ListN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.ListN) Int)
(declare-fun smt_lambda$35$$35$32 (Data.ListN Int) Int)
(declare-fun smt_lambda$35$$35$12 (Bool Data.ListN) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$13 (Bool Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$62 (Data.TreeN Data.N) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$47 (Data.ListN2 Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$55 (Data.N Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$22 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$40 (Data.ListN2 Int) Int)
(declare-fun smt_lambda$35$$35$48 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 (Data.ListN2 Data.ListN) Int)
(declare-fun smt_lambda$35$$35$52 (Data.N Data.ListN) Int)
(declare-fun smt_lambda$35$$35$37 (Data.ListN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$57 (Data.TreeN Bool) Int)
(declare-fun smt_lambda$35$$35$60 (Data.TreeN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$33 (Data.ListN Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$42 (Data.ListN2 Str) Int)
(declare-fun smt_lambda$35$$35$50 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$59 (Data.TreeN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$63 (Data.TreeN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$20 (Str Data.ListN) Int)
(declare-fun smt_lambda$35$$35$58 (Data.TreeN Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$41 (Data.ListN2 Bool) Int)
(declare-fun smt_lambda$35$$35$49 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.ListN Str) Int)
(declare-fun smt_lambda$35$$35$61 (Data.TreeN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$43 (Data.ListN2 (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$51 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$38 (Data.ListN Data.N) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$2$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$3$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$4$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$5$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$6$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$7$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$1$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$2$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$3$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$4$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$5$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$6$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$7$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$2$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$3$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$4$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$5$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$6$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$7$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$1$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN lit$36$S$32$ lit$36$$39$S lit$36$Cons$32$ lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$CsA8wffZnUQ4PmyaUD9sDD lit$36$Data lit$36$TreeN lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN lit$36$$39$Z lit$36$$39$Cons lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN lit$36$Nil lit$36$ListN lit$36$$39$Node lit$36$ListN2 lit$36$$39$Cons2 lit$36$$39$Nil lit$36$$39$Leaf lit$36$Z lit$36$$39$Nil2 lit$36$N lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN))



(assert (distinct GHC.Types.False GHC.Types.True))





(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))



(assert (= (strLen lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) 40))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$N) 1))
(assert (= (strLen lit$36$$39$Nil2) 5))
(assert (= (strLen lit$36$Z) 1))
(assert (= (strLen lit$36$$39$Leaf) 5))
(assert (= (strLen lit$36$$39$Nil) 4))
(assert (= (strLen lit$36$$39$Cons2) 6))
(assert (= (strLen lit$36$ListN2) 6))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$ListN) 5))
(assert (= (strLen lit$36$Nil) 3))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN) 46))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) 39))
(assert (= (strLen lit$36$$39$Cons) 5))
(assert (= (strLen lit$36$$39$Z) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) 40))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) 45))
(assert (= (strLen lit$36$TreeN) 5))
(assert (= (strLen lit$36$Data) 4))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$CsA8wffZnUQ4PmyaUD9sDD) 46))
(assert (= (strLen lit$36$Cons$32$) 5))
(assert (= (strLen lit$36$$39$S) 2))
(assert (= (strLen lit$36$S$32$) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN) 45))
(push 1)
(define-fun b$36$$35$$35$224 () Bool (= lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$256 () Bool (= lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP ds_d2Nb))
(define-fun b$36$$35$$35$608 () Bool (= lq_anf$36$$35$$35$7205759403792804609$35$$35$d2Rz (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804608$35$$35$d2Ry)))
(define-fun b$36$$35$$35$640 () Bool (= lq_anf$36$$35$$35$7205759403792804631$35$$35$d2RV (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804630$35$$35$d2RU)))
(define-fun b$36$$35$$35$672 () Bool (= lq_anf$36$$35$$35$7205759403792804651$35$$35$d2Sf lit$36$$39$Node))
(define-fun b$36$$35$$35$832 () Bool (and (= VV$35$$35$F$35$$35$32 lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN) (= VV$35$$35$F$35$$35$32 lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm)))
(define-fun b$36$$35$$35$225 () Bool (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH ds_d2NN))
(define-fun b$36$$35$$35$321 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5)) (= lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 n$35$$35$a1H7) (= lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 (Data.S lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5) lq_anf$36$$35$$35$7205759403792804523$35$$35$d2Qb)))
(define-fun b$36$$35$$35$609 () Bool (= lq_anf$36$$35$$35$7205759403792804610$35$$35$d2RA 0))
(define-fun b$36$$35$$35$641 () Bool (= lq_anf$36$$35$$35$7205759403792804632$35$$35$d2RW 0))
(define-fun b$36$$35$$35$673 () Bool (= lq_anf$36$$35$$35$7205759403792804652$35$$35$d2Sg (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804651$35$$35$d2Sf)))
(define-fun b$36$$35$$35$833 () Bool (and (= VV$35$$35$F$35$$35$33 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$33 lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9)))
(define-fun b$36$$35$$35$130 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$258 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP)) (= lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP ds_d2Nb) (= lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP (Data.S lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP) lq_anf$36$$35$$35$7205759403792804508$35$$35$d2PW)))
(define-fun b$36$$35$$35$322 () Bool (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 ds_d2MQ))
(define-fun b$36$$35$$35$578 () Bool (= lq_anf$36$$35$$35$7205759403792804586$35$$35$d2Rc lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$CsA8wffZnUQ4PmyaUD9sDD))
(define-fun b$36$$35$$35$674 () Bool (= lq_anf$36$$35$$35$7205759403792804653$35$$35$d2Sh 0))
(define-fun b$36$$35$$35$834 () Bool (and (= VV$35$$35$F$35$$35$34 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$34 lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7)))
(define-fun b$36$$35$$35$227 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH)) (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH ds_d2NN) (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH (Data.S m$35$$35$a1GX)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH) m$35$$35$a1GX)))
(define-fun b$36$$35$$35$259 () Bool (= lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ n$35$$35$a1H3))
(define-fun b$36$$35$$35$323 () Bool (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 ds_d2MQ))
(define-fun b$36$$35$$35$579 () Bool (= lq_anf$36$$35$$35$7205759403792804587$35$$35$d2Rd (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804586$35$$35$d2Rc)))
(define-fun b$36$$35$$35$643 () Bool (= fix$36$$36$krep_a1Sa (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S7) fix$36$$36$krep_a1S7)))
(define-fun b$36$$35$$35$835 () Bool (and (= VV$35$$35$F$35$$35$35 lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU)))
(define-fun b$36$$35$$35$228 () Bool (= lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ n$35$$35$a1GV))
(define-fun b$36$$35$$35$324 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6)) (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 Data.Z) (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 ds_d2MQ)))
(define-fun b$36$$35$$35$580 () Bool (= lq_anf$36$$35$$35$7205759403792804588$35$$35$d2Re lit$36$Data))
(define-fun b$36$$35$$35$612 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0)))
(define-fun b$36$$35$$35$644 () Bool (= fix$36$$36$krep_a1S9 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S4) fix$36$$36$krep_a1Sa)))
(define-fun b$36$$35$$35$836 () Bool (and (= VV$35$$35$F$35$$35$36 lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS)))
(define-fun b$36$$35$$35$229 () Bool (= lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ n$35$$35$a1GV))
(define-fun b$36$$35$$35$325 () Bool (= lq_anf$36$$35$$35$7205759403792804519$35$$35$d2Q7 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$389 () Bool (= lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq ds_d2M6))
(define-fun b$36$$35$$35$517 () Bool (= lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV ds_d2Ko))
(define-fun b$36$$35$$35$581 () Bool (= lq_anf$36$$35$$35$7205759403792804589$35$$35$d2Rf (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804588$35$$35$d2Re)))
(define-fun b$36$$35$$35$645 () Bool (= fix$36$$36$krep_a1S8 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S4) fix$36$$36$krep_a1S9)))
(define-fun b$36$$35$$35$837 () Bool (and (= VV$35$$35$F$35$$35$37 lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$37 lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK)))
(define-fun b$36$$35$$35$134 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$230 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ)) (= lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ Data.Z) (= lq_anf$36$$35$$35$7205759403792804495$35$$35$d2PJ n$35$$35$a1GV)))
(define-fun b$36$$35$$35$262 () Bool (= lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ n$35$$35$a1H3))
(define-fun b$36$$35$$35$326 () Bool (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 ds_d2MQ))
(define-fun b$36$$35$$35$614 () Bool (= lq_anf$36$$35$$35$7205759403792804612$35$$35$d2RC 10426245487072049318))
(define-fun b$36$$35$$35$646 () Bool (= lq_anf$36$$35$$35$7205759403792804633$35$$35$d2RX 2593183536588542921))
(define-fun b$36$$35$$35$678 () Bool (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si ds_d2LO))
(define-fun b$36$$35$$35$838 () Bool (and (= VV$35$$35$F$35$$35$38 lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792804494$35$$35$d2PI)))
(define-fun b$36$$35$$35$71 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$231 () Bool (= lq_anf$36$$35$$35$7205759403792804496$35$$35$d2PK lit$36$src$47$Data.hs$58$$40$30$44$1$41$$45$$40$32$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$583 () Bool (= lq_anf$36$$35$$35$7205759403792804590$35$$35$d2Rg 9984973337887586825))
(define-fun b$36$$35$$35$615 () Bool (= lq_anf$36$$35$$35$7205759403792804613$35$$35$d2RD 10832917124602965675))
(define-fun b$36$$35$$35$647 () Bool (= lq_anf$36$$35$$35$7205759403792804634$35$$35$d2RY 11732131205777983370))
(define-fun b$36$$35$$35$679 () Bool (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si ds_d2LO))
(define-fun b$36$$35$$35$839 () Bool (and (= VV$35$$35$F$35$$35$7 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792804662$35$$35$d2Sq) lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr)) (= VV$35$$35$F$35$$35$7 (+ lq_anf$36$$35$$35$7205759403792804662$35$$35$d2Sq lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr))))
(define-fun b$36$$35$$35$264 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ)) (= lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ n$35$$35$a1H3) (= lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ (Data.S lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804502$35$$35$d2PQ) lq_anf$36$$35$$35$7205759403792804507$35$$35$d2PV)))
(define-fun b$36$$35$$35$328 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6)) (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 ds_d2MQ) (= lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6 (Data.S m$35$$35$a1H9)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804518$35$$35$d2Q6) m$35$$35$a1H9)))
(define-fun b$36$$35$$35$392 () Bool (= lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq ds_d2M6))
(define-fun b$36$$35$$35$520 () Bool (= lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV ds_d2Ko))
(define-fun b$36$$35$$35$584 () Bool (= lq_anf$36$$35$$35$7205759403792804591$35$$35$d2Rh 14262876935834346444))
(define-fun b$36$$35$$35$616 () Bool (= lq_anf$36$$35$$35$7205759403792804614$35$$35$d2RE lit$36$$39$Nil))
(define-fun b$36$$35$$35$648 () Bool (= lq_anf$36$$35$$35$7205759403792804635$35$$35$d2RZ lit$36$$39$Cons2))
(define-fun b$36$$35$$35$680 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si)) (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si Data.Nil) (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si ds_d2LO)))
(define-fun b$36$$35$$35$840 () Bool (and (= VV$35$$35$F$35$$35$8 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804660$35$$35$d2So)) (= VV$35$$35$F$35$$35$8 lq_anf$36$$35$$35$7205759403792804660$35$$35$d2So)))
(define-fun b$36$$35$$35$265 () Bool (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR ds_d2Nb))
(define-fun b$36$$35$$35$329 () Bool (= lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 n$35$$35$a1H7))
(define-fun b$36$$35$$35$585 () Bool (= lq_anf$36$$35$$35$7205759403792804592$35$$35$d2Ri lit$36$N))
(define-fun b$36$$35$$35$617 () Bool (= lq_anf$36$$35$$35$7205759403792804615$35$$35$d2RF (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804614$35$$35$d2RE)))
(define-fun b$36$$35$$35$649 () Bool (= lq_anf$36$$35$$35$7205759403792804636$35$$35$d2S0 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804635$35$$35$d2RZ)))
(define-fun b$36$$35$$35$681 () Bool (= lq_anf$36$$35$$35$7205759403792804655$35$$35$d2Sj 0))
(define-fun b$36$$35$$35$841 () Bool (and (= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792804657$35$$35$d2Sl) lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm)) (= VV$35$$35$F$35$$35$9 (+ lq_anf$36$$35$$35$7205759403792804657$35$$35$d2Sl lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm))))
(define-fun b$36$$35$$35$74 () Bool (= Data.Leaf Data.Leaf))
(define-fun b$36$$35$$35$266 () Bool (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR ds_d2Nb))
(define-fun b$36$$35$$35$330 () Bool (= lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 n$35$$35$a1H7))
(define-fun b$36$$35$$35$586 () Bool (= lq_anf$36$$35$$35$7205759403792804593$35$$35$d2Rj (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804592$35$$35$d2Ri)))
(define-fun b$36$$35$$35$618 () Bool (= lq_anf$36$$35$$35$7205759403792804616$35$$35$d2RG 0))
(define-fun b$36$$35$$35$650 () Bool (= lq_anf$36$$35$$35$7205759403792804637$35$$35$d2S1 0))
(define-fun b$36$$35$$35$682 () Bool (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si ds_d2LO))
(define-fun b$36$$35$$35$842 () Bool (and (= VV$35$$35$F$35$$35$10 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804655$35$$35$d2Sj)) (= VV$35$$35$F$35$$35$10 lq_anf$36$$35$$35$7205759403792804655$35$$35$d2Sj)))
(define-fun b$36$$35$$35$75 () Bool (= Data.Nil2 Data.Nil2))
(define-fun b$36$$35$$35$267 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR)) (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR Data.Z) (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR ds_d2Nb)))
(define-fun b$36$$35$$35$331 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8)) (= lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 Data.Z) (= lq_anf$36$$35$$35$7205759403792804520$35$$35$d2Q8 n$35$$35$a1H7)))
(define-fun b$36$$35$$35$395 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq)) (= lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq ds_d2M6) (= lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq (Data.Cons lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq) lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804538$35$$35$d2Qq) lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw)))
(define-fun b$36$$35$$35$523 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV)) (= lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV ds_d2Ko) (= lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV (Data.Cons lq_anf$36$$35$$35$7205759403792804578$35$$35$d2R4 lq_anf$36$$35$$35$7205759403792804579$35$$35$d2R5)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV) lq_anf$36$$35$$35$7205759403792804579$35$$35$d2R5) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV) lq_anf$36$$35$$35$7205759403792804578$35$$35$d2R4)))
(define-fun b$36$$35$$35$587 () Bool (= lq_anf$36$$35$$35$7205759403792804594$35$$35$d2Rk 0))
(define-fun b$36$$35$$35$843 () Bool (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804649$35$$35$d2Sd) lq_anf$36$$35$$35$7205759403792804650$35$$35$d2Se) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804652$35$$35$d2Sg) lq_anf$36$$35$$35$7205759403792804653$35$$35$d2Sh) fix$36$$36$krep_a1S3)))
(define-fun b$36$$35$$35$76 () Bool (= Data.$36$fEqListN Data.$36$fEqListN))
(define-fun b$36$$35$$35$172 () Bool (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(define-fun b$36$$35$$35$268 () Bool (= lq_anf$36$$35$$35$7205759403792804504$35$$35$d2PS lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$332 () Bool (= lq_anf$36$$35$$35$7205759403792804521$35$$35$d2Q9 lit$36$src$47$Data.hs$58$$40$48$44$1$41$$45$$40$50$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$364 () Bool (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2Ml))
(define-fun b$36$$35$$35$396 () Bool (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr ds_d2M5))
(define-fun b$36$$35$$35$524 () Bool (= lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW ds_d2Kp))
(define-fun b$36$$35$$35$620 () Bool (= fix$36$$36$krep_a1Sd (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1Sb) fix$36$$36$krep_a1Sb)))
(define-fun b$36$$35$$35$652 () Bool (= lq_anf$36$$35$$35$7205759403792804638$35$$35$d2S2 10782566318610950642))
(define-fun b$36$$35$$35$844 () Bool (= VV$35$$35$F$35$$35$12 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804644$35$$35$d2S8) lq_anf$36$$35$$35$7205759403792804645$35$$35$d2S9) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804647$35$$35$d2Sb) lq_anf$36$$35$$35$7205759403792804648$35$$35$d2Sc) fix$36$$36$krep_a1S2)))
(define-fun b$36$$35$$35$269 () Bool (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR ds_d2Nb))
(define-fun b$36$$35$$35$397 () Bool (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr ds_d2M5))
(define-fun b$36$$35$$35$621 () Bool (= fix$36$$36$krep_a1Sc (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S4) fix$36$$36$krep_a1Sd)))
(define-fun b$36$$35$$35$653 () Bool (= lq_anf$36$$35$$35$7205759403792804639$35$$35$d2S3 4429420299209570930))
(define-fun b$36$$35$$35$685 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si)) (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si ds_d2LO) (= lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si (Data.Cons h$35$$35$a1Ht t$35$$35$a1Hu)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si) t$35$$35$a1Hu) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804654$35$$35$d2Si) h$35$$35$a1Ht)))
(define-fun b$36$$35$$35$845 () Bool (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)))
(define-fun b$36$$35$$35$174 () Bool (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(define-fun b$36$$35$$35$398 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr)) (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr Data.Z) (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr ds_d2M5)))
(define-fun b$36$$35$$35$590 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0)))
(define-fun b$36$$35$$35$622 () Bool (= lq_anf$36$$35$$35$7205759403792804617$35$$35$d2RH 12223503410233498434))
(define-fun b$36$$35$$35$654 () Bool (= lq_anf$36$$35$$35$7205759403792804640$35$$35$d2S4 lit$36$TreeN))
(define-fun b$36$$35$$35$686 () Bool (= lq_anf$36$$35$$35$7205759403792804656$35$$35$d2Sk 1))
(define-fun b$36$$35$$35$846 () Bool (= VV$35$$35$F$35$$35$14 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804638$35$$35$d2S2) lq_anf$36$$35$$35$7205759403792804639$35$$35$d2S3) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804641$35$$35$d2S5) lq_anf$36$$35$$35$7205759403792804642$35$$35$d2S6) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$271 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR)) (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR ds_d2Nb) (= lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR (Data.S m$35$$35$a1H5)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804503$35$$35$d2PR) m$35$$35$a1H5)))
(define-fun b$36$$35$$35$367 () Bool (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2Ml))
(define-fun b$36$$35$$35$399 () Bool (= lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs ds_d2M6))
(define-fun b$36$$35$$35$527 () Bool (= lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW ds_d2Kp))
(define-fun b$36$$35$$35$623 () Bool (= lq_anf$36$$35$$35$7205759403792804618$35$$35$d2RI 14395554745145967306))
(define-fun b$36$$35$$35$655 () Bool (= lq_anf$36$$35$$35$7205759403792804641$35$$35$d2S5 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804640$35$$35$d2S4)))
(define-fun b$36$$35$$35$687 () Bool (and (= lq_anf$36$$35$$35$7205759403792804657$35$$35$d2Sl (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804656$35$$35$d2Sk)) (= lq_anf$36$$35$$35$7205759403792804657$35$$35$d2Sl lq_anf$36$$35$$35$7205759403792804656$35$$35$d2Sk)))
(define-fun b$36$$35$$35$847 () Bool (= VV$35$$35$F$35$$35$15 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804633$35$$35$d2RX) lq_anf$36$$35$$35$7205759403792804634$35$$35$d2RY) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804636$35$$35$d2S0) lq_anf$36$$35$$35$7205759403792804637$35$$35$d2S1) fix$36$$36$krep_a1S8)))
(define-fun b$36$$35$$35$176 () Bool (and (is-Data.Nil2 Data.Nil2) (not (is-Data.Cons2 Data.Nil2)) (= Data.Nil2 Data.Nil2)))
(define-fun b$36$$35$$35$272 () Bool (= lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT n$35$$35$a1H3))
(define-fun b$36$$35$$35$400 () Bool (= lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs ds_d2M6))
(define-fun b$36$$35$$35$592 () Bool (= lq_anf$36$$35$$35$7205759403792804596$35$$35$d2Rm 8953574783293284610))
(define-fun b$36$$35$$35$624 () Bool (= lq_anf$36$$35$$35$7205759403792804619$35$$35$d2RJ lit$36$$39$Cons))
(define-fun b$36$$35$$35$656 () Bool (= lq_anf$36$$35$$35$7205759403792804642$35$$35$d2S6 0))
(define-fun b$36$$35$$35$688 () Bool (and (= lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm (apply$35$$35$32 Data.lengthListN_int t$35$$35$a1Hu)) (= lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm (ite (is-Data.Nil t$35$$35$a1Hu) 0 (+ 1 (apply$35$$35$32 Data.lengthListN_int (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 t$35$$35$a1Hu))))) (<= 0 lq_anf$36$$35$$35$7205759403792804658$35$$35$d2Sm)))
(define-fun b$36$$35$$35$848 () Bool (= VV$35$$35$F$35$$35$16 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804628$35$$35$d2RS) lq_anf$36$$35$$35$7205759403792804629$35$$35$d2RT) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804631$35$$35$d2RV) lq_anf$36$$35$$35$7205759403792804632$35$$35$d2RW) fix$36$$36$krep_a1S7)))
(define-fun b$36$$35$$35$209 () Bool (= lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF ds_d2NN))
(define-fun b$36$$35$$35$273 () Bool (= lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT n$35$$35$a1H3))
(define-fun b$36$$35$$35$401 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs)) (= lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs Data.Nil) (= lq_anf$36$$35$$35$7205759403792804540$35$$35$d2Qs ds_d2M6)))
(define-fun b$36$$35$$35$593 () Bool (= lq_anf$36$$35$$35$7205759403792804597$35$$35$d2Rn 16483673345541926132))
(define-fun b$36$$35$$35$625 () Bool (= lq_anf$36$$35$$35$7205759403792804620$35$$35$d2RK (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804619$35$$35$d2RJ)))
(define-fun b$36$$35$$35$849 () Bool (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)))
(define-fun b$36$$35$$35$82 () Bool (= Data.Nil Data.Nil))
(define-fun b$36$$35$$35$178 () Bool (and (is-Data.Leaf Data.Leaf) (not (is-Data.Node Data.Leaf)) (= Data.Leaf Data.Leaf)))
(define-fun b$36$$35$$35$274 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT)) (= lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT Data.Z) (= lq_anf$36$$35$$35$7205759403792804505$35$$35$d2PT n$35$$35$a1H3)))
(define-fun b$36$$35$$35$370 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj)) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj ds_d2Ml) (= lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj (Data.Cons lq_anf$36$$35$$35$7205759403792804536$35$$35$d2Qo lq_anf$36$$35$$35$7205759403792804537$35$$35$d2Qp)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) lq_anf$36$$35$$35$7205759403792804537$35$$35$d2Qp) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804531$35$$35$d2Qj) lq_anf$36$$35$$35$7205759403792804536$35$$35$d2Qo)))
(define-fun b$36$$35$$35$402 () Bool (= lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$530 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)) (= lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW ds_d2Kp) (= lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW (Data.Cons lq_anf$36$$35$$35$7205759403792804576$35$$35$d2R2 lq_anf$36$$35$$35$7205759403792804577$35$$35$d2R3)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) lq_anf$36$$35$$35$7205759403792804577$35$$35$d2R3) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) lq_anf$36$$35$$35$7205759403792804576$35$$35$d2R2)))
(define-fun b$36$$35$$35$594 () Bool (= lq_anf$36$$35$$35$7205759403792804598$35$$35$d2Ro lit$36$$39$Z))
(define-fun b$36$$35$$35$626 () Bool (= lq_anf$36$$35$$35$7205759403792804621$35$$35$d2RL 0))
(define-fun b$36$$35$$35$850 () Bool (= VV$35$$35$F$35$$35$18 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804622$35$$35$d2RM) lq_anf$36$$35$$35$7205759403792804623$35$$35$d2RN) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804625$35$$35$d2RP) lq_anf$36$$35$$35$7205759403792804626$35$$35$d2RQ) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$83 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$275 () Bool (= lq_anf$36$$35$$35$7205759403792804506$35$$35$d2PU lit$36$src$47$Data.hs$58$$40$42$44$1$41$$45$$40$44$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$371 () Bool (= lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk ds_d2Mk))
(define-fun b$36$$35$$35$531 () Bool (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX ds_d2Ko))
(define-fun b$36$$35$$35$595 () Bool (= lq_anf$36$$35$$35$7205759403792804599$35$$35$d2Rp (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804598$35$$35$d2Ro)))
(define-fun b$36$$35$$35$659 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (= lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0)))
(define-fun b$36$$35$$35$691 () Bool (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn ds_d2O5))
(define-fun b$36$$35$$35$851 () Bool (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804617$35$$35$d2RH) lq_anf$36$$35$$35$7205759403792804618$35$$35$d2RI) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804620$35$$35$d2RK) lq_anf$36$$35$$35$7205759403792804621$35$$35$d2RL) fix$36$$36$krep_a1Sc)))
(define-fun b$36$$35$$35$212 () Bool (= lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF ds_d2NN))
(define-fun b$36$$35$$35$532 () Bool (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX ds_d2Ko))
(define-fun b$36$$35$$35$596 () Bool (= lq_anf$36$$35$$35$7205759403792804600$35$$35$d2Rq 0))
(define-fun b$36$$35$$35$628 () Bool (= lq_anf$36$$35$$35$7205759403792804622$35$$35$d2RM 13994593379717568269))
(define-fun b$36$$35$$35$692 () Bool (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn ds_d2O5))
(define-fun b$36$$35$$35$852 () Bool (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804612$35$$35$d2RC) lq_anf$36$$35$$35$7205759403792804613$35$$35$d2RD) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804615$35$$35$d2RF) lq_anf$36$$35$$35$7205759403792804616$35$$35$d2RG) fix$36$$36$krep_a1Sb)))
(define-fun b$36$$35$$35$533 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX Data.Nil) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX ds_d2Ko)))
(define-fun b$36$$35$$35$629 () Bool (= lq_anf$36$$35$$35$7205759403792804623$35$$35$d2RN 2244670395768145670))
(define-fun b$36$$35$$35$661 () Bool (= lq_anf$36$$35$$35$7205759403792804644$35$$35$d2S8 12265814198206335468))
(define-fun b$36$$35$$35$693 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn)) (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn Data.Z) (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn ds_d2O5)))
(define-fun b$36$$35$$35$853 () Bool (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)))
(define-fun b$36$$35$$35$86 () Bool (= Data.$36$fEqTreeN Data.$36$fEqTreeN))
(define-fun b$36$$35$$35$214 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF)) (= lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF ds_d2NN) (= lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF (Data.S lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804491$35$$35$d2PF) lq_anf$36$$35$$35$7205759403792804498$35$$35$d2PM)))
(define-fun b$36$$35$$35$310 () Bool (= lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 ds_d2MQ))
(define-fun b$36$$35$$35$374 () Bool (= lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk ds_d2Mk))
(define-fun b$36$$35$$35$534 () Bool (= lq_anf$36$$35$$35$7205759403792804572$35$$35$d2QY lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$598 () Bool (= fix$36$$36$krep_a1Se (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S4) fix$36$$36$krep_a1S4)))
(define-fun b$36$$35$$35$630 () Bool (= lq_anf$36$$35$$35$7205759403792804624$35$$35$d2RO lit$36$ListN2))
(define-fun b$36$$35$$35$662 () Bool (= lq_anf$36$$35$$35$7205759403792804645$35$$35$d2S9 13561667366629275567))
(define-fun b$36$$35$$35$694 () Bool (= lq_anf$36$$35$$35$7205759403792804660$35$$35$d2So 0))
(define-fun b$36$$35$$35$854 () Bool (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804606$35$$35$d2Rw) lq_anf$36$$35$$35$7205759403792804607$35$$35$d2Rx) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804609$35$$35$d2Rz) lq_anf$36$$35$$35$7205759403792804610$35$$35$d2RA) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$215 () Bool (= lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG n$35$$35$a1GV))
(define-fun b$36$$35$$35$407 () Bool (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr ds_d2M5))
(define-fun b$36$$35$$35$535 () Bool (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX ds_d2Ko))
(define-fun b$36$$35$$35$599 () Bool (= lq_anf$36$$35$$35$7205759403792804601$35$$35$d2Rr 4769161086921885621))
(define-fun b$36$$35$$35$631 () Bool (= lq_anf$36$$35$$35$7205759403792804625$35$$35$d2RP (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804624$35$$35$d2RO)))
(define-fun b$36$$35$$35$663 () Bool (= lq_anf$36$$35$$35$7205759403792804646$35$$35$d2Sa lit$36$$39$Leaf))
(define-fun b$36$$35$$35$695 () Bool (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn ds_d2O5))
(define-fun b$36$$35$$35$855 () Bool (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804601$35$$35$d2Rr) lq_anf$36$$35$$35$7205759403792804602$35$$35$d2Rs) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804604$35$$35$d2Ru) lq_anf$36$$35$$35$7205759403792804605$35$$35$d2Rv) fix$36$$36$krep_a1Se)))
(define-fun b$36$$35$$35$88 () Bool (= Data.Z Data.Z))
(define-fun b$36$$35$$35$376 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk)) (= lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk ds_d2Mk) (= lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk (Data.S n$35$$35$a1Hf)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804532$35$$35$d2Qk) n$35$$35$a1Hf)))
(define-fun b$36$$35$$35$600 () Bool (= lq_anf$36$$35$$35$7205759403792804602$35$$35$d2Rs 10110329165863461724))
(define-fun b$36$$35$$35$632 () Bool (= lq_anf$36$$35$$35$7205759403792804626$35$$35$d2RQ 0))
(define-fun b$36$$35$$35$664 () Bool (= lq_anf$36$$35$$35$7205759403792804647$35$$35$d2Sb (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804646$35$$35$d2Sa)))
(define-fun b$36$$35$$35$856 () Bool (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804596$35$$35$d2Rm) lq_anf$36$$35$$35$7205759403792804597$35$$35$d2Rn) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804599$35$$35$d2Rp) lq_anf$36$$35$$35$7205759403792804600$35$$35$d2Rq) fix$36$$36$krep_a1S4)))
(define-fun b$36$$35$$35$89 () Bool (= Data.$36$fShowN Data.$36$fShowN))
(define-fun b$36$$35$$35$313 () Bool (= lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 ds_d2MQ))
(define-fun b$36$$35$$35$377 () Bool (= lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql ds_d2Ml))
(define-fun b$36$$35$$35$409 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr)) (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr ds_d2M5) (= lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr (Data.S n$35$$35$a1Hk)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804539$35$$35$d2Qr) n$35$$35$a1Hk)))
(define-fun b$36$$35$$35$601 () Bool (= lq_anf$36$$35$$35$7205759403792804603$35$$35$d2Rt lit$36$$39$S))
(define-fun b$36$$35$$35$665 () Bool (= lq_anf$36$$35$$35$7205759403792804648$35$$35$d2Sc 0))
(define-fun b$36$$35$$35$697 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn)) (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn ds_d2O5) (= lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn (Data.S n$35$$35$a1GR)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804659$35$$35$d2Sn) n$35$$35$a1GR)))
(define-fun b$36$$35$$35$857 () Bool (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)))
(define-fun b$36$$35$$35$90 () Bool (= Data.$36$fEqN Data.$36$fEqN))
(define-fun b$36$$35$$35$218 () Bool (= lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG n$35$$35$a1GV))
(define-fun b$36$$35$$35$378 () Bool (= lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql ds_d2Ml))
(define-fun b$36$$35$$35$410 () Bool (= lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu ds_d2M6))
(define-fun b$36$$35$$35$538 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX ds_d2Ko) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (Data.Cons x$35$$35$a1I3 xs$35$$35$a1I4)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) xs$35$$35$a1I4) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) x$35$$35$a1I3)))
(define-fun b$36$$35$$35$602 () Bool (= lq_anf$36$$35$$35$7205759403792804604$35$$35$d2Ru (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792804603$35$$35$d2Rt)))
(define-fun b$36$$35$$35$698 () Bool (= lq_anf$36$$35$$35$7205759403792804661$35$$35$d2Sp 1))
(define-fun b$36$$35$$35$858 () Bool (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792804590$35$$35$d2Rg) lq_anf$36$$35$$35$7205759403792804591$35$$35$d2Rh) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792804593$35$$35$d2Rj) lq_anf$36$$35$$35$7205759403792804594$35$$35$d2Rk) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$91 () Bool (= Data.$36$fEqListN2 Data.$36$fEqListN2))
(define-fun b$36$$35$$35$315 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4)) (= lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 ds_d2MQ) (= lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4 (Data.S lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804516$35$$35$d2Q4) lq_anf$36$$35$$35$7205759403792804524$35$$35$d2Qc)))
(define-fun b$36$$35$$35$379 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql)) (= lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql Data.Nil) (= lq_anf$36$$35$$35$7205759403792804533$35$$35$d2Ql ds_d2Ml)))
(define-fun b$36$$35$$35$411 () Bool (= lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu ds_d2M6))
(define-fun b$36$$35$$35$539 () Bool (= lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ ds_d2Kp))
(define-fun b$36$$35$$35$603 () Bool (= lq_anf$36$$35$$35$7205759403792804605$35$$35$d2Rv 0))
(define-fun b$36$$35$$35$635 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (= lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0)))
(define-fun b$36$$35$$35$667 () Bool (= fix$36$$36$krep_a1S6 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S2) fix$36$$36$krep_a1S2)))
(define-fun b$36$$35$$35$699 () Bool (and (= lq_anf$36$$35$$35$7205759403792804662$35$$35$d2Sq (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792804661$35$$35$d2Sp)) (= lq_anf$36$$35$$35$7205759403792804662$35$$35$d2Sq lq_anf$36$$35$$35$7205759403792804661$35$$35$d2Sp)))
(define-fun b$36$$35$$35$859 () Bool (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792804587$35$$35$d2Rd) lq_anf$36$$35$$35$7205759403792804589$35$$35$d2Rf)))
(define-fun b$36$$35$$35$92 () Bool (= Data.$36$fShowListN Data.$36$fShowListN))
(define-fun b$36$$35$$35$220 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG)) (= lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG n$35$$35$a1GV) (= lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG (Data.S lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792804492$35$$35$d2PG) lq_anf$36$$35$$35$7205759403792804497$35$$35$d2PL)))
(define-fun b$36$$35$$35$316 () Bool (= lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 n$35$$35$a1H7))
(define-fun b$36$$35$$35$380 () Bool (= lq_anf$36$$35$$35$7205759403792804534$35$$35$d2Qm lit$36$src$47$Data.hs$58$$40$66$44$1$41$$45$$40$68$44$51$41$$124$function$32$takeListN))
(define-fun b$36$$35$$35$412 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu)) (= lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu Data.Nil) (= lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu ds_d2M6)))
(define-fun b$36$$35$$35$540 () Bool (= lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ ds_d2Kp))
(define-fun b$36$$35$$35$668 () Bool (= fix$36$$36$krep_a1S5 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S2) fix$36$$36$krep_a1S6)))
(define-fun b$36$$35$$35$700 () Bool (and (= lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr (apply$35$$35$48 Data.n_to_int n$35$$35$a1GR)) (= lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr (ite (is-Data.Z n$35$$35$a1GR) 0 (+ 1 (apply$35$$35$48 Data.n_to_int (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a1GR))))) (<= 0 lq_anf$36$$35$$35$7205759403792804663$35$$35$d2Sr)))
(define-fun b$36$$35$$35$860 () Bool (and (= VV$35$$35$F$35$$35$28 lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$28 lq_anf$36$$35$$35$7205759403792804574$35$$35$d2R0)))
(define-fun b$36$$35$$35$221 () Bool (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH ds_d2NN))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792804501$35$$35$d2PP ds_d2Nb))
(define-fun b$36$$35$$35$413 () Bool (= lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$541 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ)) (= lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ Data.Nil) (= lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ ds_d2Kp)))
(define-fun b$36$$35$$35$605 () Bool (= lq_anf$36$$35$$35$7205759403792804606$35$$35$d2Rw 9267858004567040037))
(define-fun b$36$$35$$35$637 () Bool (= lq_anf$36$$35$$35$7205759403792804628$35$$35$d2RS 7039996470952966505))
(define-fun b$36$$35$$35$669 () Bool (= fix$36$$36$krep_a1S3 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1S4) fix$36$$36$krep_a1S5)))
(define-fun b$36$$35$$35$861 () Bool (and (= VV$35$$35$F$35$$35$29 lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$29 lq_anf$36$$35$$35$7205759403792804572$35$$35$d2QY)))
(define-fun b$36$$35$$35$222 () Bool (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH ds_d2NN))
(define-fun b$36$$35$$35$542 () Bool (= lq_anf$36$$35$$35$7205759403792804574$35$$35$d2R0 lit$36$src$47$Data.hs$58$$40$167$44$1$41$$45$$40$169$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$606 () Bool (= lq_anf$36$$35$$35$7205759403792804607$35$$35$d2Rx 13373922290392293595))
(define-fun b$36$$35$$35$638 () Bool (= lq_anf$36$$35$$35$7205759403792804629$35$$35$d2RT 15490813844256397028))
(define-fun b$36$$35$$35$670 () Bool (= lq_anf$36$$35$$35$7205759403792804649$35$$35$d2Sd 344504926064639210))
(define-fun b$36$$35$$35$862 () Bool (and (= VV$35$$35$F$35$$35$30 lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$30 lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv)))
(define-fun b$36$$35$$35$223 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH) (not (is-Data.S lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH)) (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH Data.Z) (= lq_anf$36$$35$$35$7205759403792804493$35$$35$d2PH ds_d2NN)))
(define-fun b$36$$35$$35$319 () Bool (= lq_anf$36$$35$$35$7205759403792804517$35$$35$d2Q5 n$35$$35$a1H7))
(define-fun b$36$$35$$35$607 () Bool (= lq_anf$36$$35$$35$7205759403792804608$35$$35$d2Ry lit$36$ListN))
(define-fun b$36$$35$$35$639 () Bool (= lq_anf$36$$35$$35$7205759403792804630$35$$35$d2RU lit$36$$39$Nil2))
(define-fun b$36$$35$$35$671 () Bool (= lq_anf$36$$35$$35$7205759403792804650$35$$35$d2Se 8919989143850663641))
(define-fun b$36$$35$$35$863 () Bool (and (= VV$35$$35$F$35$$35$31 lit$36$src$47$Data.hs$58$$40$72$44$1$41$$45$$40$74$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$31 lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt)))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$832 b$36$$35$$35$130 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$364 b$36$$35$$35$174 b$36$$35$$35$367 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$370 b$36$$35$$35$83 b$36$$35$$35$371 b$36$$35$$35$86 b$36$$35$$35$374 b$36$$35$$35$88 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$90 b$36$$35$$35$378 b$36$$35$$35$91 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$380))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$321 b$36$$35$$35$833 b$36$$35$$35$130 b$36$$35$$35$322 b$36$$35$$35$134 b$36$$35$$35$326 b$36$$35$$35$71 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$74 b$36$$35$$35$330 b$36$$35$$35$75 b$36$$35$$35$331 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$332 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$310 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$315 b$36$$35$$35$92 b$36$$35$$35$316 b$36$$35$$35$319))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$321 b$36$$35$$35$130 b$36$$35$$35$322 b$36$$35$$35$834 b$36$$35$$35$323 b$36$$35$$35$324 b$36$$35$$35$325 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$310 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$315 b$36$$35$$35$92 b$36$$35$$35$316 b$36$$35$$35$319))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$130 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$835 b$36$$35$$35$134 b$36$$35$$35$262 b$36$$35$$35$71 b$36$$35$$35$264 b$36$$35$$35$265 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$269 b$36$$35$$35$174 b$36$$35$$35$271 b$36$$35$$35$176 b$36$$35$$35$272 b$36$$35$$35$273 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$274 b$36$$35$$35$83 b$36$$35$$35$275 b$36$$35$$35$86 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$253))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$130 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$836 b$36$$35$$35$134 b$36$$35$$35$262 b$36$$35$$35$71 b$36$$35$$35$264 b$36$$35$$35$265 b$36$$35$$35$74 b$36$$35$$35$266 b$36$$35$$35$75 b$36$$35$$35$267 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$268 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$253))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$225 b$36$$35$$35$130 b$36$$35$$35$227 b$36$$35$$35$228 b$36$$35$$35$229 b$36$$35$$35$837 b$36$$35$$35$134 b$36$$35$$35$230 b$36$$35$$35$71 b$36$$35$$35$231 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$209 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$212 b$36$$35$$35$86 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$218 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$130 b$36$$35$$35$134 b$36$$35$$35$838 b$36$$35$$35$71 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$209 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$212 b$36$$35$$35$86 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$218 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2997 Int) (lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 Int)) (and (= VV$35$$35$2997 fix$36$$36$krep_a1Sb) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 fix$36$$36$krep_a1Sb) (exists ((lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 VV$35$$35$F$35$$35$21))))) (exists ((lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 Int) (VV$35$$35$2827 Int)) (and (= VV$35$$35$2827 fix$36$$36$krep_a1S4) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 fix$36$$36$krep_a1S4) (exists ((lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl Int) (VV$35$$35$F$35$$35$25 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3367 Int) (lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 Int)) (and (= VV$35$$35$3367 fix$36$$36$krep_a1S2) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 fix$36$$36$krep_a1S2) (exists ((VV$35$$35$F$35$$35$13 Int) (lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 Int)) (and (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (= lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 VV$35$$35$F$35$$35$13))))) (exists ((lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 Int) (VV$35$$35$3177 Int)) (and (= VV$35$$35$3177 fix$36$$36$krep_a1S7) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 fix$36$$36$krep_a1S7) (exists ((VV$35$$35$F$35$$35$17 Int) (lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR Int)) (and (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (= lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 VV$35$$35$F$35$$35$17)))))) b$36$$35$$35$130 b$36$$35$$35$643 b$36$$35$$35$644 b$36$$35$$35$645 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$839 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$620 b$36$$35$$35$621 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$691 b$36$$35$$35$86 b$36$$35$$35$598 b$36$$35$$35$695 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$697 b$36$$35$$35$90 b$36$$35$$35$698 b$36$$35$$35$91 b$36$$35$$35$667 b$36$$35$$35$699 b$36$$35$$35$92 b$36$$35$$35$668 b$36$$35$$35$700 b$36$$35$$35$669))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$7)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2997 Int) (lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 Int)) (and (= VV$35$$35$2997 fix$36$$36$krep_a1Sb) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 fix$36$$36$krep_a1Sb) (exists ((lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 VV$35$$35$F$35$$35$21))))) (exists ((lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 Int) (VV$35$$35$2827 Int)) (and (= VV$35$$35$2827 fix$36$$36$krep_a1S4) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 fix$36$$36$krep_a1S4) (exists ((lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl Int) (VV$35$$35$F$35$$35$25 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3367 Int) (lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 Int)) (and (= VV$35$$35$3367 fix$36$$36$krep_a1S2) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 fix$36$$36$krep_a1S2) (exists ((VV$35$$35$F$35$$35$13 Int) (lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 Int)) (and (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (= lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 VV$35$$35$F$35$$35$13))))) (exists ((lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 Int) (VV$35$$35$3177 Int)) (and (= VV$35$$35$3177 fix$36$$36$krep_a1S7) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 fix$36$$36$krep_a1S7) (exists ((VV$35$$35$F$35$$35$17 Int) (lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR Int)) (and (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (= lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 VV$35$$35$F$35$$35$17)))))) b$36$$35$$35$130 b$36$$35$$35$643 b$36$$35$$35$644 b$36$$35$$35$645 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$840 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$620 b$36$$35$$35$621 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$691 b$36$$35$$35$692 b$36$$35$$35$693 b$36$$35$$35$86 b$36$$35$$35$598 b$36$$35$$35$694 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$667 b$36$$35$$35$92 b$36$$35$$35$668 b$36$$35$$35$669))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$8)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2997 Int) (lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 Int)) (and (= VV$35$$35$2997 fix$36$$36$krep_a1Sb) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 fix$36$$36$krep_a1Sb) (exists ((lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 VV$35$$35$F$35$$35$21))))) (exists ((lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 Int) (VV$35$$35$2827 Int)) (and (= VV$35$$35$2827 fix$36$$36$krep_a1S4) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 fix$36$$36$krep_a1S4) (exists ((lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl Int) (VV$35$$35$F$35$$35$25 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3367 Int) (lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 Int)) (and (= VV$35$$35$3367 fix$36$$36$krep_a1S2) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 fix$36$$36$krep_a1S2) (exists ((VV$35$$35$F$35$$35$13 Int) (lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 Int)) (and (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (= lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 VV$35$$35$F$35$$35$13))))) (exists ((lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 Int) (VV$35$$35$3177 Int)) (and (= VV$35$$35$3177 fix$36$$36$krep_a1S7) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 fix$36$$36$krep_a1S7) (exists ((VV$35$$35$F$35$$35$17 Int) (lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR Int)) (and (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (= lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 VV$35$$35$F$35$$35$17)))))) b$36$$35$$35$130 b$36$$35$$35$643 b$36$$35$$35$644 b$36$$35$$35$645 b$36$$35$$35$134 b$36$$35$$35$678 b$36$$35$$35$71 b$36$$35$$35$841 b$36$$35$$35$74 b$36$$35$$35$682 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$620 b$36$$35$$35$621 b$36$$35$$35$685 b$36$$35$$35$174 b$36$$35$$35$686 b$36$$35$$35$687 b$36$$35$$35$176 b$36$$35$$35$688 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$598 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$667 b$36$$35$$35$92 b$36$$35$$35$668 b$36$$35$$35$669))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$9)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2997 Int) (lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 Int)) (and (= VV$35$$35$2997 fix$36$$36$krep_a1Sb) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 fix$36$$36$krep_a1Sb) (exists ((lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792804611$35$$35$d2RB)) (= lq_karg$36$VV$35$$35$2997$35$$35$k_$35$$35$2998 VV$35$$35$F$35$$35$21))))) (exists ((lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 Int) (VV$35$$35$2827 Int)) (and (= VV$35$$35$2827 fix$36$$36$krep_a1S4) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 fix$36$$36$krep_a1S4) (exists ((lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl Int) (VV$35$$35$F$35$$35$25 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl) 0) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792804595$35$$35$d2Rl)) (= lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 VV$35$$35$F$35$$35$25))))) (exists ((VV$35$$35$3367 Int) (lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 Int)) (and (= VV$35$$35$3367 fix$36$$36$krep_a1S2) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 fix$36$$36$krep_a1S2) (exists ((VV$35$$35$F$35$$35$13 Int) (lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 Int)) (and (= VV$35$$35$F$35$$35$13 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7)) (= lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804643$35$$35$d2S7) 0) (= lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 VV$35$$35$F$35$$35$13))))) (exists ((lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 Int) (VV$35$$35$3177 Int)) (and (= VV$35$$35$3177 fix$36$$36$krep_a1S7) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 fix$36$$36$krep_a1S7) (exists ((VV$35$$35$F$35$$35$17 Int) (lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR Int)) (and (= VV$35$$35$F$35$$35$17 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR)) (= lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804627$35$$35$d2RR) 0) (= lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 VV$35$$35$F$35$$35$17)))))) b$36$$35$$35$130 b$36$$35$$35$643 b$36$$35$$35$644 b$36$$35$$35$645 b$36$$35$$35$134 b$36$$35$$35$678 b$36$$35$$35$71 b$36$$35$$35$679 b$36$$35$$35$680 b$36$$35$$35$681 b$36$$35$$35$74 b$36$$35$$35$842 b$36$$35$$35$75 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$620 b$36$$35$$35$621 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$598 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$667 b$36$$35$$35$92 b$36$$35$$35$668 b$36$$35$$35$669))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$10)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$130 b$36$$35$$35$517 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$520 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$523 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$524 b$36$$35$$35$174 b$36$$35$$35$527 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$530 b$36$$35$$35$83 b$36$$35$$35$531 b$36$$35$$35$86 b$36$$35$$35$535 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$538 b$36$$35$$35$91 b$36$$35$$35$539 b$36$$35$$35$92 b$36$$35$$35$540 b$36$$35$$35$860 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$130 b$36$$35$$35$517 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$520 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$523 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$524 b$36$$35$$35$174 b$36$$35$$35$527 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$530 b$36$$35$$35$83 b$36$$35$$35$531 b$36$$35$$35$532 b$36$$35$$35$533 b$36$$35$$35$86 b$36$$35$$35$534 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$861))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$130 b$36$$35$$35$389 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$392 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$395 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$396 b$36$$35$$35$174 b$36$$35$$35$176 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$407 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$409 b$36$$35$$35$90 b$36$$35$$35$410 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$413 b$36$$35$$35$862))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$130 b$36$$35$$35$389 b$36$$35$$35$134 b$36$$35$$35$71 b$36$$35$$35$392 b$36$$35$$35$74 b$36$$35$$35$75 b$36$$35$$35$395 b$36$$35$$35$76 b$36$$35$$35$172 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$174 b$36$$35$$35$398 b$36$$35$$35$399 b$36$$35$$35$176 b$36$$35$$35$400 b$36$$35$$35$401 b$36$$35$$35$82 b$36$$35$$35$178 b$36$$35$$35$402 b$36$$35$$35$83 b$36$$35$$35$86 b$36$$35$$35$88 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$91 b$36$$35$$35$92 b$36$$35$$35$863))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
