(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.TreeN 0)) ((par () ((Data.Node (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$2 Data.TreeN) (lqdc$35$$35$$36$select$35$$35$Data.Node$35$$35$1 Data.TreeN)) Data.Leaf))))
(declare-datatypes ((Data.ListN2 0)) ((par () (Data.Nil2 (Data.Cons2 (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 Data.ListN2))))))
(declare-datatypes ((Data.ListN 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.ListN))))))
(declare-fun GHC.List.replicate () Int)
(declare-fun x$35$$35$a1MR () Data.N)
(declare-fun GHC.Types.LT () Int)
(declare-fun r$35$$35$a1NC () Data.TreeN)
(declare-fun l$35$$35$a1Mf () Data.ListN)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun m$35$$35$a1LN () Data.N)
(declare-fun x_Tuple22 () Int)
(declare-fun n$35$$35$a1Md () Data.N)
(declare-fun lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN () Str)
(declare-fun Data.Either.Right () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3694 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun lq_tmp$36$x$35$$35$1247 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_tmp$36$x$35$$35$1238 () Bool)
(declare-fun papp6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805019$35$$35$d2Yb () Data.N)
(declare-fun fix$36$$36$krep_a1ZI () Int)
(declare-fun x$35$$35$a1Mi () Data.N)
(declare-fun ds_d2RP () Data.ListN2)
(declare-fun lq_tmp$36$x$35$$35$4546 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX () Data.N)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun f$35$$35$a1Mg () Int)
(declare-fun ys$35$$35$a1MK () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m () Int)
(declare-fun h$35$$35$a1My () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1YI () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun fix$36$$36$krep_a1ZD () Int)
(declare-fun lq_tmp$36$x$35$$35$4820 () Data.ListN)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805072$35$$35$d2Z2 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w () Int)
(declare-fun ds_d2ST () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f () Str)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805031$35$$35$d2Yn () Str)
(declare-fun GHC.List.splitAt () Int)
(declare-fun n$35$$35$a1Ni () Data.N)
(declare-fun fst () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Data.$36$tc$39$Cons2 () Int)
(declare-fun snd () Int)
(declare-fun ds_d2Wp () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4 () Data.N)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_tmp$36$x$35$$35$3850 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP () Data.N)
(declare-fun GHC.List.break () Int)
(declare-fun x1$35$$35$a1Nv () Data.N)
(declare-fun ds_d2St () Data.ListN)
(declare-fun Data.leN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805076$35$$35$d2Z6 () Str)
(declare-fun Data.addN () Int)
(declare-fun xs$35$$35$a1Nt () Data.ListN2)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun ds_d2W7 () Data.ListN)
(declare-fun x$35$$35$a1MC () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2182 () Data.ListN)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun ds_d2Ww () Data.ListN)
(declare-fun GHC.List.tail () Int)
(declare-fun h$35$$35$a1Ms () Data.N)
(declare-fun lq_tmp$36$x$35$$35$1462 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun Data.lengthListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805034$35$$35$d2Yq () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI () Str)
(declare-fun t$35$$35$a1MB () Data.ListN)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun x2$35$$35$a1No () Data.N)
(declare-fun lit$36$N () Str)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun ds_d2Tq () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Yg () Int)
(declare-fun lit$36$$39$Nil2 () Str)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Xl () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun ds_d2RG () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK () Data.N)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun ds_d2Ux () Data.N)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun lq_tmp$36$x$35$$35$3456 () Data.ListN2)
(declare-fun lq_tmp$36$x$35$$35$4044 () Int)
(declare-fun ys$35$$35$a1Ng () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805092$35$$35$d2Zm () Data.ListN)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Data.initListN () Int)
(declare-fun fix$36$$36$cshow$35$$35$a1Zn () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun h$35$$35$a1Me () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805069$35$$35$d2YZ () Str)
(declare-fun Data.Foldable.null () Int)
(declare-fun ds_d2Se () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 () Str)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun xs$35$$35$a1Ne () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$4030 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$4470 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1Zt () Int)
(declare-fun b$35$$35$a1LF () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805018$35$$35$d2Ya () Data.N)
(declare-fun n$35$$35$a1LO () Data.N)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun fix$36$$36$krep_a1ZP () Int)
(declare-fun papp4 () Int)
(declare-fun lq_tmp$36$x$35$$35$1407 () Data.N)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun Data.insertListN () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Str)
(declare-fun Data.$36$tc$39$Node () Int)
(declare-fun Data.reverseListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy () Data.N)
(declare-fun lq_tmp$36$x$35$$35$5011 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$5099 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4 () Data.N)
(declare-fun n$35$$35$a1M9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS () Data.ListN2)
(declare-fun n$35$$35$a1LP () Data.N)
(declare-fun fix$36$$36$krep_a1ZO () Int)
(declare-fun ds_d2RV () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2912 () Data.ListN)
(declare-fun ys$35$$35$a1N3 () Data.ListN)
(declare-fun ds_d2UL () Data.ListN)
(declare-fun m$35$$35$a1LV () Data.N)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ () Data.ListN2)
(declare-fun GHC.Base.. () Int)
(declare-fun lit$36$Z () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z () Int)
(declare-fun x1$35$$35$a1Nx () Data.N)
(declare-fun t$35$$35$a1Mv () Data.ListN)
(declare-fun l1$35$$35$a1M7 () Data.ListN)
(declare-fun l$35$$35$a1NE () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805183$35$$35$d30P () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x () Int)
(declare-fun xs$35$$35$a1Nz () Data.ListN2)
(declare-fun Proof.trivial () Int)
(declare-fun fix$36$$36$krep_a1ZJ () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Str)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$3239 () Data.ListN2)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun Data.$36$fEqListN () Int)
(declare-fun lq_karg$36$VV$35$$35$3934$35$$35$k_$35$$35$3935 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 () Int)
(declare-fun lq_karg$36$VV$35$$35$3976$35$$35$k_$35$$35$3977 () Int)
(declare-fun lq_karg$36$VV$35$$35$4242$35$$35$k_$35$$35$4243 () Int)
(declare-fun h$35$$35$a1Mq () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3598$35$$35$k_$35$$35$3599 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk () Data.N)
(declare-fun n$35$$35$a1Mw () Data.N)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun xs$35$$35$a1Mj () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 () Int)
(declare-fun ds_d2WU () Data.N)
(declare-fun lit$36$$39$Leaf () Str)
(declare-fun lq_tmp$36$x$35$$35$4513 () Int)
(declare-fun ds_d2UZ () Data.ListN)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun lit$36$$39$Nil () Str)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lit$36$$39$Cons2 () Str)
(declare-fun y$35$$35$a1Nf () Data.N)
(declare-fun x1$35$$35$a1Nn () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun x2$35$$35$a1MF () Data.N)
(declare-fun Data.implies () Int)
(declare-fun xs$35$$35$a1Nl () Data.ListN2)
(declare-fun h$35$$35$a1ML () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2545 () Data.N)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun ds_d2WH () Data.N)
(declare-fun ds_d2TS () Data.ListN)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun lq_tmp$36$x$35$$35$2466 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D () Str)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1XI () Int)
(declare-fun Data.concatListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805049$35$$35$d2YF () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805173$35$$35$d30F () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j () Int)
(declare-fun lq_tmp$36$x$35$$35$3864 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun l2$35$$35$a1M5 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h () Int)
(declare-fun y$35$$35$a1MJ () Data.N)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun m$35$$35$a1M3 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun n$35$$35$a1LI () Data.N)
(declare-fun VV$35$$35$F$35$$35$36 () Str)
(declare-fun Data.$36$tc$39$Nil2 () Int)
(declare-fun Data.$36$tc$39$Cons () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE () Data.ListN)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N () Int)
(declare-fun Data.assumption () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG () Str)
(declare-fun lit$36$ListN2 () Str)
(declare-fun Data.$36$tcN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805189$35$$35$d30V () Int)
(declare-fun Data.takeListN2 () Int)
(declare-fun l$35$$35$a1Mb () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2457 () Data.N)
(declare-fun m$35$$35$a1LJ () Data.N)
(declare-fun lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805195$35$$35$d311 () Int)
(declare-fun Data.lastListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805197$35$$35$d313 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k () Str)
(declare-fun ds_d2UK () Data.N)
(declare-fun m$35$$35$a1LQ () Data.N)
(declare-fun ds_d2VP () Data.N)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun tail () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K () Int)
(declare-fun l$35$$35$a1NB () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv () Data.N)
(declare-fun charX () Int)
(declare-fun fix$36$$36$krep_a1ZM () Int)
(declare-fun x$35$$35$a1Mm () Data.N)
(declare-fun Data.sortListN () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Str)
(declare-fun Data.n_to_int () Int)
(declare-fun Data.leqN () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun ds_d2TG () Data.ListN)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun x$35$$35$a1MH () Data.N)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2527 () Data.N)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun x2$35$$35$a1Ny () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y () Str)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 () Data.N)
(declare-fun t$35$$35$a1Mt () Data.ListN)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Yo () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 () Data.N)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1XX () Int)
(declare-fun y$35$$35$a1N2 () Data.N)
(declare-fun n$35$$35$a1LW () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH () Data.ListN)
(declare-fun GHC.List.scanl () Int)
(declare-fun fix$36$$36$krep_a1ZH () Int)
(declare-fun VV$35$$35$F$35$$35$47 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d () Int)
(declare-fun ys$35$$35$a1Nq () Data.ListN2)
(declare-fun GHC.List.zip () Int)
(declare-fun ds_d2Vu () Data.N)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$51 () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805091$35$$35$d2Zl () Data.N)
(declare-fun ds_d2Th () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD () Data.ListN)
(declare-fun GHC.Types.False () Bool)
(declare-fun n$35$$35$a1M1 () Data.N)
(declare-fun n$35$$35$a1LX () Data.N)
(declare-fun isJust () Int)
(declare-fun fix$36$$36$krep_a1ZG () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lit$36$$39$Node () Str)
(declare-fun GHC.List.span () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805017$35$$35$d2Y9 () Str)
(declare-fun VV$35$$35$F$35$$35$48 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j () Str)
(declare-fun Data.lengthListN_int () Int)
(declare-fun lq_tmp$36$x$35$$35$3394 () Data.ListN2)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n () Str)
(declare-fun lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805029$35$$35$d2Yl () Str)
(declare-fun x2$35$$35$a1Ns () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v () Int)
(declare-fun Data.lastListN$39$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun x$35$$35$a1N9 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N () Int)
(declare-fun Data.singletonListN2 () Int)
(declare-fun n$35$$35$a1M4 () Data.N)
(declare-fun t$35$$35$a1N5 () Data.ListN)
(declare-fun fix$36$$36$dIP_a1Xi () Int)
(declare-fun ds_d2Ud () Data.ListN)
(declare-fun len () Int)
(declare-fun lit$36$undefined () Str)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t () Str)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2130 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L () Data.N)
(declare-fun n$35$$35$a1Mo () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV () Data.N)
(declare-fun Data.$36$tc$39$Leaf () Int)
(declare-fun Proof.$38$$38$$38$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX () Data.N)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Str)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun fldList () Int)
(declare-fun n$35$$35$a1MO () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2706 () Data.ListN)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805172$35$$35$d30E () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805078$35$$35$d2Z8 () Data.ListN)
(declare-fun Proof.use () Int)
(declare-fun Data.takeListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O () Str)
(declare-fun Data.zipListN () Int)
(declare-fun Data.heightTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805138$35$$35$d306 () Data.N)
(declare-fun Data.$36$tc$39$Nil () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805077$35$$35$d2Z7 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3 () Data.ListN)
(declare-fun Data.lastOfTwo () Int)
(declare-fun lq_tmp$36$x$35$$35$4471 () Int)
(declare-fun lit$36$ListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 () Data.ListN2)
(declare-fun ds_d2U2 () Data.ListN)
(declare-fun xs$39$$39$$35$$35$a1MG () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN () Data.N)
(declare-fun Data.$36$tc$39$S () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805071$35$$35$d2Z1 () Data.N)
(declare-fun x$35$$35$a1MT () Data.N)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K () Int)
(declare-fun ds_d2VI () Data.TreeN)
(declare-fun lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805188$35$$35$d30U () Int)
(declare-fun Data.countListN () Int)
(declare-fun Data.dropListN2 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN () Data.ListN)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5 () Data.ListN)
(declare-fun lit$36$Nil () Str)
(declare-fun n$35$$35$a1LL () Data.N)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun lq_tmp$36$x$35$$35$1778 () Data.ListN)
(declare-fun GHC.Num.negate () Int)
(declare-fun ds_d2WG () Data.ListN)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805175$35$$35$d30H () Int)
(declare-fun lq_tmp$36$x$35$$35$4234 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805045$35$$35$d2YB () Str)
(declare-fun Data.takeWhileListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J () Str)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a1Zb () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun Data.$36$tcListN2 () Int)
(declare-fun fix$36$$36$krep_a1ZN () Int)
(declare-fun lit$36$$39$Cons () Str)
(declare-fun ds_d2RW () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Str)
(declare-fun ds_d2WZ () Data.N)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1Y5 () Int)
(declare-fun Data.deleteListN () Int)
(declare-fun lq_tmp$36$x$35$$35$4220 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a1YO () Int)
(declare-fun p$35$$35$a1LD () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o () Int)
(declare-fun lit$36$$39$Z () Str)
(declare-fun ds_d2Su () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun Data.$36$fEqTreeN () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k () Int)
(declare-fun xs$35$$35$a1Mn () Data.ListN)
(declare-fun fix$36$$36$krep_a1ZE () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Data.constant () Int)
(declare-fun cast_as () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 () Int)
(declare-fun Data.reverseListN2 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun f$35$$35$a1Mk () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun q$35$$35$a1LE () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g () Int)
(declare-fun h$35$$35$a1Mu () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz () Data.ListN)
(declare-fun x1$35$$35$a1Nr () Data.N)
(declare-fun Data.singletonListN () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_karg$36$VV$35$$35$4589$35$$35$k_$35$$35$4590 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun xs$35$$35$a1Np () Data.ListN2)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lit$36$src$47$Data.hs () Str)
(declare-fun lit$36$TreeN () Str)
(declare-fun xs$35$$35$a1N0 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u () Int)
(declare-fun lit$36$Data () Str)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_tmp$36$x$35$$35$1290 () Data.N)
(declare-fun lq_karg$36$b$35$$35$a1LF$35$$35$k_$35$$35$4590 () Bool)
(declare-fun n$35$$35$a1Nm () Data.N)
(declare-fun ds_d2X3 () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN () Str)
(declare-fun lq_tmp$36$x$35$$35$2546 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$3680 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun ds_d2Uy () Data.ListN)
(declare-fun x$35$$35$a1ND () Data.N)
(declare-fun ds_d2Vb () Data.ListN)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun h$35$$35$a1N4 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$2465 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB () Data.N)
(declare-fun ds_d2Wk () Data.ListN)
(declare-fun Data.minN () Int)
(declare-fun x$35$$35$a1Nd () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805050$35$$35$d2YG () Data.N)
(declare-fun Proof.$61$$61$$61$ () Int)
(declare-fun ds_d2Vg () Data.N)
(declare-fun ys$35$$35$a1Nc () Data.ListN)
(declare-fun x$35$$35$a1NA () Data.N)
(declare-fun x_Tuple33 () Int)
(declare-fun x2$35$$35$a1Nk () Data.N)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun Data.mirrorTreeN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805058$35$$35$d2YO () Str)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC () Data.ListN)
(declare-fun papp5 () Int)
(declare-fun Data.subN () Int)
(declare-fun lq_karg$36$VV$35$$35$4166$35$$35$k_$35$$35$4167 () Int)
(declare-fun ds_d2U7 () Data.ListN)
(declare-fun lq_karg$36$VV$35$$35$3702$35$$35$k_$35$$35$3703 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 () Int)
(declare-fun Data.dropWhileListN () Int)
(declare-fun lq_karg$36$VV$35$$35$3796$35$$35$k_$35$$35$3797 () Int)
(declare-fun Data.concatListN2 () Int)
(declare-fun Data.initConcatListN () Int)
(declare-fun h$35$$35$a1Ma () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3626$35$$35$k_$35$$35$3627 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805176$35$$35$d30I () Int)
(declare-fun lit$36$Cons$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA () Data.N)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC () Data.N)
(declare-fun lq_karg$36$VV$35$$35$3872$35$$35$k_$35$$35$3873 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$VV$35$$35$3754$35$$35$k_$35$$35$3755 () Int)
(declare-fun Data.maxN () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1XA () Int)
(declare-fun lq_karg$36$VV$35$$35$4052$35$$35$k_$35$$35$4053 () Int)
(declare-fun lq_karg$36$VV$35$$35$4124$35$$35$k_$35$$35$4125 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805063$35$$35$d2YT () Data.N)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 () Int)
(declare-fun h$35$$35$a1MA () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a1Z3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 () Str)
(declare-fun lq_karg$36$VV$35$$35$4314$35$$35$k_$35$$35$4315 () Int)
(declare-fun lit$36$$39$S () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 () Data.ListN2)
(declare-fun lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B () Int)
(declare-fun ds_d2Tc () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 () Str)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a1YW () Int)
(declare-fun Data.$36$tcListN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q () Int)
(declare-fun Data.sortedListN () Int)
(declare-fun lq_tmp$36$x$35$$35$4507 () Int)
(declare-fun Proof.by () Int)
(declare-fun n$35$$35$a1LS () Data.N)
(declare-fun Data.Tuple.fst () Int)
(declare-fun fix$36$$36$krep_a1ZL () Int)
(declare-fun ds_d2Uj () Data.ListN)
(declare-fun VV$35$$35$F$35$$35$43 () Str)
(declare-fun Data.nullListN () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun ds_d2Ru () Data.TreeN)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_tmp$36$x$35$$35$3476 () Data.N)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun ds_d2VQ () Data.N)
(declare-fun Data.$36$fShowN () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_tmp$36$x$35$$35$2812 () Data.ListN)
(declare-fun Data.$36$fEqN () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun n$35$$35$a1LT () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805015$35$$35$d2Y7 () Str)
(declare-fun fix$36$$36$krep_a1ZK () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$FomA5bf0y7I6FnA1ZLaDlO () Str)
(declare-fun lq_tmp$36$x$35$$35$4937 () Data.ListN)
(declare-fun Data.$36$fEqListN2 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Str)
(declare-fun Data.$36$trModule () Int)
(declare-fun fromJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU () Data.N)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_tmp$36$x$35$$35$2290 () Data.ListN)
(declare-fun lq_tmp$36$x$35$$35$1945 () Data.N)
(declare-fun ds_d2V6 () Data.ListN)
(declare-fun t$35$$35$a1MW () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 () Data.N)
(declare-fun lq_tmp$36$x$35$$35$2388 () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L () Int)
(declare-fun lit$36$S$32$ () Str)
(declare-fun n$35$$35$a1M0 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805032$35$$35$d2Yo () Data.N)
(declare-fun h$35$$35$a1MV () Data.N)
(declare-fun fix$36$$36$krep_a1ZF () Int)
(declare-fun Data.$36$fShowListN () Int)
(declare-fun Data.dropListN () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun n$35$$35$a1MP () Data.N)
(declare-fun VV$35$$35$F$35$$35$49 () Str)
(declare-fun xs$35$$35$a1N6 () Data.ListN)
(declare-fun GHC.Err.undefined () Int)
(declare-fun Data.ins1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM () Data.N)
(declare-fun Data.elemListN () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Str)
(declare-fun l$35$$35$a1Mr () Data.ListN)
(declare-fun m$35$$35$a1LZ () Data.N)
(declare-fun x2$35$$35$a1Nw () Data.N)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym () Data.N)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun h$35$$35$a1M6 () Data.N)
(declare-fun t$35$$35$a1Mz () Data.ListN)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun ds_d2SM () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G () Int)
(declare-fun lq_tmp$36$x$35$$35$1677 () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805140$35$$35$d308 () Data.N)
(declare-fun Data.$36$tc$39$Z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 () Int)
(declare-fun autolen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805196$35$$35$d312 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN () Str)
(declare-fun ds_d2T2 () Data.ListN)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2 () Str)
(declare-fun x$35$$35$a1MX () Data.N)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun xs$35$$35$a1MS () Data.ListN)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun y$35$$35$a1Nb () Data.N)
(declare-fun x1$35$$35$a1Nj () Data.N)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY () Data.N)
(declare-fun Data.$36$tcTreeN () Int)
(declare-fun lq_tmp$36$x$35$$35$3098 () Data.ListN)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Str)
(declare-fun xs$35$$35$a1Nh () Data.ListN2)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO () Data.N)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun ds_d2TX () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW () Data.ListN2)
(declare-fun r$35$$35$a1NF () Data.TreeN)
(declare-fun a$35$$35$a1LG () Int)
(declare-fun Proof.QED () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805047$35$$35$d2YD () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805060$35$$35$d2YQ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun ds_d2Tx () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805062$35$$35$d2YS () Data.N)
(declare-fun lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW () Data.ListN)
(declare-fun lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy () Data.N)
(declare-fun n$35$$35$a1LH () Data.N)
(declare-fun VV$35$$35$F$35$$35$37 () Str)
(declare-fun ds_d2Uq () Data.ListN)
(declare-fun papp3 () Int)
(declare-fun lq_tmp$36$x$35$$35$4472 () Int)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$39 (Int Data.ListN) Data.TreeN)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Data.ListN)
(declare-fun apply$35$$35$35 (Int Data.ListN) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int Bool) Data.N)
(declare-fun apply$35$$35$23 (Int Str) Data.TreeN)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$56 (Int Data.TreeN) Int)
(declare-fun apply$35$$35$7 (Int Int) Data.TreeN)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int Str) Data.ListN2)
(declare-fun apply$35$$35$54 (Int Data.N) Data.N)
(declare-fun apply$35$$35$46 (Int Data.ListN2) Data.N)
(declare-fun apply$35$$35$53 (Int Data.N) Data.ListN2)
(declare-fun apply$35$$35$45 (Int Data.ListN2) Data.ListN2)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Data.ListN) Data.ListN)
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) Data.TreeN)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.ListN)
(declare-fun apply$35$$35$32 (Int Data.ListN) Int)
(declare-fun apply$35$$35$12 (Int Bool) Data.ListN)
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$13 (Int Bool) Data.ListN2)
(declare-fun apply$35$$35$62 (Int Data.TreeN) Data.N)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Data.ListN2)
(declare-fun apply$35$$35$47 (Int Data.ListN2) Data.TreeN)
(declare-fun apply$35$$35$55 (Int Data.N) Data.TreeN)
(declare-fun apply$35$$35$22 (Int Str) Data.N)
(declare-fun apply$35$$35$40 (Int Data.ListN2) Int)
(declare-fun apply$35$$35$48 (Int Data.N) Int)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int Data.ListN2) Data.ListN)
(declare-fun apply$35$$35$52 (Int Data.N) Data.ListN)
(declare-fun apply$35$$35$37 (Int Data.ListN) Data.ListN2)
(declare-fun apply$35$$35$57 (Int Data.TreeN) Bool)
(declare-fun apply$35$$35$60 (Int Data.TreeN) Data.ListN)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$33 (Int Data.ListN) Bool)
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$42 (Int Data.ListN2) Str)
(declare-fun apply$35$$35$50 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$59 (Int Data.TreeN) (_ BitVec 32))
(declare-fun apply$35$$35$63 (Int Data.TreeN) Data.TreeN)
(declare-fun apply$35$$35$20 (Int Str) Data.ListN)
(declare-fun apply$35$$35$58 (Int Data.TreeN) Str)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$41 (Int Data.ListN2) Bool)
(declare-fun apply$35$$35$49 (Int Data.N) Bool)
(declare-fun apply$35$$35$34 (Int Data.ListN) Str)
(declare-fun apply$35$$35$61 (Int Data.TreeN) Data.ListN2)
(declare-fun apply$35$$35$43 (Int Data.ListN2) (_ BitVec 32))
(declare-fun apply$35$$35$51 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$15 (Int Bool) Data.TreeN)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$6 (Int Int) Data.N)
(declare-fun apply$35$$35$5 (Int Int) Data.ListN2)
(declare-fun apply$35$$35$38 (Int Data.ListN) Data.N)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$39 (Data.ListN) Data.TreeN)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Data.ListN)
(declare-fun coerce$35$$35$35 (Data.ListN) (_ BitVec 32))
(declare-fun coerce$35$$35$14 (Bool) Data.N)
(declare-fun coerce$35$$35$23 (Str) Data.TreeN)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$56 (Data.TreeN) Int)
(declare-fun coerce$35$$35$7 (Int) Data.TreeN)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$21 (Str) Data.ListN2)
(declare-fun coerce$35$$35$54 (Data.N) Data.N)
(declare-fun coerce$35$$35$46 (Data.ListN2) Data.N)
(declare-fun coerce$35$$35$53 (Data.N) Data.ListN2)
(declare-fun coerce$35$$35$45 (Data.ListN2) Data.ListN2)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Data.ListN) Data.ListN)
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) Data.TreeN)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.ListN)
(declare-fun coerce$35$$35$32 (Data.ListN) Int)
(declare-fun coerce$35$$35$12 (Bool) Data.ListN)
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$13 (Bool) Data.ListN2)
(declare-fun coerce$35$$35$62 (Data.TreeN) Data.N)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Data.ListN2)
(declare-fun coerce$35$$35$47 (Data.ListN2) Data.TreeN)
(declare-fun coerce$35$$35$55 (Data.N) Data.TreeN)
(declare-fun coerce$35$$35$22 (Str) Data.N)
(declare-fun coerce$35$$35$40 (Data.ListN2) Int)
(declare-fun coerce$35$$35$48 (Data.N) Int)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 (Data.ListN2) Data.ListN)
(declare-fun coerce$35$$35$52 (Data.N) Data.ListN)
(declare-fun coerce$35$$35$37 (Data.ListN) Data.ListN2)
(declare-fun coerce$35$$35$57 (Data.TreeN) Bool)
(declare-fun coerce$35$$35$60 (Data.TreeN) Data.ListN)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$33 (Data.ListN) Bool)
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$42 (Data.ListN2) Str)
(declare-fun coerce$35$$35$50 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$59 (Data.TreeN) (_ BitVec 32))
(declare-fun coerce$35$$35$63 (Data.TreeN) Data.TreeN)
(declare-fun coerce$35$$35$20 (Str) Data.ListN)
(declare-fun coerce$35$$35$58 (Data.TreeN) Str)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$41 (Data.ListN2) Bool)
(declare-fun coerce$35$$35$49 (Data.N) Bool)
(declare-fun coerce$35$$35$34 (Data.ListN) Str)
(declare-fun coerce$35$$35$61 (Data.TreeN) Data.ListN2)
(declare-fun coerce$35$$35$43 (Data.ListN2) (_ BitVec 32))
(declare-fun coerce$35$$35$51 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$15 (Bool) Data.TreeN)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$6 (Int) Data.N)
(declare-fun coerce$35$$35$5 (Int) Data.ListN2)
(declare-fun coerce$35$$35$38 (Data.ListN) Data.N)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$39 (Data.ListN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Data.ListN) Int)
(declare-fun smt_lambda$35$$35$35 (Data.ListN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$23 (Str Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$56 (Data.TreeN Int) Int)
(declare-fun smt_lambda$35$$35$7 (Int Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 (Str Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$54 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$46 (Data.ListN2 Data.N) Int)
(declare-fun smt_lambda$35$$35$53 (Data.N Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$45 (Data.ListN2 Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Data.ListN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.ListN) Int)
(declare-fun smt_lambda$35$$35$32 (Data.ListN Int) Int)
(declare-fun smt_lambda$35$$35$12 (Bool Data.ListN) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$13 (Bool Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$62 (Data.TreeN Data.N) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$47 (Data.ListN2 Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$55 (Data.N Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$22 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$40 (Data.ListN2 Int) Int)
(declare-fun smt_lambda$35$$35$48 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 (Data.ListN2 Data.ListN) Int)
(declare-fun smt_lambda$35$$35$52 (Data.N Data.ListN) Int)
(declare-fun smt_lambda$35$$35$37 (Data.ListN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$57 (Data.TreeN Bool) Int)
(declare-fun smt_lambda$35$$35$60 (Data.TreeN Data.ListN) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$33 (Data.ListN Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$42 (Data.ListN2 Str) Int)
(declare-fun smt_lambda$35$$35$50 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$59 (Data.TreeN (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$63 (Data.TreeN Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$20 (Str Data.ListN) Int)
(declare-fun smt_lambda$35$$35$58 (Data.TreeN Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$41 (Data.ListN2 Bool) Int)
(declare-fun smt_lambda$35$$35$49 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.ListN Str) Int)
(declare-fun smt_lambda$35$$35$61 (Data.TreeN Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$43 (Data.ListN2 (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$51 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Data.TreeN) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.ListN2) Int)
(declare-fun smt_lambda$35$$35$38 (Data.ListN Data.N) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$2$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$3$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$4$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$5$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$6$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$7$35$$35$56 () Data.TreeN)
(declare-fun lam_arg$35$$35$1$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$2$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$3$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$4$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$5$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$6$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$7$35$$35$32 () Data.ListN)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$2$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$3$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$4$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$5$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$6$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$7$35$$35$40 () Data.ListN2)
(declare-fun lam_arg$35$$35$1$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$48 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)

(assert (distinct lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN lit$36$S$32$ lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$FomA5bf0y7I6FnA1ZLaDlO lit$36$$39$S lit$36$Cons$32$ lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN lit$36$Data lit$36$TreeN lit$36$src$47$Data.hs lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN lit$36$$39$Z lit$36$$39$Cons lit$36$Nil lit$36$ListN lit$36$undefined lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN lit$36$$39$Node lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN lit$36$ListN2 lit$36$$39$Cons2 lit$36$$39$Nil lit$36$$39$Leaf lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2 lit$36$Z lit$36$$39$Nil2 lit$36$N lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))



(assert (distinct GHC.Types.False GHC.Types.True))





(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))




(assert (= (strLen lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) 46))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$N) 1))
(assert (= (strLen lit$36$$39$Nil2) 5))
(assert (= (strLen lit$36$Z) 1))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2) 48))
(assert (= (strLen lit$36$$39$Leaf) 5))
(assert (= (strLen lit$36$$39$Nil) 4))
(assert (= (strLen lit$36$$39$Cons2) 6))
(assert (= (strLen lit$36$ListN2) 6))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) 40))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN) 45))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) 39))
(assert (= (strLen lit$36$undefined) 9))
(assert (= (strLen lit$36$ListN) 5))
(assert (= (strLen lit$36$Nil) 3))
(assert (= (strLen lit$36$$39$Cons) 5))
(assert (= (strLen lit$36$$39$Z) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN) 45))
(assert (= (strLen lit$36$src$47$Data.hs) 11))
(assert (= (strLen lit$36$TreeN) 5))
(assert (= (strLen lit$36$Data) 4))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) 40))
(assert (= (strLen lit$36$Cons$32$) 5))
(assert (= (strLen lit$36$$39$S) 2))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$FomA5bf0y7I6FnA1ZLaDlO) 46))
(assert (= (strLen lit$36$S$32$) 2))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) 40))
(assert (= (strLen lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2) 48))
(push 1)
(define-fun b$36$$35$$35$1120 () Bool (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805201$35$$35$d317) lq_anf$36$$35$$35$7205759403792805202$35$$35$d318) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$128 () Bool (and (= Proof.trivial GHC.Tuple.$40$$41$) (= Proof.trivial Proof.trivial)))
(define-fun b$36$$35$$35$256 () Bool (= lq_anf$36$$35$$35$7205759403792805017$35$$35$d2Y9 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$320 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk)) (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk ds_d2VP) (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk (Data.S m$35$$35$a1LV)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk) m$35$$35$a1LV)))
(define-fun b$36$$35$$35$416 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN)) (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN Data.Z) (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN ds_d2Vg)))
(define-fun b$36$$35$$35$480 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4)) (= lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4 ds_d2Ux) (= lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4 (Data.S n$35$$35$a1Md)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4) n$35$$35$a1Md)))
(define-fun b$36$$35$$35$672 () Bool (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$704 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805132$35$$35$d300)) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 Data.Z) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 ds_d2RV)))
(define-fun b$36$$35$$35$800 () Bool (= fix$36$$36$krep_a1ZO (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZM) fix$36$$36$krep_a1ZM)))
(define-fun b$36$$35$$35$832 () Bool (= lq_anf$36$$35$$35$7205759403792805201$35$$35$d317 7255650995319489292))
(define-fun b$36$$35$$35$896 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)) (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L Data.Z) (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L ds_d2WZ)))
(define-fun b$36$$35$$35$97 () Bool (= Data.Nil Data.Nil))
(define-fun b$36$$35$$35$1121 () Bool (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805196$35$$35$d312) lq_anf$36$$35$$35$7205759403792805197$35$$35$d313) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805199$35$$35$d315) lq_anf$36$$35$$35$7205759403792805200$35$$35$d316) fix$36$$36$krep_a1ZJ)))
(define-fun b$36$$35$$35$321 () Bool (= lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym ds_d2VQ))
(define-fun b$36$$35$$35$417 () Bool (= lq_anf$36$$35$$35$7205759403792805058$35$$35$d2YO lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$449 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW)) (= lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW ds_d2UL) (= lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW (Data.Cons lq_anf$36$$35$$35$7205759403792805071$35$$35$d2Z1 lq_anf$36$$35$$35$7205759403792805072$35$$35$d2Z2)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW) lq_anf$36$$35$$35$7205759403792805072$35$$35$d2Z2) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW) lq_anf$36$$35$$35$7205759403792805071$35$$35$d2Z1)))
(define-fun b$36$$35$$35$481 () Bool (= lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5 ds_d2Uy))
(define-fun b$36$$35$$35$673 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2Se))
(define-fun b$36$$35$$35$705 () Bool (= lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$801 () Bool (= fix$36$$36$krep_a1ZN (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZF) fix$36$$36$krep_a1ZO)))
(define-fun b$36$$35$$35$833 () Bool (= lq_anf$36$$35$$35$7205759403792805202$35$$35$d318 15928215327977803790))
(define-fun b$36$$35$$35$897 () Bool (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M 0))
(define-fun b$36$$35$$35$98 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$1122 () Bool (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X) lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805194$35$$35$d310) lq_anf$36$$35$$35$7205759403792805195$35$$35$d311) fix$36$$36$krep_a1ZI)))
(define-fun b$36$$35$$35$194 () Bool (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(define-fun b$36$$35$$35$322 () Bool (= lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym ds_d2VQ))
(define-fun b$36$$35$$35$418 () Bool (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN ds_d2Vg))
(define-fun b$36$$35$$35$450 () Bool (= lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX ds_d2UK))
(define-fun b$36$$35$$35$482 () Bool (= lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5 ds_d2Uy))
(define-fun b$36$$35$$35$642 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF ds_d2St) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF (Data.Cons x$35$$35$a1Nd xs$35$$35$a1Ne)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) xs$35$$35$a1Ne) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) x$35$$35$a1Nd)))
(define-fun b$36$$35$$35$706 () Bool (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 ds_d2RV))
(define-fun b$36$$35$$35$770 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0)))
(define-fun b$36$$35$$35$802 () Bool (= lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M 1545299775444513549))
(define-fun b$36$$35$$35$834 () Bool (= lq_anf$36$$35$$35$7205759403792805203$35$$35$d319 lit$36$TreeN))
(define-fun b$36$$35$$35$898 () Bool (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L ds_d2WZ))
(define-fun b$36$$35$$35$1123 () Bool (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)))
(define-fun b$36$$35$$35$323 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym)) (= lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym Data.Z) (= lq_anf$36$$35$$35$7205759403792805030$35$$35$d2Ym ds_d2VQ)))
(define-fun b$36$$35$$35$483 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5)) (= lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5 Data.Nil) (= lq_anf$36$$35$$35$7205759403792805075$35$$35$d2Z5 ds_d2Uy)))
(define-fun b$36$$35$$35$643 () Bool (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH ds_d2Su))
(define-fun b$36$$35$$35$675 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ)) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2Se) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ (Data.S n$35$$35$a1Ni)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ) n$35$$35$a1Ni)))
(define-fun b$36$$35$$35$803 () Bool (= lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N 7106898834277486749))
(define-fun b$36$$35$$35$835 () Bool (= lq_anf$36$$35$$35$7205759403792805204$35$$35$d31a (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805203$35$$35$d319)))
(define-fun b$36$$35$$35$1092 () Bool (= VV$35$$35$F$35$$35$32 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r) lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v) fix$36$$36$krep_a1ZF)))
(define-fun b$36$$35$$35$1124 () Bool (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R) lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805188$35$$35$d30U) lq_anf$36$$35$$35$7205759403792805189$35$$35$d30V) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$196 () Bool (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(define-fun b$36$$35$$35$324 () Bool (= lq_anf$36$$35$$35$7205759403792805031$35$$35$d2Yn lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$420 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN)) (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN ds_d2Vg) (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN (Data.S m$35$$35$a1M3)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN) m$35$$35$a1M3)))
(define-fun b$36$$35$$35$484 () Bool (= lq_anf$36$$35$$35$7205759403792805076$35$$35$d2Z6 lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN))
(define-fun b$36$$35$$35$644 () Bool (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH ds_d2Su))
(define-fun b$36$$35$$35$676 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS xs$35$$35$a1Nh))
(define-fun b$36$$35$$35$708 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805132$35$$35$d300)) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 ds_d2RV) (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 (Data.S n$35$$35$a1Nm)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) n$35$$35$a1Nm)))
(define-fun b$36$$35$$35$772 () Bool (= lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r 12681186395187149503))
(define-fun b$36$$35$$35$804 () Bool (= lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O lit$36$$39$Cons))
(define-fun b$36$$35$$35$836 () Bool (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b 0))
(define-fun b$36$$35$$35$900 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)) (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L ds_d2WZ) (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L (Data.S n$35$$35$a1LH)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) n$35$$35$a1LH)))
(define-fun b$36$$35$$35$1093 () Bool (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)))
(define-fun b$36$$35$$35$101 () Bool (= Data.$36$fEqTreeN Data.$36$fEqTreeN))
(define-fun b$36$$35$$35$1125 () Bool (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805180$35$$35$d30M) lq_anf$36$$35$$35$7205759403792805181$35$$35$d30N) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805183$35$$35$d30P) lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q) fix$36$$36$krep_a1ZN)))
(define-fun b$36$$35$$35$421 () Bool (= lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP n$35$$35$a1M1))
(define-fun b$36$$35$$35$453 () Bool (= lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX ds_d2UK))
(define-fun b$36$$35$$35$645 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH)) (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH Data.Nil) (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH ds_d2Su)))
(define-fun b$36$$35$$35$677 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS xs$35$$35$a1Nh))
(define-fun b$36$$35$$35$709 () Bool (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2RW))
(define-fun b$36$$35$$35$773 () Bool (= lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s 16614106134146285372))
(define-fun b$36$$35$$35$805 () Bool (= lq_anf$36$$35$$35$7205759403792805183$35$$35$d30P (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805182$35$$35$d30O)))
(define-fun b$36$$35$$35$901 () Bool (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N 1))
(define-fun b$36$$35$$35$1094 () Bool (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l) lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o) lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$1126 () Bool (= VV$35$$35$F$35$$35$28 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805175$35$$35$d30H) lq_anf$36$$35$$35$7205759403792805176$35$$35$d30I) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K) lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L) fix$36$$36$krep_a1ZM)))
(define-fun b$36$$35$$35$198 () Bool (and (is-Data.Nil2 Data.Nil2) (not (is-Data.Cons2 Data.Nil2)) (= Data.Nil2 Data.Nil2)))
(define-fun b$36$$35$$35$422 () Bool (= lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP n$35$$35$a1M1))
(define-fun b$36$$35$$35$646 () Bool (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$678 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS)) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS xs$35$$35$a1Nh)))
(define-fun b$36$$35$$35$710 () Bool (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2RW))
(define-fun b$36$$35$$35$774 () Bool (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lit$36$$39$Z))
(define-fun b$36$$35$$35$806 () Bool (= lq_anf$36$$35$$35$7205759403792805184$35$$35$d30Q 0))
(define-fun b$36$$35$$35$902 () Bool (and (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)) (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))
(define-fun b$36$$35$$35$1095 () Bool (= VV$35$$35$F$35$$35$35 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i) lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k)))
(define-fun b$36$$35$$35$103 () Bool (= Data.Z Data.Z))
(define-fun b$36$$35$$35$1127 () Bool (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)))
(define-fun b$36$$35$$35$359 () Bool (= lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy ds_d2Vu))
(define-fun b$36$$35$$35$423 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP)) (= lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP Data.Z) (= lq_anf$36$$35$$35$7205759403792805059$35$$35$d2YP n$35$$35$a1M1)))
(define-fun b$36$$35$$35$455 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX)) (= lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX ds_d2UK) (= lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX (Data.S n$35$$35$a1M9)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805067$35$$35$d2YX) n$35$$35$a1M9)))
(define-fun b$36$$35$$35$679 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2))
(define-fun b$36$$35$$35$711 () Bool (and (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302) (not (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302)) (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 Data.Nil2) (= lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 ds_d2RW)))
(define-fun b$36$$35$$35$775 () Bool (= lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t)))
(define-fun b$36$$35$$35$839 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0)))
(define-fun b$36$$35$$35$903 () Bool (and (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (apply$35$$35$48 Data.n_to_int n$35$$35$a1LH)) (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (ite (is-Data.Z n$35$$35$a1LH) 0 (+ 1 (apply$35$$35$48 Data.n_to_int (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a1LH))))) (<= 0 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P)))
(define-fun b$36$$35$$35$1096 () Bool (and (= VV$35$$35$F$35$$35$36 lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792805135$35$$35$d303)))
(define-fun b$36$$35$$35$1128 () Bool (= VV$35$$35$F$35$$35$30 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B) lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805172$35$$35$d30E) lq_anf$36$$35$$35$7205759403792805173$35$$35$d30F) GHC.Types.krep$36$$42$)))
(define-fun b$36$$35$$35$200 () Bool (and (is-Data.Leaf Data.Leaf) (not (is-Data.Node Data.Leaf)) (= Data.Leaf Data.Leaf)))
(define-fun b$36$$35$$35$296 () Bool (= lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi ds_d2VP))
(define-fun b$36$$35$$35$424 () Bool (= lq_anf$36$$35$$35$7205759403792805060$35$$35$d2YQ lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN))
(define-fun b$36$$35$$35$456 () Bool (= lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY ds_d2UL))
(define-fun b$36$$35$$35$712 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2))
(define-fun b$36$$35$$35$776 () Bool (= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v 0))
(define-fun b$36$$35$$35$808 () Bool (= lq_anf$36$$35$$35$7205759403792805185$35$$35$d30R 4344248797393499490))
(define-fun b$36$$35$$35$1097 () Bool (and (= VV$35$$35$F$35$$35$37 lit$36$src$47$Data.hs$58$$40$227$44$1$41$$45$$40$229$44$65$41$$124$function$32$takeListN2) (= VV$35$$35$F$35$$35$37 lq_anf$36$$35$$35$7205759403792805133$35$$35$d301)))
(define-fun b$36$$35$$35$105 () Bool (= Data.$36$fShowN Data.$36$fShowN))
(define-fun b$36$$35$$35$1129 () Bool (= VV$35$$35$F$35$$35$31 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z) lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A) fix$36$$36$krep_a1ZP)))
(define-fun b$36$$35$$35$457 () Bool (= lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY ds_d2UL))
(define-fun b$36$$35$$35$809 () Bool (= lq_anf$36$$35$$35$7205759403792805186$35$$35$d30S 9032408620238466276))
(define-fun b$36$$35$$35$841 () Bool (= lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d 3090200460960756981))
(define-fun b$36$$35$$35$1098 () Bool (and (= VV$35$$35$F$35$$35$38 lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT)))
(define-fun b$36$$35$$35$106 () Bool (= Data.$36$fEqN Data.$36$fEqN))
(define-fun b$36$$35$$35$234 () Bool (= lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4 ds_d2WH))
(define-fun b$36$$35$$35$362 () Bool (= lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy ds_d2Vu))
(define-fun b$36$$35$$35$458 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY)) (= lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY Data.Nil) (= lq_anf$36$$35$$35$7205759403792805068$35$$35$d2YY ds_d2UL)))
(define-fun b$36$$35$$35$778 () Bool (= fix$36$$36$krep_a1ZP (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZF) fix$36$$36$krep_a1ZF)))
(define-fun b$36$$35$$35$810 () Bool (= lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T lit$36$ListN2))
(define-fun b$36$$35$$35$842 () Bool (= lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e 11192229882435609792))
(define-fun b$36$$35$$35$1099 () Bool (and (= VV$35$$35$F$35$$35$39 lit$36$src$47$Data.hs$58$$40$221$44$1$41$$45$$40$223$44$51$41$$124$function$32$dropListN2) (= VV$35$$35$F$35$$35$39 lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR)))
(define-fun b$36$$35$$35$107 () Bool (= Data.$36$fEqListN2 Data.$36$fEqListN2))
(define-fun b$36$$35$$35$459 () Bool (= lq_anf$36$$35$$35$7205759403792805069$35$$35$d2YZ lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN))
(define-fun b$36$$35$$35$779 () Bool (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w 17843143728315555633))
(define-fun b$36$$35$$35$811 () Bool (= lq_anf$36$$35$$35$7205759403792805188$35$$35$d30U (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805187$35$$35$d30T)))
(define-fun b$36$$35$$35$843 () Bool (= lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f lit$36$$39$Leaf))
(define-fun b$36$$35$$35$1100 () Bool (and (= VV$35$$35$F$35$$35$40 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$40 lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI)))
(define-fun b$36$$35$$35$108 () Bool (= Data.$36$fShowListN Data.$36$fShowListN))
(define-fun b$36$$35$$35$364 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy)) (= lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy ds_d2Vu) (= lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy (Data.S lq_anf$36$$35$$35$7205759403792805050$35$$35$d2YG)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805042$35$$35$d2Yy) lq_anf$36$$35$$35$7205759403792805050$35$$35$d2YG)))
(define-fun b$36$$35$$35$780 () Bool (= lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x 9219124752884995880))
(define-fun b$36$$35$$35$812 () Bool (= lq_anf$36$$35$$35$7205759403792805189$35$$35$d30V 0))
(define-fun b$36$$35$$35$844 () Bool (= lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f)))
(define-fun b$36$$35$$35$1101 () Bool (and (= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O) lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P)) (= VV$35$$35$F$35$$35$9 (+ lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P))))
(define-fun b$36$$35$$35$237 () Bool (= lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4 ds_d2WH))
(define-fun b$36$$35$$35$365 () Bool (= lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz n$35$$35$a1LX))
(define-fun b$36$$35$$35$621 () Bool (= lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD ds_d2St))
(define-fun b$36$$35$$35$781 () Bool (= lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y lit$36$$39$S))
(define-fun b$36$$35$$35$845 () Bool (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h 0))
(define-fun b$36$$35$$35$1102 () Bool (and (= VV$35$$35$F$35$$35$41 lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN) (= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG)))
(define-fun b$36$$35$$35$782 () Bool (= lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y)))
(define-fun b$36$$35$$35$1103 () Bool (and (= VV$35$$35$F$35$$35$10 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)) (= VV$35$$35$F$35$$35$10 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))
(define-fun b$36$$35$$35$239 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4)) (= lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4 ds_d2WH) (= lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4 (Data.S lq_anf$36$$35$$35$7205759403792805019$35$$35$d2Yb)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805012$35$$35$d2Y4) lq_anf$36$$35$$35$7205759403792805019$35$$35$d2Yb)))
(define-fun b$36$$35$$35$655 () Bool (= lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO ds_d2Se))
(define-fun b$36$$35$$35$783 () Bool (= lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A 0))
(define-fun b$36$$35$$35$815 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0)))
(define-fun b$36$$35$$35$847 () Bool (= fix$36$$36$krep_a1ZH (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZD) fix$36$$36$krep_a1ZD)))
(define-fun b$36$$35$$35$1104 () Bool (and (= VV$35$$35$F$35$$35$42 lit$36$src$47$Data.hs$58$$40$93$44$1$41$$45$$40$95$44$42$41$$124$function$32$dropListN) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792805076$35$$35$d2Z6)))
(define-fun b$36$$35$$35$240 () Bool (= lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5 n$35$$35$a1LL))
(define-fun b$36$$35$$35$368 () Bool (= lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz n$35$$35$a1LX))
(define-fun b$36$$35$$35$624 () Bool (= lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD ds_d2St))
(define-fun b$36$$35$$35$688 () Bool (= lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY ds_d2RV))
(define-fun b$36$$35$$35$848 () Bool (= fix$36$$36$krep_a1ZG (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZD) fix$36$$36$krep_a1ZH)))
(define-fun b$36$$35$$35$1105 () Bool (and (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Num.$43$ Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K)) (= VV$35$$35$F$35$$35$11 (+ lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K))))
(define-fun b$36$$35$$35$305 () Bool (= lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi ds_d2VP))
(define-fun b$36$$35$$35$785 () Bool (= lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B 17437214186418937748))
(define-fun b$36$$35$$35$817 () Bool (= lq_anf$36$$35$$35$7205759403792805191$35$$35$d30X 12186475828115551101))
(define-fun b$36$$35$$35$849 () Bool (= fix$36$$36$krep_a1ZE (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZF) fix$36$$36$krep_a1ZG)))
(define-fun b$36$$35$$35$881 () Bool (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G ds_d2U2))
(define-fun b$36$$35$$35$1106 () Bool (and (= VV$35$$35$F$35$$35$43 lit$36$src$47$Data.hs$58$$40$87$44$1$41$$45$$40$89$44$51$41$$124$function$32$takeListN) (= VV$35$$35$F$35$$35$43 lq_anf$36$$35$$35$7205759403792805069$35$$35$d2YZ)))
(define-fun b$36$$35$$35$370 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz)) (= lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz n$35$$35$a1LX) (= lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz (Data.S lq_anf$36$$35$$35$7205759403792805049$35$$35$d2YF)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805043$35$$35$d2Yz) lq_anf$36$$35$$35$7205759403792805049$35$$35$d2YF)))
(define-fun b$36$$35$$35$402 () Bool (= lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL ds_d2Vg))
(define-fun b$36$$35$$35$658 () Bool (= lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO ds_d2Se))
(define-fun b$36$$35$$35$786 () Bool (= lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C 15183662383134087582))
(define-fun b$36$$35$$35$818 () Bool (= lq_anf$36$$35$$35$7205759403792805192$35$$35$d30Y 4313130461377914920))
(define-fun b$36$$35$$35$850 () Bool (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i 2271242975862299766))
(define-fun b$36$$35$$35$882 () Bool (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G ds_d2U2))
(define-fun b$36$$35$$35$1107 () Bool (and (= VV$35$$35$F$35$$35$12 (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (= VV$35$$35$F$35$$35$12 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(define-fun b$36$$35$$35$243 () Bool (= lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5 n$35$$35$a1LL))
(define-fun b$36$$35$$35$307 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi)) (= lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi ds_d2VP) (= lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi (Data.S lq_anf$36$$35$$35$7205759403792805034$35$$35$d2Yq)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805026$35$$35$d2Yi) lq_anf$36$$35$$35$7205759403792805034$35$$35$d2Yq)))
(define-fun b$36$$35$$35$371 () Bool (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA ds_d2Vu))
(define-fun b$36$$35$$35$627 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD)) (= lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD ds_d2St) (= lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD (Data.Cons lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD) lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD) lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM)))
(define-fun b$36$$35$$35$691 () Bool (= lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY ds_d2RV))
(define-fun b$36$$35$$35$787 () Bool (= lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D lit$36$ListN))
(define-fun b$36$$35$$35$819 () Bool (= lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z lit$36$$39$Nil2))
(define-fun b$36$$35$$35$851 () Bool (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j 15394556744822039420))
(define-fun b$36$$35$$35$883 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G)) (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G Data.Nil) (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G ds_d2U2)))
(define-fun b$36$$35$$35$1108 () Bool (and (= VV$35$$35$F$35$$35$44 lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792805060$35$$35$d2YQ)))
(define-fun b$36$$35$$35$308 () Bool (= lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj ds_d2VQ))
(define-fun b$36$$35$$35$372 () Bool (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA ds_d2Vu))
(define-fun b$36$$35$$35$468 () Bool (= lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3 ds_d2Uy))
(define-fun b$36$$35$$35$628 () Bool (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2Su))
(define-fun b$36$$35$$35$660 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO)) (= lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO ds_d2Se) (= lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO (Data.S lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO) lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX)))
(define-fun b$36$$35$$35$788 () Bool (= lq_anf$36$$35$$35$7205759403792805172$35$$35$d30E (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D)))
(define-fun b$36$$35$$35$820 () Bool (= lq_anf$36$$35$$35$7205759403792805194$35$$35$d310 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805193$35$$35$d30Z)))
(define-fun b$36$$35$$35$852 () Bool (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k lit$36$$39$Node))
(define-fun b$36$$35$$35$884 () Bool (= lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H 0))
(define-fun b$36$$35$$35$245 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5)) (= lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5 n$35$$35$a1LL) (= lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5 (Data.S lq_anf$36$$35$$35$7205759403792805018$35$$35$d2Ya)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805013$35$$35$d2Y5) lq_anf$36$$35$$35$7205759403792805018$35$$35$d2Ya)))
(define-fun b$36$$35$$35$373 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA)) (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA Data.Z) (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA ds_d2Vu)))
(define-fun b$36$$35$$35$405 () Bool (= lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL ds_d2Vg))
(define-fun b$36$$35$$35$661 () Bool (= lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP xs$35$$35$a1Nh))
(define-fun b$36$$35$$35$693 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY)) (= lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY ds_d2RV) (= lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY (Data.S lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY) lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)))
(define-fun b$36$$35$$35$789 () Bool (= lq_anf$36$$35$$35$7205759403792805173$35$$35$d30F 0))
(define-fun b$36$$35$$35$821 () Bool (= lq_anf$36$$35$$35$7205759403792805195$35$$35$d311 0))
(define-fun b$36$$35$$35$853 () Bool (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k)))
(define-fun b$36$$35$$35$885 () Bool (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G ds_d2U2))
(define-fun b$36$$35$$35$86 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$1110 () Bool (and (= VV$35$$35$F$35$$35$45 lit$36$src$47$Data.hs$58$$40$69$44$1$41$$45$$40$71$44$31$41$$124$function$32$minN) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792805058$35$$35$d2YO)))
(define-fun b$36$$35$$35$246 () Bool (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 ds_d2WH))
(define-fun b$36$$35$$35$374 () Bool (= lq_anf$36$$35$$35$7205759403792805045$35$$35$d2YB lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$694 () Bool (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2RW))
(define-fun b$36$$35$$35$758 () Bool (= lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$FomA5bf0y7I6FnA1ZLaDlO))
(define-fun b$36$$35$$35$854 () Bool (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m 0))
(define-fun b$36$$35$$35$1111 () Bool (and (= VV$35$$35$F$35$$35$46 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$46 lq_anf$36$$35$$35$7205759403792805047$35$$35$d2YD)))
(define-fun b$36$$35$$35$247 () Bool (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 ds_d2WH))
(define-fun b$36$$35$$35$311 () Bool (= lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj ds_d2VQ))
(define-fun b$36$$35$$35$375 () Bool (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA ds_d2Vu))
(define-fun b$36$$35$$35$407 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL)) (= lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL ds_d2Vg) (= lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL (Data.S lq_anf$36$$35$$35$7205759403792805063$35$$35$d2YT)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805055$35$$35$d2YL) lq_anf$36$$35$$35$7205759403792805063$35$$35$d2YT)))
(define-fun b$36$$35$$35$471 () Bool (= lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3 ds_d2Uy))
(define-fun b$36$$35$$35$631 () Bool (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2Su))
(define-fun b$36$$35$$35$759 () Bool (= lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h)))
(define-fun b$36$$35$$35$823 () Bool (= fix$36$$36$krep_a1ZL (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZI) fix$36$$36$krep_a1ZI)))
(define-fun b$36$$35$$35$1112 () Bool (and (= VV$35$$35$F$35$$35$47 lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN) (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$7205759403792805045$35$$35$d2YB)))
(define-fun b$36$$35$$35$248 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6)) (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 Data.Z) (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 ds_d2WH)))
(define-fun b$36$$35$$35$408 () Bool (= lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM n$35$$35$a1M1))
(define-fun b$36$$35$$35$664 () Bool (= lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP xs$35$$35$a1Nh))
(define-fun b$36$$35$$35$760 () Bool (= lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j lit$36$Data))
(define-fun b$36$$35$$35$792 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (= lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0)))
(define-fun b$36$$35$$35$824 () Bool (= fix$36$$36$krep_a1ZK (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZF) fix$36$$36$krep_a1ZL)))
(define-fun b$36$$35$$35$888 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G)) (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G ds_d2U2) (= lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G (Data.Cons h$35$$35$a1Mu t$35$$35$a1Mv)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G) t$35$$35$a1Mv) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G) h$35$$35$a1Mu)))
(define-fun b$36$$35$$35$89 () Bool (= Data.Leaf Data.Leaf))
(define-fun b$36$$35$$35$1113 () Bool (and (= VV$35$$35$F$35$$35$48 lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$48 lq_anf$36$$35$$35$7205759403792805031$35$$35$d2Yn)))
(define-fun b$36$$35$$35$249 () Bool (= lq_anf$36$$35$$35$7205759403792805015$35$$35$d2Y7 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN))
(define-fun b$36$$35$$35$313 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj)) (= lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj ds_d2VQ) (= lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj (Data.S lq_anf$36$$35$$35$7205759403792805032$35$$35$d2Yo)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805027$35$$35$d2Yj) lq_anf$36$$35$$35$7205759403792805032$35$$35$d2Yo)))
(define-fun b$36$$35$$35$377 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA)) (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA ds_d2Vu) (= lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA (Data.S m$35$$35$a1LZ)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805044$35$$35$d2YA) m$35$$35$a1LZ)))
(define-fun b$36$$35$$35$697 () Bool (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2RW))
(define-fun b$36$$35$$35$761 () Bool (= lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(define-fun b$36$$35$$35$825 () Bool (= fix$36$$36$krep_a1ZJ (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a1ZF) fix$36$$36$krep_a1ZK)))
(define-fun b$36$$35$$35$889 () Bool (= lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I 1))
(define-fun b$36$$35$$35$90 () Bool (= Data.Nil2 Data.Nil2))
(define-fun b$36$$35$$35$1114 () Bool (and (= VV$35$$35$F$35$$35$49 lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN) (= VV$35$$35$F$35$$35$49 lq_anf$36$$35$$35$7205759403792805029$35$$35$d2Yl)))
(define-fun b$36$$35$$35$154 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 ds_d2WH))
(define-fun b$36$$35$$35$314 () Bool (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk ds_d2VP))
(define-fun b$36$$35$$35$378 () Bool (= lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC n$35$$35$a1LX))
(define-fun b$36$$35$$35$474 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3)) (= lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3 ds_d2Uy) (= lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3 (Data.Cons lq_anf$36$$35$$35$7205759403792805077$35$$35$d2Z7 lq_anf$36$$35$$35$7205759403792805078$35$$35$d2Z8)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3) lq_anf$36$$35$$35$7205759403792805078$35$$35$d2Z8) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805073$35$$35$d2Z3) lq_anf$36$$35$$35$7205759403792805077$35$$35$d2Z7)))
(define-fun b$36$$35$$35$634 () Bool (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)) (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE ds_d2Su) (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE (Data.Cons lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE) lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK)))
(define-fun b$36$$35$$35$794 () Bool (= lq_anf$36$$35$$35$7205759403792805175$35$$35$d30H 8236709588255828885))
(define-fun b$36$$35$$35$826 () Bool (= lq_anf$36$$35$$35$7205759403792805196$35$$35$d312 4594929844681082376))
(define-fun b$36$$35$$35$890 () Bool (and (= lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J (apply$35$$35$0 GHC.Types.I$35$ lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (= lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(define-fun b$36$$35$$35$91 () Bool (= Data.$36$fEqListN Data.$36$fEqListN))
(define-fun b$36$$35$$35$1115 () Bool (and (= VV$35$$35$F$35$$35$50 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$7205759403792805017$35$$35$d2Y9)))
(define-fun b$36$$35$$35$315 () Bool (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk ds_d2VP))
(define-fun b$36$$35$$35$379 () Bool (= lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC n$35$$35$a1LX))
(define-fun b$36$$35$$35$411 () Bool (= lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM n$35$$35$a1M1))
(define-fun b$36$$35$$35$443 () Bool (= lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW ds_d2UL))
(define-fun b$36$$35$$35$475 () Bool (= lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4 ds_d2Ux))
(define-fun b$36$$35$$35$635 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF ds_d2St))
(define-fun b$36$$35$$35$763 () Bool (= lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l 7737543760852241585))
(define-fun b$36$$35$$35$795 () Bool (= lq_anf$36$$35$$35$7205759403792805176$35$$35$d30I 15568749225062933782))
(define-fun b$36$$35$$35$827 () Bool (= lq_anf$36$$35$$35$7205759403792805197$35$$35$d313 6360832521230130576))
(define-fun b$36$$35$$35$891 () Bool (and (= lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K (apply$35$$35$32 Data.lengthListN_int t$35$$35$a1Mv)) (= lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K (ite (is-Data.Nil t$35$$35$a1Mv) 0 (+ 1 (apply$35$$35$32 Data.lengthListN_int (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 t$35$$35$a1Mv))))) (<= 0 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K)))
(define-fun b$36$$35$$35$1116 () Bool (= VV$35$$35$F$35$$35$19 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l) lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m) fix$36$$36$krep_a1ZE)))
(define-fun b$36$$35$$35$252 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6)) (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 ds_d2WH) (= lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6 (Data.S m$35$$35$a1LN)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805014$35$$35$d2Y6) m$35$$35$a1LN)))
(define-fun b$36$$35$$35$316 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk)) (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk Data.Z) (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk ds_d2VP)))
(define-fun b$36$$35$$35$380 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC)) (= lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC Data.Z) (= lq_anf$36$$35$$35$7205759403792805046$35$$35$d2YC n$35$$35$a1LX)))
(define-fun b$36$$35$$35$636 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF ds_d2St))
(define-fun b$36$$35$$35$668 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP)) (= lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP xs$35$$35$a1Nh) (= lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP (Data.Cons2 lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU)))
(define-fun b$36$$35$$35$764 () Bool (= lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m 2932628191646893071))
(define-fun b$36$$35$$35$796 () Bool (= lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J lit$36$$39$Nil))
(define-fun b$36$$35$$35$828 () Bool (= lq_anf$36$$35$$35$7205759403792805198$35$$35$d314 lit$36$$39$Cons2))
(define-fun b$36$$35$$35$1117 () Bool (and (= VV$35$$35$F$35$$35$51 lit$36$src$47$Data.hs$58$$40$44$44$1$41$$45$$40$46$44$27$41$$124$function$32$subN) (= VV$35$$35$F$35$$35$51 lq_anf$36$$35$$35$7205759403792805015$35$$35$d2Y7)))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8 n$35$$35$a1LL))
(define-fun b$36$$35$$35$317 () Bool (= lq_anf$36$$35$$35$7205759403792805029$35$$35$d2Yl lit$36$src$47$Data.hs$58$$40$56$44$1$41$$45$$40$59$44$25$41$$124$function$32$leN))
(define-fun b$36$$35$$35$381 () Bool (= lq_anf$36$$35$$35$7205759403792805047$35$$35$d2YD lit$36$src$47$Data.hs$58$$40$63$44$1$41$$45$$40$65$44$31$41$$124$function$32$maxN))
(define-fun b$36$$35$$35$413 () Bool (and (is-Data.S lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM)) (= lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM n$35$$35$a1M1) (= lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM (Data.S lq_anf$36$$35$$35$7205759403792805062$35$$35$d2YS)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792805056$35$$35$d2YM) lq_anf$36$$35$$35$7205759403792805062$35$$35$d2YS)))
(define-fun b$36$$35$$35$637 () Bool (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF Data.Nil) (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF ds_d2St)))
(define-fun b$36$$35$$35$669 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2Se))
(define-fun b$36$$35$$35$701 () Bool (and (is-Data.Cons2 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) (not (is-Data.Nil2 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ)) (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ ds_d2RW) (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ (Data.Cons2 lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 lq_anf$36$$35$$35$7205759403792805138$35$$35$d306 lq_anf$36$$35$$35$7205759403792805139$35$$35$d307)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$1 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) lq_anf$36$$35$$35$7205759403792805139$35$$35$d307) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$2 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) lq_anf$36$$35$$35$7205759403792805138$35$$35$d306) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons2$35$$35$3 lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ) lq_anf$36$$35$$35$7205759403792805137$35$$35$d305)))
(define-fun b$36$$35$$35$765 () Bool (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n lit$36$N))
(define-fun b$36$$35$$35$797 () Bool (= lq_anf$36$$35$$35$7205759403792805178$35$$35$d30K (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805177$35$$35$d30J)))
(define-fun b$36$$35$$35$829 () Bool (= lq_anf$36$$35$$35$7205759403792805199$35$$35$d315 (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805198$35$$35$d314)))
(define-fun b$36$$35$$35$1118 () Bool (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d) lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e) Data.$36$trModule) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) fix$36$$36$krep_a1ZD)))
(define-fun b$36$$35$$35$254 () Bool (= lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8 n$35$$35$a1LL))
(define-fun b$36$$35$$35$318 () Bool (= lq_anf$36$$35$$35$7205759403792805028$35$$35$d2Yk ds_d2VP))
(define-fun b$36$$35$$35$414 () Bool (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN ds_d2Vg))
(define-fun b$36$$35$$35$446 () Bool (= lq_anf$36$$35$$35$7205759403792805066$35$$35$d2YW ds_d2UL))
(define-fun b$36$$35$$35$478 () Bool (= lq_anf$36$$35$$35$7205759403792805074$35$$35$d2Z4 ds_d2Ux))
(define-fun b$36$$35$$35$638 () Bool (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG lit$36$src$47$Data.hs$58$$40$215$44$1$41$$45$$40$217$44$61$41$$124$function$32$zipListN))
(define-fun b$36$$35$$35$670 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2Se))
(define-fun b$36$$35$$35$702 () Bool (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 ds_d2RV))
(define-fun b$36$$35$$35$766 () Bool (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o (apply$35$$35$16 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n)))
(define-fun b$36$$35$$35$798 () Bool (= lq_anf$36$$35$$35$7205759403792805179$35$$35$d30L 0))
(define-fun b$36$$35$$35$830 () Bool (= lq_anf$36$$35$$35$7205759403792805200$35$$35$d316 0))
(define-fun b$36$$35$$35$894 () Bool (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L ds_d2WZ))
(define-fun b$36$$35$$35$1119 () Bool (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)))
(define-fun b$36$$35$$35$159 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$255 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8)) (= lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8 Data.Z) (= lq_anf$36$$35$$35$7205759403792805016$35$$35$d2Y8 n$35$$35$a1LL)))
(define-fun b$36$$35$$35$415 () Bool (= lq_anf$36$$35$$35$7205759403792805057$35$$35$d2YN ds_d2Vg))
(define-fun b$36$$35$$35$639 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF ds_d2St))
(define-fun b$36$$35$$35$671 () Bool (and (is-Data.Z lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ) (not (is-Data.S lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ)) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ Data.Z) (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ ds_d2Se)))
(define-fun b$36$$35$$35$703 () Bool (= lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 ds_d2RV))
(define-fun b$36$$35$$35$767 () Bool (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p 0))
(define-fun b$36$$35$$35$895 () Bool (= lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L ds_d2WZ))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$706 b$36$$35$$35$196 b$36$$35$$35$708 b$36$$35$$35$101 b$36$$35$$35$709 b$36$$35$$35$198 b$36$$35$$35$710 b$36$$35$$35$103 b$36$$35$$35$711 b$36$$35$$35$1096 b$36$$35$$35$200 b$36$$35$$35$712 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$688 b$36$$35$$35$691 b$36$$35$$35$693 b$36$$35$$35$86 b$36$$35$$35$694 b$36$$35$$35$89 b$36$$35$$35$697 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$701 b$36$$35$$35$702 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$704 b$36$$35$$35$97 b$36$$35$$35$705 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$1097 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$688 b$36$$35$$35$691 b$36$$35$$35$693 b$36$$35$$35$86 b$36$$35$$35$694 b$36$$35$$35$89 b$36$$35$$35$697 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$701 b$36$$35$$35$702 b$36$$35$$35$159 b$36$$35$$35$703))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$673 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$675 b$36$$35$$35$196 b$36$$35$$35$676 b$36$$35$$35$101 b$36$$35$$35$677 b$36$$35$$35$198 b$36$$35$$35$678 b$36$$35$$35$103 b$36$$35$$35$679 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$1098 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$655 b$36$$35$$35$658 b$36$$35$$35$660 b$36$$35$$35$661 b$36$$35$$35$86 b$36$$35$$35$664 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$668 b$36$$35$$35$669 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$672 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$1099 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$655 b$36$$35$$35$658 b$36$$35$$35$660 b$36$$35$$35$661 b$36$$35$$35$86 b$36$$35$$35$664 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$668 b$36$$35$$35$669 b$36$$35$$35$670 b$36$$35$$35$159 b$36$$35$$35$671))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$642 b$36$$35$$35$643 b$36$$35$$35$196 b$36$$35$$35$644 b$36$$35$$35$101 b$36$$35$$35$645 b$36$$35$$35$198 b$36$$35$$35$646 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$1100 b$36$$35$$35$108 b$36$$35$$35$621 b$36$$35$$35$624 b$36$$35$$35$627 b$36$$35$$35$628 b$36$$35$$35$86 b$36$$35$$35$631 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$634 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$159 b$36$$35$$35$639))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$3668 Int) (lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 Int)) (and (= VV$35$$35$3668 fix$36$$36$krep_a1ZF) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 fix$36$$36$krep_a1ZF) (exists ((lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4208 Int) (lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 Int)) (and (= VV$35$$35$4208 fix$36$$36$krep_a1ZD) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 fix$36$$36$krep_a1ZD) (exists ((lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 VV$35$$35$F$35$$35$21))))) (exists ((VV$35$$35$4018 Int) (lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 Int)) (and (= VV$35$$35$4018 fix$36$$36$krep_a1ZI) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 fix$36$$36$krep_a1ZI) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 Int) (VV$35$$35$3838 Int)) (and (= VV$35$$35$3838 fix$36$$36$krep_a1ZM) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 fix$36$$36$krep_a1ZM) (exists ((VV$35$$35$F$35$$35$29 Int) (lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G Int)) (and (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (= lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 VV$35$$35$F$35$$35$29)))))) b$36$$35$$35$128 b$36$$35$$35$800 b$36$$35$$35$97 b$36$$35$$35$801 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$898 b$36$$35$$35$196 b$36$$35$$35$900 b$36$$35$$35$101 b$36$$35$$35$901 b$36$$35$$35$198 b$36$$35$$35$902 b$36$$35$$35$103 b$36$$35$$35$903 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$778 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$1101 b$36$$35$$35$847 b$36$$35$$35$848 b$36$$35$$35$849 b$36$$35$$35$86 b$36$$35$$35$823 b$36$$35$$35$824 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$894 b$36$$35$$35$159))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$9)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$621 b$36$$35$$35$1102 b$36$$35$$35$624 b$36$$35$$35$627 b$36$$35$$35$628 b$36$$35$$35$86 b$36$$35$$35$631 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$634 b$36$$35$$35$91 b$36$$35$$35$635 b$36$$35$$35$636 b$36$$35$$35$637 b$36$$35$$35$638 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$3668 Int) (lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 Int)) (and (= VV$35$$35$3668 fix$36$$36$krep_a1ZF) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 fix$36$$36$krep_a1ZF) (exists ((lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4208 Int) (lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 Int)) (and (= VV$35$$35$4208 fix$36$$36$krep_a1ZD) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 fix$36$$36$krep_a1ZD) (exists ((lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 VV$35$$35$F$35$$35$21))))) (exists ((VV$35$$35$4018 Int) (lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 Int)) (and (= VV$35$$35$4018 fix$36$$36$krep_a1ZI) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 fix$36$$36$krep_a1ZI) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 Int) (VV$35$$35$3838 Int)) (and (= VV$35$$35$3838 fix$36$$36$krep_a1ZM) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 fix$36$$36$krep_a1ZM) (exists ((VV$35$$35$F$35$$35$29 Int) (lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G Int)) (and (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (= lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 VV$35$$35$F$35$$35$29)))))) b$36$$35$$35$128 b$36$$35$$35$800 b$36$$35$$35$896 b$36$$35$$35$97 b$36$$35$$35$801 b$36$$35$$35$897 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$778 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$1103 b$36$$35$$35$847 b$36$$35$$35$848 b$36$$35$$35$849 b$36$$35$$35$86 b$36$$35$$35$823 b$36$$35$$35$824 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$894 b$36$$35$$35$159 b$36$$35$$35$895))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$10)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$480 b$36$$35$$35$97 b$36$$35$$35$481 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$196 b$36$$35$$35$484 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$1104 b$36$$35$$35$468 b$36$$35$$35$86 b$36$$35$$35$471 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$474 b$36$$35$$35$91 b$36$$35$$35$475 b$36$$35$$35$478 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$3668 Int) (lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 Int)) (and (= VV$35$$35$3668 fix$36$$36$krep_a1ZF) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 fix$36$$36$krep_a1ZF) (exists ((lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4208 Int) (lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 Int)) (and (= VV$35$$35$4208 fix$36$$36$krep_a1ZD) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 fix$36$$36$krep_a1ZD) (exists ((lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 VV$35$$35$F$35$$35$21))))) (exists ((VV$35$$35$4018 Int) (lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 Int)) (and (= VV$35$$35$4018 fix$36$$36$krep_a1ZI) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 fix$36$$36$krep_a1ZI) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 Int) (VV$35$$35$3838 Int)) (and (= VV$35$$35$3838 fix$36$$36$krep_a1ZM) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 fix$36$$36$krep_a1ZM) (exists ((VV$35$$35$F$35$$35$29 Int) (lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G Int)) (and (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (= lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 VV$35$$35$F$35$$35$29)))))) b$36$$35$$35$128 b$36$$35$$35$800 b$36$$35$$35$97 b$36$$35$$35$801 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$778 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$847 b$36$$35$$35$848 b$36$$35$$35$1105 b$36$$35$$35$849 b$36$$35$$35$881 b$36$$35$$35$885 b$36$$35$$35$86 b$36$$35$$35$823 b$36$$35$$35$824 b$36$$35$$35$888 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$889 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$890 b$36$$35$$35$91 b$36$$35$$35$891 b$36$$35$$35$159))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$11)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$449 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$450 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$453 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$455 b$36$$35$$35$200 b$36$$35$$35$456 b$36$$35$$35$105 b$36$$35$$35$457 b$36$$35$$35$106 b$36$$35$$35$458 b$36$$35$$35$107 b$36$$35$$35$459 b$36$$35$$35$108 b$36$$35$$35$1106 b$36$$35$$35$86 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$443 b$36$$35$$35$446 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$3668 Int) (lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 Int)) (and (= VV$35$$35$3668 fix$36$$36$krep_a1ZF) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 fix$36$$36$krep_a1ZF) (exists ((lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q Int) (VV$35$$35$F$35$$35$33 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q) 0) (= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcN) lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q)) (= lq_karg$36$VV$35$$35$3668$35$$35$k_$35$$35$3669 VV$35$$35$F$35$$35$33))))) (exists ((VV$35$$35$4208 Int) (lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 Int)) (and (= VV$35$$35$4208 fix$36$$36$krep_a1ZD) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 fix$36$$36$krep_a1ZD) (exists ((lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c Int) (VV$35$$35$F$35$$35$21 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) 0) (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcTreeN) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c)) (= lq_karg$36$VV$35$$35$4208$35$$35$k_$35$$35$4209 VV$35$$35$F$35$$35$21))))) (exists ((VV$35$$35$4018 Int) (lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 Int)) (and (= VV$35$$35$4018 fix$36$$36$krep_a1ZI) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 fix$36$$36$krep_a1ZI) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W Int)) (and (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN2) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W)) (= lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805190$35$$35$d30W) 0) (= lq_karg$36$VV$35$$35$4018$35$$35$k_$35$$35$4019 VV$35$$35$F$35$$35$25))))) (exists ((lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 Int) (VV$35$$35$3838 Int)) (and (= VV$35$$35$3838 fix$36$$36$krep_a1ZM) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 fix$36$$36$krep_a1ZM) (exists ((VV$35$$35$F$35$$35$29 Int) (lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G Int)) (and (= VV$35$$35$F$35$$35$29 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.$36$tcListN) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G)) (= lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805174$35$$35$d30G) 0) (= lq_karg$36$VV$35$$35$3838$35$$35$k_$35$$35$3839 VV$35$$35$F$35$$35$29)))))) b$36$$35$$35$128 b$36$$35$$35$800 b$36$$35$$35$97 b$36$$35$$35$801 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$778 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$847 b$36$$35$$35$848 b$36$$35$$35$849 b$36$$35$$35$881 b$36$$35$$35$882 b$36$$35$$35$1107 b$36$$35$$35$883 b$36$$35$$35$884 b$36$$35$$35$86 b$36$$35$$35$823 b$36$$35$$35$824 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$159))
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$12)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$418 b$36$$35$$35$196 b$36$$35$$35$420 b$36$$35$$35$101 b$36$$35$$35$421 b$36$$35$$35$198 b$36$$35$$35$422 b$36$$35$$35$103 b$36$$35$$35$423 b$36$$35$$35$200 b$36$$35$$35$424 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$402 b$36$$35$$35$1108 b$36$$35$$35$405 b$36$$35$$35$86 b$36$$35$$35$407 b$36$$35$$35$408 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$413 b$36$$35$$35$414 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$128 b$36$$35$$35$800 b$36$$35$$35$97 b$36$$35$$35$801 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$778 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$847 b$36$$35$$35$848 b$36$$35$$35$849 (= VV$35$$35$F$35$$35$13 (as GHC.Err.undefined Int)) b$36$$35$$35$86 b$36$$35$$35$823 b$36$$35$$35$824 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$159))
(push 1)
(assert (not b$35$$35$a1LF))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$417 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$402 b$36$$35$$35$405 b$36$$35$$35$86 b$36$$35$$35$1110 b$36$$35$$35$407 b$36$$35$$35$408 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$411 b$36$$35$$35$413 b$36$$35$$35$414 b$36$$35$$35$159 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$359 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$362 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$364 b$36$$35$$35$365 b$36$$35$$35$368 b$36$$35$$35$370 b$36$$35$$35$371 b$36$$35$$35$86 b$36$$35$$35$1111 b$36$$35$$35$375 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$378 b$36$$35$$35$91 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$381 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$359 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$362 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$364 b$36$$35$$35$365 b$36$$35$$35$368 b$36$$35$$35$370 b$36$$35$$35$371 b$36$$35$$35$372 b$36$$35$$35$373 b$36$$35$$35$86 b$36$$35$$35$374 b$36$$35$$35$1112 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$322 b$36$$35$$35$323 b$36$$35$$35$196 b$36$$35$$35$324 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$296 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$305 b$36$$35$$35$307 b$36$$35$$35$308 b$36$$35$$35$86 b$36$$35$$35$311 b$36$$35$$35$89 b$36$$35$$35$1113 b$36$$35$$35$313 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$314 b$36$$35$$35$91 b$36$$35$$35$318 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$296 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$305 b$36$$35$$35$307 b$36$$35$$35$308 b$36$$35$$35$86 b$36$$35$$35$311 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$90 b$36$$35$$35$1114 b$36$$35$$35$154 b$36$$35$$35$314 b$36$$35$$35$91 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$317 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$256 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$234 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$237 b$36$$35$$35$239 b$36$$35$$35$240 b$36$$35$$35$243 b$36$$35$$35$245 b$36$$35$$35$86 b$36$$35$$35$246 b$36$$35$$35$89 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$250 b$36$$35$$35$91 b$36$$35$$35$1115 b$36$$35$$35$252 b$36$$35$$35$253 b$36$$35$$35$254 b$36$$35$$35$159 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$194 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$198 b$36$$35$$35$103 b$36$$35$$35$200 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$234 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$237 b$36$$35$$35$239 b$36$$35$$35$240 b$36$$35$$35$243 b$36$$35$$35$245 b$36$$35$$35$86 b$36$$35$$35$246 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$89 b$36$$35$$35$249 b$36$$35$$35$90 b$36$$35$$35$154 b$36$$35$$35$91 b$36$$35$$35$1117 b$36$$35$$35$159))
(push 1)
(assert (not (apply$35$$35$17 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
