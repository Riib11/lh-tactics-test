{"o_vars":null,"o_types":[[{"spanInfo":{"endCol":1,"startCol":1,"startLine":1,"filename":"src/Prop1.hs","endLine":1},"realSpan":true},[["Prop1.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"endCol":3,"startCol":9,"startLine":25,"filename":"src/Prop1.hs","endLine":31},"realSpan":true},[["lq_anf$##7205759403792826350","{v : GHC.Prim.Addr# | v == \"#Dec#NameBeginprop1_check#NameEnd#TypeBeginN -> NL -> Proof#TypeEnd#Lambda#NameBeginn#NameEnd#Lambda#NameBeginl#NameEnd#Case#ExpBeginn#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Z#PatEnd#,#Case#ExpBeginl#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Nil#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#ItemMatch#PatBeginData.Cons n_0 nL_1#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#EndMatches#ItemMatch#PatBeginData.S n_0#PatEnd#,#Case#ExpBeginl#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Nil#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#ItemMatch#PatBeginData.Cons n_0 nL_1#PatEnd#,#AutoPreExp#BeginAutoPreExps#ItemAutoExp#ExpBeginprop1_check n_0 nL_1#ExpEnd#EndAutoPreExps#TrivialPreExp#EndMatches#EndMatches\"}"]]],[{"spanInfo":{"endCol":3,"startCol":9,"startLine":25,"filename":"src/Prop1.hs","endLine":31},"realSpan":true},[["Prop1.prop1_check","x1:Data.N -> x2:Data.NL -> {VV : () | prop1 x1 x2}"]]],[{"spanInfo":{"endCol":36,"startCol":23,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826355","{v : Data.NL | v == takeNL n xs}"]]],[{"spanInfo":{"endCol":56,"startCol":1,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["Data.$fEqNL","{v : (GHC.Classes.Eq Data.NL) | v == $fEqNL}"]]],[{"spanInfo":{"endCol":46,"startCol":45,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","{v : Data.N | v == n}"]]],[{"spanInfo":{"endCol":56,"startCol":54,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{v : Data.NL | v == xs}"]]],[{"spanInfo":{"endCol":49,"startCol":47,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{v : Data.NL | v == xs}"]]],[{"spanInfo":{"endCol":32,"startCol":31,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","{v : Data.N | v == n}"]]],[{"spanInfo":{"endCol":50,"startCol":37,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826356","{v : Data.NL | v == dropNL n xs}"]]],[{"spanInfo":{"endCol":35,"startCol":33,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{v : Data.NL | v == xs}"]]],[{"spanInfo":{"endCol":11,"startCol":9,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","Data.NL"]]],[{"spanInfo":{"endCol":6,"startCol":1,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["Prop1.prop1","x1:Data.N -> x2:Data.NL -> {VV : GHC.Types.Bool | VV == prop1 x1 x2\n                                                  && VV == (concatNL (takeNL x1 x2) (dropNL x1 x2) == x2)}"]]],[{"spanInfo":{"endCol":50,"startCol":14,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826357","Data.NL"]]],[{"spanInfo":{"endCol":8,"startCol":7,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","Data.N"]]]],"o_templs":[[{"spanInfo":{"endCol":1,"startCol":1,"startLine":1,"filename":"src/Prop1.hs","endLine":1},"realSpan":true},[["Prop1.$trModule","{VV##762 : GHC.Types.Module | $k_##763}"]]],[{"spanInfo":{"endCol":3,"startCol":9,"startLine":25,"filename":"src/Prop1.hs","endLine":31},"realSpan":true},[["lq_anf$##7205759403792826350","{lq_tmp$x##750 : GHC.Prim.Addr# | lq_tmp$x##750 == \"#Dec#NameBeginprop1_check#NameEnd#TypeBeginN -> NL -> Proof#TypeEnd#Lambda#NameBeginn#NameEnd#Lambda#NameBeginl#NameEnd#Case#ExpBeginn#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Z#PatEnd#,#Case#ExpBeginl#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Nil#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#ItemMatch#PatBeginData.Cons n_0 nL_1#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#EndMatches#ItemMatch#PatBeginData.S n_0#PatEnd#,#Case#ExpBeginl#ExpEnd#BeginMatches#ItemMatch#PatBeginData.Nil#PatEnd#,#AutoPreExp#BeginAutoPreExps#EndAutoPreExps#TrivialPreExp#ItemMatch#PatBeginData.Cons n_0 nL_1#PatEnd#,#AutoPreExp#BeginAutoPreExps#ItemAutoExp#ExpBeginprop1_check n_0 nL_1#ExpEnd#EndAutoPreExps#TrivialPreExp#EndMatches#EndMatches\"}"]]],[{"spanInfo":{"endCol":3,"startCol":9,"startLine":25,"filename":"src/Prop1.hs","endLine":31},"realSpan":true},[["Prop1.prop1_check","lq_tmp$x##655:Data.N -> lq_tmp$x##656:Data.NL -> {VV : () | Prop1.prop1 lq_tmp$x##655 lq_tmp$x##656}"]]],[{"spanInfo":{"endCol":36,"startCol":23,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826355","{lq_tmp$x##798 : Data.NL | lq_tmp$x##798 == Data.takeNL n##a8vd xs##a8ve\n                           && lq_tmp$x##798 == (if is$Data.Nil xs##a8ve then Data.Nil else (if is$Data.Z n##a8vd then Data.Nil else Data.Cons (lqdc##$select##Data.Cons##2 xs##a8ve) (Data.takeNL (lqdc##$select##Data.S##1 n##a8vd) (lqdc##$select##Data.Cons##1 xs##a8ve))))}"]]],[{"spanInfo":{"endCol":56,"startCol":1,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["Data.$fEqNL","{lq_tmp$x##841 : (GHC.Classes.Eq Data.NL) | lq_tmp$x##841 == Data.$fEqNL}"]]],[{"spanInfo":{"endCol":46,"startCol":45,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","{lq_tmp$x##813 : Data.N | lq_tmp$x##813 == n##a8vd}"]]],[{"spanInfo":{"endCol":56,"startCol":54,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{lq_tmp$x##843 : Data.NL | lq_tmp$x##843 == xs##a8ve}"]]],[{"spanInfo":{"endCol":49,"startCol":47,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{lq_tmp$x##814 : Data.NL | lq_tmp$x##814 == xs##a8ve}"]]],[{"spanInfo":{"endCol":32,"startCol":31,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","{lq_tmp$x##803 : Data.N | lq_tmp$x##803 == n##a8vd}"]]],[{"spanInfo":{"endCol":50,"startCol":37,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826356","{lq_tmp$x##808 : Data.NL | lq_tmp$x##808 == Data.dropNL n##a8vd xs##a8ve\n                           && lq_tmp$x##808 == (if is$Data.Nil xs##a8ve then Data.Nil else (if is$Data.Z n##a8vd then Data.Cons (lqdc##$select##Data.Cons##2 xs##a8ve) (lqdc##$select##Data.Cons##1 xs##a8ve) else Data.dropNL (lqdc##$select##Data.S##1 n##a8vd) (lqdc##$select##Data.Cons##1 xs##a8ve)))}"]]],[{"spanInfo":{"endCol":35,"startCol":33,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","{lq_tmp$x##804 : Data.NL | lq_tmp$x##804 == xs##a8ve}"]]],[{"spanInfo":{"endCol":11,"startCol":9,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["xs","Data.NL"]]],[{"spanInfo":{"endCol":6,"startCol":1,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["Prop1.prop1","lq_tmp$x##790:Data.N -> lq_tmp$x##791:Data.NL -> {VV : GHC.Types.Bool | VV == Prop1.prop1 lq_tmp$x##790 lq_tmp$x##791\n                                                                        && VV == (Data.concatNL (Data.takeNL lq_tmp$x##790 lq_tmp$x##791) (Data.dropNL lq_tmp$x##790 lq_tmp$x##791) == lq_tmp$x##791)}"]]],[{"spanInfo":{"endCol":50,"startCol":14,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["lq_anf$##7205759403792826357","{lq_tmp$x##818 : Data.NL | lq_tmp$x##818 == Data.concatNL lq_anf$##7205759403792826355##d8wj lq_anf$##7205759403792826356##d8wk\n                           && lq_tmp$x##818 == (if is$Data.Nil lq_anf$##7205759403792826355##d8wj then lq_anf$##7205759403792826356##d8wk else Data.Cons (lqdc##$select##Data.Cons##2 lq_anf$##7205759403792826355##d8wj) (Data.concatNL (lqdc##$select##Data.Cons##1 lq_anf$##7205759403792826355##d8wj) lq_anf$##7205759403792826356##d8wk))}"]]],[{"spanInfo":{"endCol":8,"startCol":7,"startLine":17,"filename":"src/Prop1.hs","endLine":17},"realSpan":true},[["n","Data.N"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":4,"numIter":8,"numBrkt":8,"numChck":8,"numVald":4}}}