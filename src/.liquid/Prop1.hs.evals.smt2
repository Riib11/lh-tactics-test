(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Data.N 0)) ((par () (Data.Z (Data.S (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 Data.N))))))
(declare-datatypes ((Data.NL 0)) ((par () (Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 Data.N) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 Data.NL))))))
(declare-fun Language.Haskell.TH.Syntax.CharL () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun l$35$$35$a8vL () Data.NL)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.LanguageExtensions.Type.GADTs () Int)
(declare-fun GHC.LanguageExtensions.Type.TemplateHaskellQuotes () Int)
(declare-fun Language.Haskell.TH.Syntax.LitE () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Language.Haskell.TH.Syntax.ImplicitParamT () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Language.Haskell.TH.Syntax.TupleT () Int)
(declare-fun Language.Haskell.TH.Syntax.DataD () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboxedSumP () Int)
(declare-fun Data.countNL () Int)
(declare-fun papp6 () Int)
(declare-fun Data.takeNL () Int)
(declare-fun Language.Haskell.TH.Syntax.AppTypeE () Int)
(declare-fun GHC.LanguageExtensions.Type.CUSKs () Int)
(declare-fun Language.Haskell.TH.Syntax.ArithSeqE () Int)
(declare-fun Language.Haskell.TH.Syntax.TupE () Int)
(declare-fun GHC.LanguageExtensions.Type.NumDecimals () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveLift () Int)
(declare-fun GHC.LanguageExtensions.Type.AllowAmbiguousTypes () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun Language.Haskell.TH.Syntax.ClassI () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.LanguageExtensions.Type.MultiParamTypeClasses () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun GHC.LanguageExtensions.Type.ApplicativeDo () Int)
(declare-fun Language.Haskell.TH.Syntax.ClassD () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun fst () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun Language.Haskell.TH.Syntax.ForeignD () Int)
(declare-fun GHC.LanguageExtensions.Type.DuplicateRecordFields () Int)
(declare-fun snd () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.LanguageExtensions.Type.ImplicitParams () Int)
(declare-fun GHC.LanguageExtensions.Type.RankNTypes () Int)
(declare-fun Data.addN () Int)
(declare-fun GHC.LanguageExtensions.Type.ExplicitForAll () Int)
(declare-fun GHC.LanguageExtensions.Type.MonoLocalBinds () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun Language.Haskell.TH.Syntax.TySynInstD () Int)
(declare-fun Language.Haskell.TH.Syntax.Code () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lit$36$$35$Dec$35$NameBeginprop1_check$35$NameEnd$35$TypeBeginN$32$$45$$62$$32$NL$32$$45$$62$$32$Proof$35$TypeEnd$35$Lambda$35$NameBeginn$35$NameEnd$35$Lambda$35$NameBeginl$35$NameEnd$35$Case$35$ExpBeginn$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Z$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$ItemMatch$35$PatBeginData.S$32$n_0$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$ItemAutoExp$35$ExpBeginprop1_check$32$n_0$32$nL_1$35$ExpEnd$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$EndMatches () Str)
(declare-fun Language.Haskell.TH.Syntax.LitT () Int)
(declare-fun GHC.LanguageExtensions.Type.DatatypeContexts () Int)
(declare-fun Language.Haskell.TH.Syntax.PatSynD () Int)
(declare-fun Language.Haskell.TH.Syntax.InstanceD () Int)
(declare-fun Language.Haskell.TH.Syntax.TySynD () Int)
(declare-fun GHC.LanguageExtensions.Type.TemplateHaskell () Int)
(declare-fun GHC.LanguageExtensions.Type.FlexibleContexts () Int)
(declare-fun GHC.ForeignSrcLang.Type.RawObject () Int)
(declare-fun Language.Haskell.TH.Syntax.DecidedLazy () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun Language.Haskell.TH.Syntax.Infix () Int)
(declare-fun GHC.LanguageExtensions.Type.ParallelArrays () Int)
(declare-fun GHC.LanguageExtensions.Type.StandaloneDeriving () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.LanguageExtensions.Type.EmptyDataDeriving () Int)
(declare-fun Language.Haskell.TH.Syntax.TildeP () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveAnyClass () Int)
(declare-fun Language.Haskell.TH.Syntax.LetE () Int)
(declare-fun GHC.LanguageExtensions.Type.NondecreasingIndentation () Int)
(declare-fun Language.Haskell.TH.Syntax.NewtypeD () Int)
(declare-fun GHC.LanguageExtensions.Type.ForeignFunctionInterface () Int)
(declare-fun GHC.LanguageExtensions.Type.ExtendedDefaultRules () Int)
(declare-fun GHC.LanguageExtensions.Type.UnliftedNewtypes () Int)
(declare-fun Data.Maybe.maybe () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun Language.Haskell.TH.Syntax.LabelE () Int)
(declare-fun Language.Haskell.TH.Syntax.MDoE () Int)
(declare-fun Language.Haskell.TH.Syntax.PhantomR () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun Language.Haskell.TH.Syntax.RecConE () Int)
(declare-fun Data.concatNL () Int)
(declare-fun Language.Haskell.TH.Syntax.MultiIfE () Int)
(declare-fun papp1 () Int)
(declare-fun Language.Haskell.TH.Syntax.DataConI () Int)
(declare-fun Language.Haskell.TH.Syntax.Fixity () Int)
(declare-fun n_a8vF () Data.N)
(declare-fun GHC.LanguageExtensions.Type.BinaryLiterals () Int)
(declare-fun GHC.LanguageExtensions.Type.LiberalTypeSynonyms () Int)
(declare-fun GHC.LanguageExtensions.Type.LexicalNegation () Int)
(declare-fun GHC.ForeignSrcLang.Type.LangC () Int)
(declare-fun Language.Haskell.TH.Syntax.WildCardT () Int)
(declare-fun GHC.ForeignSrcLang.Type.LangCxx () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.LanguageExtensions.Type.FlexibleInstances () Int)
(declare-fun nL_a8vG () Data.NL)
(declare-fun Language.Haskell.TH.Syntax.ParensE () Int)
(declare-fun papp4 () Int)
(declare-fun Language.Haskell.TH.Syntax.DoE () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.LanguageExtensions.Type.GADTSyntax () Int)
(declare-fun Data.dropNL () Int)
(declare-fun lq_tmp$36$x$35$$35$749 () Int)
(declare-fun Language.Haskell.TH.Syntax.LamCaseE () Int)
(declare-fun Language.Haskell.TH.Syntax.TExp () Int)
(declare-fun Language.Haskell.TH.Syntax.FunD () Int)
(declare-fun GHC.LanguageExtensions.Type.MonadFailDesugaring () Int)
(declare-fun Language.Haskell.TH.Syntax.Alone () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeFamilies () Int)
(declare-fun GHC.LanguageExtensions.Type.NumericUnderscores () Int)
(declare-fun Language.Haskell.TH.Syntax.SigD () Int)
(declare-fun Language.Haskell.TH.Syntax.VarI () Int)
(declare-fun Language.Haskell.TH.Syntax.CompE () Int)
(declare-fun Language.Haskell.TH.Syntax.AppE () Int)
(declare-fun GHC.LanguageExtensions.Type.QualifiedDo () Int)
(declare-fun Language.Haskell.TH.Syntax.EqualityT () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun Language.Haskell.TH.Syntax.InfixT () Int)
(declare-fun Language.Haskell.TH.Syntax.AnnLookupName () Int)
(declare-fun Proof.trivial () Int)
(declare-fun Language.Haskell.TH.Syntax.NominalR () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun GHC.Ptr.Ptr () Int)
(declare-fun Language.Haskell.TH.Syntax.FamilyI () Int)
(declare-fun Language.Haskell.TH.Syntax.PromotedConsT () Int)
(declare-fun addrLen () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.LanguageExtensions.Type.QuasiQuotes () Int)
(declare-fun Language.Haskell.TH.Syntax.ParensT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc () Data.NL)
(declare-fun Language.Haskell.TH.Syntax.DoublePrimL () Int)
(declare-fun GHC.LanguageExtensions.Type.Cpp () Int)
(declare-fun is$36$GHC.Types.C$35$ () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun GHC.LanguageExtensions.Type.ImportQualifiedPost () Int)
(declare-fun GHC.LanguageExtensions.Type.AlternativeLayoutRule () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun GHC.LanguageExtensions.Type.ScopedTypeVariables () Int)
(declare-fun lit$36$Prop1 () Str)
(declare-fun Data.Tuple.snd () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun Language.Haskell.TH.Syntax.BangP () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun Language.Haskell.TH.Syntax.FloatPrimL () Int)
(declare-fun Language.Haskell.TH.Syntax.UInfixP () Int)
(declare-fun Language.Haskell.TH.Syntax.InfixE () Int)
(declare-fun GHC.LanguageExtensions.Type.PackageImports () Int)
(declare-fun Language.Haskell.TH.Syntax.SigP () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun Language.Haskell.TH.Syntax.AppKindT () Int)
(declare-fun n_a8vH () Data.N)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun Language.Haskell.TH.Syntax.AppT () Int)
(declare-fun Language.Haskell.TH.Syntax.ImplicitParamVarE () Int)
(declare-fun Language.Haskell.TH.Syntax.StarT () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Types.W$35$ () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboxedSumT () Int)
(declare-fun papp2 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun GHC.LanguageExtensions.Type.EmptyCase () Int)
(declare-fun GHC.LanguageExtensions.Type.NullaryTypeClasses () Int)
(declare-fun GHC.LanguageExtensions.Type.GHCForeignImportPrim () Int)
(declare-fun GHC.LanguageExtensions.Type.RecursiveDo () Int)
(declare-fun GHC.LanguageExtensions.Type.OverlappingInstances () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun Language.Haskell.TH.Syntax.PkgName () Int)
(declare-fun GHC.LanguageExtensions.Type.CApiFFI () Int)
(declare-fun Foreign.C.Types.CInt () Int)
(declare-fun GHC.LanguageExtensions.Type.StandaloneKindSignatures () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa () Data.N)
(declare-fun Language.Haskell.TH.Syntax.UnboxedTupE () Int)
(declare-fun GHC.LanguageExtensions.Type.TupleSections () Int)
(declare-fun GHC.LanguageExtensions.Type.NamedWildCards () Int)
(declare-fun charX () Int)
(declare-fun GHC.LanguageExtensions.Type.ConstrainedClassMethods () Int)
(declare-fun Language.Haskell.TH.Syntax.CondE () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeInType () Int)
(declare-fun GHC.LanguageExtensions.Type.TransformListComp () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun Language.Haskell.TH.Syntax.ListT () Int)
(declare-fun GHC.LanguageExtensions.Type.OverloadedStrings () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun Language.Haskell.TH.Syntax.ConT () Int)
(declare-fun GHC.LanguageExtensions.Type.ExistentialQuantification () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun Language.Haskell.TH.Syntax.TyConI () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun Language.Haskell.TH.Syntax.LitP () Int)
(declare-fun Language.Haskell.TH.Syntax.TyVarI () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboundVarE () Int)
(declare-fun GHC.LanguageExtensions.Type.RoleAnnotations () Int)
(declare-fun Language.Haskell.TH.Syntax.MulArrowT () Int)
(declare-fun Language.Haskell.TH.Syntax.ModName () Int)
(declare-fun GHC.LanguageExtensions.Type.MonomorphismRestriction () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.LanguageExtensions.Type.EmptyDataDecls () Int)
(declare-fun isJust () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboxedSumE () Int)
(declare-fun GHC.List.span () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveGeneric () Int)
(declare-fun Language.Haskell.TH.Syntax.TupP () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun Language.Haskell.TH.Syntax.DecidedUnpack () Int)
(declare-fun GHC.LanguageExtensions.Type.RelaxedPolyRec () Int)
(declare-fun Language.Haskell.TH.Syntax.WordPrimL () Int)
(declare-fun len () Int)
(declare-fun Language.Haskell.TH.Syntax.ModuleInfo () Int)
(declare-fun GHC.LanguageExtensions.Type.HexFloatLiterals () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Language.Haskell.TH.Syntax.DataInstD () Int)
(declare-fun lq_tmp$36$x$35$$35$844 () Data.NL)
(declare-fun Language.Haskell.TH.Syntax.ListE () Int)
(declare-fun Language.Haskell.TH.Syntax.DataName () Int)
(declare-fun Language.Haskell.TH.Syntax.ValD () Int)
(declare-fun GHC.LanguageExtensions.Type.StarIsType () Int)
(declare-fun GHC.LanguageExtensions.Type.FunctionalDependencies () Int)
(declare-fun Proof.$38$$38$$38$ () Int)
(declare-fun GHC.LanguageExtensions.Type.LinearTypes () Int)
(declare-fun GHC.List.last () Int)
(declare-fun Language.Haskell.TH.Syntax.ConE () Int)
(declare-fun Language.Haskell.TH.Syntax.Name () Int)
(declare-fun GHC.LanguageExtensions.Type.PatternGuards () Int)
(declare-fun GHC.LanguageExtensions.Type.ExplicitNamespaces () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveTraversable () Int)
(declare-fun GHC.LanguageExtensions.Type.MagicHash () Int)
(declare-fun Proof.use () Int)
(declare-fun GHC.ForeignSrcLang.Type.LangAsm () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeOperators () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveDataTypeable () Int)
(declare-fun Language.Haskell.TH.Syntax.DefaultSigD () Int)
(declare-fun Language.Haskell.TH.Syntax.Module () Int)
(declare-fun Language.Haskell.TH.Syntax.RoleAnnotD () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun GHC.LanguageExtensions.Type.NegativeLiterals () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun xs$35$$35$a8ve () Data.NL)
(declare-fun Language.Haskell.TH.Syntax.VarName () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun Prop1.prop1 () Int)
(declare-fun Language.Haskell.TH.Syntax.StaticE () Int)
(declare-fun GHC.LanguageExtensions.Type.UnboxedTuples () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun GHC.LanguageExtensions.Type.RecordWildCards () Int)
(declare-fun papp7 () Int)
(declare-fun Language.Haskell.TH.Syntax.VarP () Int)
(declare-fun GHC.LanguageExtensions.Type.AutoDeriveTypeable () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun GHC.LanguageExtensions.Type.PostfixOperators () Int)
(declare-fun GHC.LanguageExtensions.Type.NPlusKPatterns () Int)
(declare-fun GHC.Word.W8$35$ () Int)
(declare-fun GHC.LanguageExtensions.Type.MonoPatBinds () Int)
(declare-fun Foreign.C.Types.CSize () Int)
(declare-fun GHC.LanguageExtensions.Type.MonadComprehensions () Int)
(declare-fun GHC.LanguageExtensions.Type.InterruptibleFFI () Int)
(declare-fun GHC.LanguageExtensions.Type.UndecidableInstances () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.LanguageExtensions.Type.MultiWayIf () Int)
(declare-fun Language.Haskell.TH.Syntax.UInfixE () Int)
(declare-fun Language.Haskell.TH.Syntax.InfixP () Int)
(declare-fun GHC.LanguageExtensions.Type.BangPatterns () Int)
(declare-fun GHC.LanguageExtensions.Type.RelaxedLayout () Int)
(declare-fun Language.Haskell.TH.Syntax.Loc () Int)
(declare-fun Language.Haskell.TH.Syntax.PatSynI () Int)
(declare-fun Language.Haskell.TH.Syntax.SigE () Int)
(declare-fun Language.Haskell.TH.Syntax.ClosedTypeFamilyD () Int)
(declare-fun GHC.LanguageExtensions.Type.IncoherentInstances () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun GHC.LanguageExtensions.Type.BlockArguments () Int)
(declare-fun Language.Haskell.TH.Syntax.NewtypeInstD () Int)
(declare-fun GHC.LanguageExtensions.Type.DerivingStrategies () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.LanguageExtensions.Type.ImpredicativeTypes () Int)
(declare-fun Language.Haskell.TH.Syntax.OccName () Int)
(declare-fun GHC.LanguageExtensions.Type.AlternativeLayoutRuleTransitional () Int)
(declare-fun Language.Haskell.TH.Syntax.BytesPrimL () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.C$35$$35$$35$1 () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Language.Haskell.TH.Syntax.ParensP () Int)
(declare-fun cast_as () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun GHC.LanguageExtensions.Type.DerivingVia () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun Language.Haskell.TH.Syntax.KiSigD () Int)
(declare-fun GHC.LanguageExtensions.Type.JavaScriptFFI () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeFamilyDependencies () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun Language.Haskell.TH.Syntax.PromotedT () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.LanguageExtensions.Type.InstanceSigs () Int)
(declare-fun GHC.LanguageExtensions.Type.DoAndIfThenElse () Int)
(declare-fun GHC.LanguageExtensions.Type.DisambiguateRecordFields () Int)
(declare-fun Language.Haskell.TH.Syntax.OpenTypeFamilyD () Int)
(declare-fun Language.Haskell.TH.Syntax.PromotedTupleT () Int)
(declare-fun GHC.LanguageExtensions.Type.UnliftedFFITypes () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$K0u7lGLl6bJ4JOxrCqYqWt () Str)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun Language.Haskell.TH.Syntax.Bytes () Int)
(declare-fun Language.Haskell.TH.Syntax.IntPrimL () Int)
(declare-fun GHC.LanguageExtensions.Type.ParallelListComp () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun Language.Haskell.TH.Syntax.StringL () Int)
(declare-fun Data.$36$fEqNL () Int)
(declare-fun Language.Haskell.TH.Syntax.UInfixT () Int)
(declare-fun GHC.LanguageExtensions.Type.ImplicitPrelude () Int)
(declare-fun Language.Haskell.TH.Syntax.ConstraintT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb () Data.NL)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun Language.Haskell.TH.Syntax.SigT () Int)
(declare-fun Language.Haskell.TH.Syntax.TcClsName () Int)
(declare-fun Prop1.prop1_check () Int)
(declare-fun Proof.$61$$61$$61$ () Int)
(declare-fun Language.Haskell.TH.Syntax.PragmaD () Int)
(declare-fun GHC.LanguageExtensions.Type.RebindableSyntax () Int)
(declare-fun n_a8vI () Data.N)
(declare-fun x_Tuple33 () Int)
(declare-fun Language.Haskell.TH.Syntax.InferR () Int)
(declare-fun Language.Haskell.TH.Syntax.InfixD () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun GHC.LanguageExtensions.Type.RecordPuns () Int)
(declare-fun Language.Haskell.TH.Syntax.RecP () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun papp5 () Int)
(declare-fun Language.Haskell.TH.Syntax.StringPrimL () Int)
(declare-fun GHC.LanguageExtensions.Type.DeriveFunctor () Int)
(declare-fun GHC.IORef.IORef () Int)
(declare-fun GHC.LanguageExtensions.Type.ConstraintKinds () Int)
(declare-fun GHC.ForeignPtr.ForeignPtr () Int)
(declare-fun lq_tmp$36$x$35$$35$748 () Data.NL)
(declare-fun GHC.LanguageExtensions.Type.QuantifiedConstraints () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.LanguageExtensions.Type.ViewPatterns () Int)
(declare-fun GHC.LanguageExtensions.Type.UnicodeSyntax () Int)
(declare-fun GHC.LanguageExtensions.Type.Strict () Int)
(declare-fun Language.Haskell.TH.Syntax.ListP () Int)
(declare-fun Language.Haskell.TH.Syntax.CharPrimL () Int)
(declare-fun Proof.by () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun Language.Haskell.TH.Syntax.ConP () Int)
(declare-fun Language.Haskell.TH.Syntax.DataFamilyD () Int)
(declare-fun Language.Haskell.TH.Syntax.ForallVisT () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.LanguageExtensions.Type.LambdaCase () Int)
(declare-fun Language.Haskell.TH.Syntax.AsP () Int)
(declare-fun GHC.LanguageExtensions.Type.DataKinds () Int)
(declare-fun GHC.LanguageExtensions.Type.StrictData () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeSynonymInstances () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun Language.Haskell.TH.Syntax.IntegerL () Int)
(declare-fun GHC.LanguageExtensions.Type.DefaultSignatures () Int)
(declare-fun GHC.LanguageExtensions.Type.GeneralizedNewtypeDeriving () Int)
(declare-fun Language.Haskell.TH.Syntax.ImplicitParamBindD () Int)
(declare-fun GHC.LanguageExtensions.Type.OverloadedLabels () Int)
(declare-fun Language.Haskell.TH.Syntax.ViewP () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun Language.Haskell.TH.Syntax.LamE () Int)
(declare-fun Language.Haskell.TH.Syntax.ArrowT () Int)
(declare-fun GHC.List.head () Int)
(declare-fun Language.Haskell.TH.Syntax.DecidedStrict () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun Language.Haskell.TH.Syntax.Applied () Int)
(declare-fun Language.Haskell.TH.Syntax.StandaloneDerivD () Int)
(declare-fun GHC.LanguageExtensions.Type.PartialTypeSignatures () Int)
(declare-fun Language.Haskell.TH.Syntax.PromotedNilT () Int)
(declare-fun Language.Haskell.TH.Syntax.ClassOpI () Int)
(declare-fun Language.Haskell.TH.Syntax.RecUpdE () Int)
(declare-fun Language.Haskell.TH.Syntax.PrimTyConI () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun Language.Haskell.TH.Syntax.VarE () Int)
(declare-fun GHC.LanguageExtensions.Type.TypeApplications () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun Language.Haskell.TH.Syntax.PatSynSigD () Int)
(declare-fun GHC.LanguageExtensions.Type.PolyKinds () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboxedTupleT () Int)
(declare-fun nL_a8vJ () Data.NL)
(declare-fun GHC.LanguageExtensions.Type.DeriveFoldable () Int)
(declare-fun GHC.LanguageExtensions.Type.Arrows () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun GHC.LanguageExtensions.Type.PatternSynonyms () Int)
(declare-fun autolen () Int)
(declare-fun Data.Typeable.Internal.C$58$Typeable () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun Language.Haskell.TH.Syntax.RepresentationalR () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.LanguageExtensions.Type.TraditionalRecordSyntax () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun n$35$$35$a8vd () Data.N)
(declare-fun Language.Haskell.TH.Syntax.ForallT () Int)
(declare-fun GHC.LanguageExtensions.Type.UnboxedSums () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun Language.Haskell.TH.Syntax.UnboxedTupP () Int)
(declare-fun GHC.LanguageExtensions.Type.KindSignatures () Int)
(declare-fun Language.Haskell.TH.Syntax.RationalL () Int)
(declare-fun Language.Haskell.TH.Syntax.WildP () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.LanguageExtensions.Type.UndecidableSuperClasses () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun Language.Haskell.TH.Syntax.AnnLookupModule () Int)
(declare-fun Proof.QED () Int)
(declare-fun GHC.ForeignSrcLang.Type.LangObjcxx () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun Language.Haskell.TH.Syntax.CaseE () Int)
(declare-fun GHC.LanguageExtensions.Type.OverloadedLists () Int)
(declare-fun GHC.LanguageExtensions.Type.StaticPointers () Int)
(declare-fun GHC.ForeignSrcLang.Type.LangObjc () Int)
(declare-fun n$35$$35$a8vK () Data.N)
(declare-fun papp3 () Int)
(declare-fun Language.Haskell.TH.Syntax.VarT () Int)
(declare-fun apply$35$$35$17 (Int Str) Data.NL)
(declare-fun apply$35$$35$32 (Int Data.NL) Str)
(declare-fun apply$35$$35$19 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$34 (Int Data.NL) Data.N)
(declare-fun apply$35$$35$10 (Int Bool) Data.N)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$28 (Int Data.N) Data.N)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$31 (Int Data.NL) Bool)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$13 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Int)
(declare-fun apply$35$$35$16 (Int Str) Data.N)
(declare-fun apply$35$$35$24 (Int Data.N) Int)
(declare-fun apply$35$$35$14 (Int Str) Str)
(declare-fun apply$35$$35$15 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Data.NL)
(declare-fun apply$35$$35$29 (Int Data.N) Data.NL)
(declare-fun apply$35$$35$18 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$12 (Int Str) Int)
(declare-fun apply$35$$35$26 (Int Data.N) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$35 (Int Data.NL) Data.NL)
(declare-fun apply$35$$35$8 (Int Bool) Str)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$5 (Int Int) Data.NL)
(declare-fun apply$35$$35$30 (Int Data.NL) Int)
(declare-fun apply$35$$35$25 (Int Data.N) Bool)
(declare-fun apply$35$$35$27 (Int Data.N) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Data.N)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$7 (Int Bool) Bool)
(declare-fun apply$35$$35$4 (Int Int) Data.N)
(declare-fun apply$35$$35$11 (Int Bool) Data.NL)
(declare-fun apply$35$$35$33 (Int Data.NL) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (Str) Data.NL)
(declare-fun coerce$35$$35$32 (Data.NL) Str)
(declare-fun coerce$35$$35$19 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$34 (Data.NL) Data.N)
(declare-fun coerce$35$$35$10 (Bool) Data.N)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$28 (Data.N) Data.N)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$31 (Data.NL) Bool)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$13 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Int)
(declare-fun coerce$35$$35$16 (Str) Data.N)
(declare-fun coerce$35$$35$24 (Data.N) Int)
(declare-fun coerce$35$$35$14 (Str) Str)
(declare-fun coerce$35$$35$15 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Data.NL)
(declare-fun coerce$35$$35$29 (Data.N) Data.NL)
(declare-fun coerce$35$$35$18 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$12 (Str) Int)
(declare-fun coerce$35$$35$26 (Data.N) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$35 (Data.NL) Data.NL)
(declare-fun coerce$35$$35$8 (Bool) Str)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$5 (Int) Data.NL)
(declare-fun coerce$35$$35$30 (Data.NL) Int)
(declare-fun coerce$35$$35$25 (Data.N) Bool)
(declare-fun coerce$35$$35$27 (Data.N) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Data.N)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$7 (Bool) Bool)
(declare-fun coerce$35$$35$4 (Int) Data.N)
(declare-fun coerce$35$$35$11 (Bool) Data.NL)
(declare-fun coerce$35$$35$33 (Data.NL) (_ BitVec 32))
(declare-fun smt_lambda$35$$35$17 (Str Data.NL) Int)
(declare-fun smt_lambda$35$$35$32 (Data.NL Str) Int)
(declare-fun smt_lambda$35$$35$19 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$34 (Data.NL Data.N) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Data.N) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$28 (Data.N Data.N) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$31 (Data.NL Bool) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$13 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$16 (Str Data.N) Int)
(declare-fun smt_lambda$35$$35$24 (Data.N Int) Int)
(declare-fun smt_lambda$35$$35$14 (Str Str) Int)
(declare-fun smt_lambda$35$$35$15 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Data.NL) Int)
(declare-fun smt_lambda$35$$35$29 (Data.N Data.NL) Int)
(declare-fun smt_lambda$35$$35$18 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$12 (Str Int) Int)
(declare-fun smt_lambda$35$$35$26 (Data.N Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$35 (Data.NL Data.NL) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$5 (Int Data.NL) Int)
(declare-fun smt_lambda$35$$35$30 (Data.NL Int) Int)
(declare-fun smt_lambda$35$$35$25 (Data.N Bool) Int)
(declare-fun smt_lambda$35$$35$27 (Data.N (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Data.N) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int Data.N) Int)
(declare-fun smt_lambda$35$$35$11 (Bool Data.NL) Int)
(declare-fun smt_lambda$35$$35$33 (Data.NL (_ BitVec 32)) Int)
(declare-fun lam_arg$35$$35$1$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$2$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$3$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$4$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$5$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$6$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$7$35$$35$24 () Data.N)
(declare-fun lam_arg$35$$35$1$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$18 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$2$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$3$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$4$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$5$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$6$35$$35$30 () Data.NL)
(declare-fun lam_arg$35$$35$7$35$$35$30 () Data.NL)
(assert (distinct lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$K0u7lGLl6bJ4JOxrCqYqWt lit$36$Prop1 lit$36$$35$Dec$35$NameBeginprop1_check$35$NameEnd$35$TypeBeginN$32$$45$$62$$32$NL$32$$45$$62$$32$Proof$35$TypeEnd$35$Lambda$35$NameBeginn$35$NameEnd$35$Lambda$35$NameBeginl$35$NameEnd$35$Case$35$ExpBeginn$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Z$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$ItemMatch$35$PatBeginData.S$32$n_0$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$ItemAutoExp$35$ExpBeginprop1_check$32$n_0$32$nL_1$35$ExpEnd$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$EndMatches))

(assert (distinct Language.Haskell.TH.Syntax.PromotedNilT Language.Haskell.TH.Syntax.ArrowT Language.Haskell.TH.Syntax.ConstraintT Language.Haskell.TH.Syntax.MulArrowT Language.Haskell.TH.Syntax.ListT Language.Haskell.TH.Syntax.StarT Language.Haskell.TH.Syntax.PromotedConsT Language.Haskell.TH.Syntax.EqualityT Language.Haskell.TH.Syntax.WildCardT))


(assert (distinct Language.Haskell.TH.Syntax.Applied Language.Haskell.TH.Syntax.Alone Language.Haskell.TH.Syntax.Infix))

(assert (distinct Language.Haskell.TH.Syntax.RepresentationalR Language.Haskell.TH.Syntax.InferR Language.Haskell.TH.Syntax.NominalR Language.Haskell.TH.Syntax.PhantomR))
(assert (distinct Language.Haskell.TH.Syntax.DecidedStrict Language.Haskell.TH.Syntax.DecidedUnpack Language.Haskell.TH.Syntax.DecidedLazy))
(assert (distinct GHC.Types.False GHC.Types.True))

(assert (distinct GHC.LanguageExtensions.Type.StaticPointers GHC.LanguageExtensions.Type.OverloadedLists GHC.LanguageExtensions.Type.UndecidableSuperClasses GHC.LanguageExtensions.Type.KindSignatures GHC.LanguageExtensions.Type.UnboxedSums GHC.LanguageExtensions.Type.TraditionalRecordSyntax GHC.LanguageExtensions.Type.PatternSynonyms GHC.LanguageExtensions.Type.Arrows GHC.LanguageExtensions.Type.DeriveFoldable GHC.LanguageExtensions.Type.PolyKinds GHC.LanguageExtensions.Type.TypeApplications GHC.LanguageExtensions.Type.PartialTypeSignatures GHC.LanguageExtensions.Type.OverloadedLabels GHC.LanguageExtensions.Type.GeneralizedNewtypeDeriving GHC.LanguageExtensions.Type.DefaultSignatures GHC.LanguageExtensions.Type.TypeSynonymInstances GHC.LanguageExtensions.Type.StrictData GHC.LanguageExtensions.Type.DataKinds GHC.LanguageExtensions.Type.LambdaCase GHC.LanguageExtensions.Type.Strict GHC.LanguageExtensions.Type.UnicodeSyntax GHC.LanguageExtensions.Type.ViewPatterns GHC.LanguageExtensions.Type.QuantifiedConstraints GHC.LanguageExtensions.Type.ConstraintKinds GHC.LanguageExtensions.Type.DeriveFunctor GHC.LanguageExtensions.Type.RecordPuns GHC.LanguageExtensions.Type.RebindableSyntax GHC.LanguageExtensions.Type.ImplicitPrelude GHC.LanguageExtensions.Type.ParallelListComp GHC.LanguageExtensions.Type.UnliftedFFITypes GHC.LanguageExtensions.Type.DisambiguateRecordFields GHC.LanguageExtensions.Type.DoAndIfThenElse GHC.LanguageExtensions.Type.InstanceSigs GHC.LanguageExtensions.Type.TypeFamilyDependencies GHC.LanguageExtensions.Type.JavaScriptFFI GHC.LanguageExtensions.Type.DerivingVia GHC.LanguageExtensions.Type.AlternativeLayoutRuleTransitional GHC.LanguageExtensions.Type.ImpredicativeTypes GHC.LanguageExtensions.Type.DerivingStrategies GHC.LanguageExtensions.Type.BlockArguments GHC.LanguageExtensions.Type.IncoherentInstances GHC.LanguageExtensions.Type.RelaxedLayout GHC.LanguageExtensions.Type.BangPatterns GHC.LanguageExtensions.Type.MultiWayIf GHC.LanguageExtensions.Type.UndecidableInstances GHC.LanguageExtensions.Type.InterruptibleFFI GHC.LanguageExtensions.Type.MonadComprehensions GHC.LanguageExtensions.Type.MonoPatBinds GHC.LanguageExtensions.Type.NPlusKPatterns GHC.LanguageExtensions.Type.PostfixOperators GHC.LanguageExtensions.Type.AutoDeriveTypeable GHC.LanguageExtensions.Type.RecordWildCards GHC.LanguageExtensions.Type.UnboxedTuples GHC.LanguageExtensions.Type.NegativeLiterals GHC.LanguageExtensions.Type.DeriveDataTypeable GHC.LanguageExtensions.Type.TypeOperators GHC.LanguageExtensions.Type.MagicHash GHC.LanguageExtensions.Type.DeriveTraversable GHC.LanguageExtensions.Type.ExplicitNamespaces GHC.LanguageExtensions.Type.PatternGuards GHC.LanguageExtensions.Type.LinearTypes GHC.LanguageExtensions.Type.FunctionalDependencies GHC.LanguageExtensions.Type.StarIsType GHC.LanguageExtensions.Type.HexFloatLiterals GHC.LanguageExtensions.Type.RelaxedPolyRec GHC.LanguageExtensions.Type.DeriveGeneric GHC.LanguageExtensions.Type.EmptyDataDecls GHC.LanguageExtensions.Type.MonomorphismRestriction GHC.LanguageExtensions.Type.RoleAnnotations GHC.LanguageExtensions.Type.ExistentialQuantification GHC.LanguageExtensions.Type.OverloadedStrings GHC.LanguageExtensions.Type.TransformListComp GHC.LanguageExtensions.Type.TypeInType GHC.LanguageExtensions.Type.ConstrainedClassMethods GHC.LanguageExtensions.Type.NamedWildCards GHC.LanguageExtensions.Type.TupleSections GHC.LanguageExtensions.Type.StandaloneKindSignatures GHC.LanguageExtensions.Type.CApiFFI GHC.LanguageExtensions.Type.OverlappingInstances GHC.LanguageExtensions.Type.RecursiveDo GHC.LanguageExtensions.Type.GHCForeignImportPrim GHC.LanguageExtensions.Type.NullaryTypeClasses GHC.LanguageExtensions.Type.EmptyCase GHC.LanguageExtensions.Type.PackageImports GHC.LanguageExtensions.Type.ScopedTypeVariables GHC.LanguageExtensions.Type.AlternativeLayoutRule GHC.LanguageExtensions.Type.ImportQualifiedPost GHC.LanguageExtensions.Type.Cpp GHC.LanguageExtensions.Type.QuasiQuotes GHC.LanguageExtensions.Type.QualifiedDo GHC.LanguageExtensions.Type.NumericUnderscores GHC.LanguageExtensions.Type.TypeFamilies GHC.LanguageExtensions.Type.MonadFailDesugaring GHC.LanguageExtensions.Type.GADTSyntax GHC.LanguageExtensions.Type.FlexibleInstances GHC.LanguageExtensions.Type.LexicalNegation GHC.LanguageExtensions.Type.LiberalTypeSynonyms GHC.LanguageExtensions.Type.BinaryLiterals GHC.LanguageExtensions.Type.UnliftedNewtypes GHC.LanguageExtensions.Type.ExtendedDefaultRules GHC.LanguageExtensions.Type.ForeignFunctionInterface GHC.LanguageExtensions.Type.NondecreasingIndentation GHC.LanguageExtensions.Type.DeriveAnyClass GHC.LanguageExtensions.Type.EmptyDataDeriving GHC.LanguageExtensions.Type.StandaloneDeriving GHC.LanguageExtensions.Type.ParallelArrays GHC.LanguageExtensions.Type.FlexibleContexts GHC.LanguageExtensions.Type.TemplateHaskell GHC.LanguageExtensions.Type.DatatypeContexts GHC.LanguageExtensions.Type.MonoLocalBinds GHC.LanguageExtensions.Type.ExplicitForAll GHC.LanguageExtensions.Type.RankNTypes GHC.LanguageExtensions.Type.ImplicitParams GHC.LanguageExtensions.Type.DuplicateRecordFields GHC.LanguageExtensions.Type.ApplicativeDo GHC.LanguageExtensions.Type.MultiParamTypeClasses GHC.LanguageExtensions.Type.AllowAmbiguousTypes GHC.LanguageExtensions.Type.DeriveLift GHC.LanguageExtensions.Type.NumDecimals GHC.LanguageExtensions.Type.CUSKs GHC.LanguageExtensions.Type.TemplateHaskellQuotes GHC.LanguageExtensions.Type.GADTs))
(assert (distinct GHC.ForeignSrcLang.Type.LangObjc GHC.ForeignSrcLang.Type.LangObjcxx GHC.ForeignSrcLang.Type.LangAsm GHC.ForeignSrcLang.Type.LangCxx GHC.ForeignSrcLang.Type.LangC GHC.ForeignSrcLang.Type.RawObject))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))

(assert (distinct Language.Haskell.TH.Syntax.TcClsName Language.Haskell.TH.Syntax.VarName Language.Haskell.TH.Syntax.DataName))

(assert (= (strLen lit$36$$35$Dec$35$NameBeginprop1_check$35$NameEnd$35$TypeBeginN$32$$45$$62$$32$NL$32$$45$$62$$32$Proof$35$TypeEnd$35$Lambda$35$NameBeginn$35$NameEnd$35$Lambda$35$NameBeginl$35$NameEnd$35$Case$35$ExpBeginn$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Z$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$ItemMatch$35$PatBeginData.S$32$n_0$35$PatEnd$35$$44$$35$Case$35$ExpBeginl$35$ExpEnd$35$BeginMatches$35$ItemMatch$35$PatBeginData.Nil$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$EndAutoPreExps$35$TrivialPreExp$35$ItemMatch$35$PatBeginData.Cons$32$n_0$32$nL_1$35$PatEnd$35$$44$$35$AutoPreExp$35$BeginAutoPreExps$35$ItemAutoExp$35$ExpBeginprop1_check$32$n_0$32$nL_1$35$ExpEnd$35$EndAutoPreExps$35$TrivialPreExp$35$EndMatches$35$EndMatches) 769))
(assert (= (strLen lit$36$Prop1) 5))
(assert (= (strLen lit$36$lh$45$tactics$45$test$45$0.1.0.0$45$K0u7lGLl6bJ4JOxrCqYqWt) 46))
(push 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= Proof.trivial GHC.Tuple.$40$$41$) (= Proof.trivial Proof.trivial)))
(assert (= (is-Data.S Data.Z) false))
(assert (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa n$35$$35$a8vK))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z))))
(assert (= (is-Data.Z Data.Z) true))
(assert (not GHC.Types.False))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil))))
(assert GHC.Types.True)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (and (is-Data.Z Data.Z) (not (is-Data.S Data.Z)) (= Data.Z Data.Z)))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (is-Data.Nil Data.Nil) (not (is-Data.Cons Data.Nil)) (= Data.Nil Data.Nil)))
(assert true)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (is-Data.S Data.Z) false))
(assert (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa n$35$$35$a8vK))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb l$35$$35$a8vL))
(assert (= (is-Data.Z Data.Z) true))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (and (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) (not (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa)) (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa Data.Z) (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa n$35$$35$a8vK)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert true)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb)) (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb Data.Nil) (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb l$35$$35$a8vL)))
(assert (= (is-Data.S Data.Z) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (= (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) false))
(assert (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb l$35$$35$a8vL))
(assert (= (is-Data.Z Data.Z) true))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (and (= VV$35$$35$F$35$$35$7 GHC.Tuple.$40$$41$) (= VV$35$$35$F$35$$35$7 Proof.trivial)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) true))
(assert true)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(assert (and (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (is-Data.S Data.Z) false) (= (is-Data.Cons lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (is-Data.Cons Data.Nil) false) (= (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) false) (= (= Data.Nil l$35$$35$a8vL) true) (= (is-Data.Z Data.Z) true) (= (is-Data.Nil lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) true) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= Data.Nil l$35$$35$a8vL)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) true)))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= VV$35$$35$F$35$$35$6 GHC.Tuple.$40$$41$) (= VV$35$$35$F$35$$35$6 Proof.trivial)))
(assert (= (is-Data.S Data.Z) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (= (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) false))
(assert (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb l$35$$35$a8vL))
(assert (= (is-Data.Z Data.Z) true))
(assert (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb)) (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb l$35$$35$a8vL) (= lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb (Data.Cons n_a8vF nL_a8vG)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) nL_a8vG) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792826347$35$$35$d8wb) n_a8vF)))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) true))
(assert true)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Z n$35$$35$a8vK)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Z n$35$$35$a8vK))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Z n$35$$35$a8vK)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Z n$35$$35$a8vK))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (= (is-Data.Cons Data.Nil) false) (= (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) false) (= (is-Data.Z Data.Z) true) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) false) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) l$35$$35$a8vL) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) true) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) l$35$$35$a8vL)) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) true)))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (= (is-Data.Cons Data.Nil) false) (= (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) false) (= (is-Data.Z Data.Z) true) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) false) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) l$35$$35$a8vL) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) true) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) l$35$$35$a8vL)) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) true)))
(pop 1)
(pop 1)
(push 1)
(assert (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc l$35$$35$a8vL))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (is-Data.S lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) (not (is-Data.Z lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa)) (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa n$35$$35$a8vK) (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa (Data.S n_a8vH)) (= (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa) n_a8vH)))
(assert (= (is-Data.S Data.Z) false))
(assert (= lq_anf$36$$35$$35$7205759403792826346$35$$35$d8wa n$35$$35$a8vK))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (= (is-Data.Z Data.Z) true))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert true)
(push 1)
(assert (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc l$35$$35$a8vL))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= VV$35$$35$F$35$$35$5 GHC.Tuple.$40$$41$) (= VV$35$$35$F$35$$35$5 Proof.trivial)))
(assert (= (is-Data.S Data.Z) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (= (is-Data.Z Data.Z) true))
(assert (and (is-Data.Nil lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) (not (is-Data.Cons lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc)) (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc Data.Nil) (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc l$35$$35$a8vL)))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert true)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (is-Data.Nil lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (is-Data.Cons Data.Nil) false) (= (= Data.Nil l$35$$35$a8vL) true) (= (is-Data.Z Data.Z) true) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (is-Data.Cons lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) false) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= Data.Nil l$35$$35$a8vL)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) true)))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert true)
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (is-Data.Nil lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) Data.Nil) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (is-Data.Cons Data.Nil) false) (= (= Data.Nil l$35$$35$a8vL) true) (= (is-Data.Z Data.Z) true) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) Data.Nil) (= (is-Data.Cons lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) false) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= Data.Nil l$35$$35$a8vL)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) true)))
(pop 1)
(push 1)
(assert (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc l$35$$35$a8vL))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n_a8vH) nL_a8vJ) (= lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd (apply$35$$35$30 (apply$35$$35$24 Prop1.prop1_check n_a8vH) nL_a8vJ))))
(assert (= (is-Data.S Data.Z) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (is-Data.Cons Data.Nil) false))
(assert (and (= VV$35$$35$F$35$$35$4 lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) (= VV$35$$35$F$35$$35$4 (apply$35$$35$0 (apply$35$$35$0 Proof.$38$$38$$38$ lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) Proof.trivial))))
(assert (= (is-Data.Z Data.Z) true))
(assert (= (is-Data.Nil Data.Nil) true))
(assert (and (is-Data.Cons lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) (not (is-Data.Nil lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc)) (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc l$35$$35$a8vL) (= lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc (Data.Cons n_a8vI nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) nL_a8vJ) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 lq_anf$36$$35$$35$7205759403792826348$35$$35$d8wc) n_a8vI)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= Proof.trivial GHC.Tuple.$40$$41$))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert true)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Z n$35$$35$a8vK)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Z n$35$$35$a8vK))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil l$35$$35$a8vL))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Z n$35$$35$a8vK)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Z n$35$$35$a8vK))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) (= (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n_a8vH) nL_a8vJ) (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (is-Data.Cons Data.Nil) false) (= (apply$35$$35$0 (apply$35$$35$0 Proof.$38$$38$$38$ lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) Proof.trivial) lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n_a8vH) nL_a8vJ) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) false) (= (is-Data.Z Data.Z) true) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL)) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) false) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL)) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ) (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) true) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) false)))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert false)
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(assert (and (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) (= (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n_a8vH) nL_a8vJ) (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (is-Data.S Data.Z) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (= (is-Data.Cons Data.Nil) false) (= (apply$35$$35$0 (apply$35$$35$0 Proof.$38$$38$$38$ lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) Proof.trivial) lq_anf$36$$35$$35$7205759403792826349$35$$35$d8wd) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) true) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n_a8vH) nL_a8vJ) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) false) (= (is-Data.Z Data.Z) true) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))) l$35$$35$a8vL)) (= (is-Data.Nil Data.Nil) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (= (apply$35$$35$31 (apply$35$$35$24 Prop1.prop1 n$35$$35$a8vK) l$35$$35$a8vL) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL)) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) false) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) true) (= (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) l$35$$35$a8vL) (= (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n$35$$35$a8vK) l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n$35$$35$a8vK) l$35$$35$a8vL)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) (= (= (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL n_a8vH) nL_a8vJ)) nL_a8vJ) (= (ite (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (apply$35$$35$35 (apply$35$$35$30 Data.concatNL (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)) (apply$35$$35$35 (apply$35$$35$24 Data.dropNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))) nL_a8vJ)) (= (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL)) (= (apply$35$$35$35 (apply$35$$35$24 Data.takeNL n_a8vH) nL_a8vJ) (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= Proof.trivial GHC.Tuple.$40$$41$) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (is-Data.Cons (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))) true) (= (is-Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 l$35$$35$a8vL) (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))) false)))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil nL_a8vJ) Data.Nil (ite (is-Data.Z n_a8vH) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 nL_a8vJ) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n_a8vH)) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 nL_a8vJ)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil (ite (is-Data.Nil (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) Data.Nil (ite (is-Data.Z (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK)) Data.Nil (Data.Cons (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$2 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL)) (apply$35$$35$35 (apply$35$$35$24 Data.takeNL (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.S$35$$35$1 n$35$$35$a8vK))) (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 (lqdc$35$$35$$36$select$35$$35$Data.Cons$35$$35$1 l$35$$35$a8vL))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Data.Nil nL_a8vJ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (is-Data.Nil nL_a8vJ))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
