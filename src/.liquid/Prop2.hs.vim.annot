1:1-1:1::Prop2.$trModule :: "GHC.Types.Module"
16:1-16:6::Prop2.prop2 :: "x1:Data.N -> x2:Data.ListN -> x3:Data.ListN -> {VV : GHC.Types.Bool | VV == prop2 x1 x2 x3\n                                                                      && VV == (addN (countListN x1 x2) (countListN x1 x3) == countListN x1 (concatListN x2 x3))}"
16:7-16:8::n :: "Data.N"
16:9-16:11::xs :: "Data.ListN"
16:12-16:14::ys :: "Data.ListN"
16:17-16:57::lq_anf$##7205759403792824900 :: "Data.N"
16:22-16:39::lq_anf$##7205759403792824898 :: "{v : Data.N | v == countListN n xs}"
16:34-16:35::n :: "{v : Data.N | v == n}"
16:36-16:38::xs :: "{v : Data.ListN | v == xs}"
16:40-16:57::lq_anf$##7205759403792824899 :: "{v : Data.N | v == countListN n ys}"
16:52-16:53::n :: "{v : Data.N | v == n}"
16:54-16:56::ys :: "{v : Data.ListN | v == ys}"
16:61-16:93::lq_anf$##7205759403792824902 :: "Data.N"
16:72-16:73::n :: "{v : Data.N | v == n}"
16:74-16:93::lq_anf$##7205759403792824901 :: "{v : Data.ListN | v == concatListN xs ys}"
16:87-16:89::xs :: "{v : Data.ListN | v == xs}"
16:90-16:92::ys :: "{v : Data.ListN | v == ys}"