{"o_vars":null,"o_types":[[{"spanInfo":{"endCol":1,"startCol":1,"startLine":1,"filename":"src/Test2.hs","endLine":1},"realSpan":true},[["Test2.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"endCol":26,"startCol":1,"startLine":23,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["lq_anf$##7205759403792822989","Test2.N"]]],[{"spanInfo":{"endCol":10,"startCol":9,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":9,"startCol":1,"startLine":39,"filename":"src/Test2.hs","endLine":39},"realSpan":true},[["Test2.add_m_Sn","Test2.N -> Test2.N -> ()"]]],[{"spanInfo":{"endCol":26,"startCol":15,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["Test2.S","x1:Test2.N -> {v : Test2.N | v == S x1\n                             && lqdc##$select v == x1}"]]],[{"spanInfo":{"endCol":13,"startCol":12,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":8,"startCol":7,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":12,"startCol":11,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["n","{v : Test2.N | v == n}"]]],[{"spanInfo":{"endCol":26,"startCol":17,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["lq_anf$##7205759403792822990","{v : Test2.N | v == add m n}"]]],[{"spanInfo":{"endCol":9,"startCol":1,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["Test2.add_comm","Test2.N -> Test2.N -> ()"]]],[{"spanInfo":{"endCol":22,"startCol":1,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["$dIP_a7DK","{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a7DK}"]]],[{"spanInfo":{"endCol":11,"startCol":10,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["m","Test2.N"]]],[{"spanInfo":{"endCol":25,"startCol":1,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["$dIP_a7DG","{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a7DG}"]]],[{"spanInfo":{"endCol":8,"startCol":1,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["Test2.add_n_Z","Test2.N -> ()"]]],[{"spanInfo":{"endCol":21,"startCol":1,"startLine":39,"filename":"src/Test2.hs","endLine":39},"realSpan":true},[["$dIP_a7DO","{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a7DO}"]]],[{"spanInfo":{"endCol":25,"startCol":24,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["n","{v : Test2.N | v == n}"]]],[{"spanInfo":{"endCol":23,"startCol":22,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["m","{v : Test2.N | v == m}"]]],[{"spanInfo":{"endCol":4,"startCol":1,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["Test2.add","x1:Test2.N -> x2:Test2.N -> {VV : Test2.N | VV == add x1 x2}"]]]],"o_templs":[[{"spanInfo":{"endCol":1,"startCol":1,"startLine":1,"filename":"src/Test2.hs","endLine":1},"realSpan":true},[["Test2.$trModule","{VV##610 : GHC.Types.Module | $k_##611}"]]],[{"spanInfo":{"endCol":26,"startCol":1,"startLine":23,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["lq_anf$##7205759403792822989","{lq_tmp$x##575 : Test2.N | lq_tmp$x##575 == ds_d7DW}"]]],[{"spanInfo":{"endCol":10,"startCol":9,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":9,"startCol":1,"startLine":39,"filename":"src/Test2.hs","endLine":39},"realSpan":true},[["Test2.add_m_Sn","lq_tmp$x##1025:Test2.N -> lq_tmp$x##1026:Test2.N -> ()"]]],[{"spanInfo":{"endCol":26,"startCol":15,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["Test2.S","lq_tmp$x##607:Test2.N -> {lq_tmp$x##605 : Test2.N | is$Test2.S lq_tmp$x##605\n                                                    && not (is$Test2.Z lq_tmp$x##605)\n                                                    && lq_tmp$x##605 == Test2.S lq_tmp$x##607\n                                                    && lqdc##$select##Test2.S##1 lq_tmp$x##605 == lq_tmp$x##607}"]]],[{"spanInfo":{"endCol":13,"startCol":12,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":8,"startCol":7,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["n","Test2.N"]]],[{"spanInfo":{"endCol":12,"startCol":11,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["n","{lq_tmp$x##582 : Test2.N | lq_tmp$x##582 == n##a7CA}"]]],[{"spanInfo":{"endCol":26,"startCol":17,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["lq_anf$##7205759403792822990","{lq_tmp$x##596 : Test2.N | lq_tmp$x##596 == Test2.add m##a7CB n##a7CA\n                           && lq_tmp$x##596 == (if is$Test2.Z m##a7CB then n##a7CA else Test2.S (Test2.add (lqdc##$select##Test2.S##1 m##a7CB) n##a7CA))}"]]],[{"spanInfo":{"endCol":9,"startCol":1,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["Test2.add_comm","lq_tmp$x##1523:Test2.N -> lq_tmp$x##1524:Test2.N -> ()"]]],[{"spanInfo":{"endCol":22,"startCol":1,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["$dIP_a7DK","{lq_tmp$x##1303 : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | lq_tmp$x##1303 == $dIP_a7DK}"]]],[{"spanInfo":{"endCol":11,"startCol":10,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["m","Test2.N"]]],[{"spanInfo":{"endCol":25,"startCol":1,"startLine":67,"filename":"src/Test2.hs","endLine":67},"realSpan":true},[["$dIP_a7DG","{lq_tmp$x##1549 : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | lq_tmp$x##1549 == $dIP_a7DG}"]]],[{"spanInfo":{"endCol":8,"startCol":1,"startLine":52,"filename":"src/Test2.hs","endLine":52},"realSpan":true},[["Test2.add_n_Z","lq_tmp$x##1279:Test2.N -> ()"]]],[{"spanInfo":{"endCol":21,"startCol":1,"startLine":39,"filename":"src/Test2.hs","endLine":39},"realSpan":true},[["$dIP_a7DO","{lq_tmp$x##1059 : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | lq_tmp$x##1059 == $dIP_a7DO}"]]],[{"spanInfo":{"endCol":25,"startCol":24,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["n","{lq_tmp$x##602 : Test2.N | lq_tmp$x##602 == n##a7CA}"]]],[{"spanInfo":{"endCol":23,"startCol":22,"startLine":24,"filename":"src/Test2.hs","endLine":24},"realSpan":true},[["m","{lq_tmp$x##601 : Test2.N | lq_tmp$x##601 == m##a7CB}"]]],[{"spanInfo":{"endCol":4,"startCol":1,"startLine":23,"filename":"src/Test2.hs","endLine":23},"realSpan":true},[["Test2.add","lq_tmp$x##568:Test2.N -> lq_tmp$x##569:Test2.N -> {VV : Test2.N | VV == Test2.add lq_tmp$x##568 lq_tmp$x##569\n                                                                  && VV == (if is$Test2.Z lq_tmp$x##568 then lq_tmp$x##569 else Test2.S (Test2.add (lqdc##$select##Test2.S##1 lq_tmp$x##568) lq_tmp$x##569))}"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":0,"numIter":0,"numBrkt":0,"numChck":0,"numVald":0}}}